{"ast":null,"code":"var _jsxFileName = \"D:\\\\pelatihan\\\\batch 27\\\\Literature\\\\client\\\\src\\\\screen\\\\detail-literature\\\\detail-literature.js\",\n    _s = $RefreshSig$();\n\nimport './detail-literature.css';\nimport Navbar from '../../components/navbar';\nimport { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { API } from '../../config/api';\nimport dateFormat from \"dateformat\";\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Link } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nexport default function DetailLiterature() {\n  _s();\n\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n  const user = sessionStorage.getItem('user');\n  const [literature, setLiterature] = useState([]);\n\n  const getLiterature = async id => {\n    try {\n      const response = await API.get(`/literature/${id}`);\n      setLiterature(response.data.data);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getLiterature(id);\n  }, []);\n\n  const collection = async e => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const data = {\n      \"idUser\": user,\n      \"idLiterature\": id\n    };\n    const response = await API.post('/favorite', data, config);\n    console.log(response);\n    history.push('/my-collection');\n  };\n\n  const Pdf = () => {\n    if (typeof literature.image == \"undefined\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Document, {\n        file: require(`../../../../server/uploads/${literature.image}`).default,\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  const Btn = () => {\n    if (typeof literature.image == \"undefined\") {\n      return /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            color: \"white\"\n          },\n          id: \"btn\",\n          to: require(`../../../../server/uploads/${literature.image}`).default,\n          target: \"_blank\",\n          download: true,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    }\n  };\n\n  const [collections, setCollection] = useState([]);\n\n  const getCollection = async () => {\n    try {\n      const response = await API.get(`/favorites`);\n      setCollection(response.data.data);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getCollection();\n  }, []);\n  const [coll, setColl] = useState(false);\n\n  const MyCollection = () => {\n    if (collections.length != 0) {\n      for (let i = 0; i <= collections.length; i++) {\n        if (collections[i].idUser == user && collections[i].idLiterature == id) {\n          setColl(true);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    MyCollection();\n  }, []);\n  console.log(coll);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"detail-literature\",\n      children: [/*#__PURE__*/_jsxDEV(Pdf, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"literature\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white',\n            fontSize: 36\n          },\n          children: literature.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#929292',\n            fontSize: 24\n          },\n          children: literature.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'white',\n            fontSize: 24,\n            marginTop: 35\n          },\n          children: \"Publication Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#929292',\n            fontSize: 18\n          },\n          children: dateFormat(literature.publication_date, \"dddd, d mmmm yyyy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'white',\n            fontSize: 24,\n            marginTop: 35\n          },\n          children: \"Pages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#929292',\n            fontSize: 18\n          },\n          children: literature.pages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#AF2E1C',\n            fontSize: 24,\n            marginTop: 35\n          },\n          children: \"ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#929292',\n            fontSize: 18\n          },\n          children: literature.isbn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Btn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btn-literature\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: collection,\n          children: \"Add My Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DetailLiterature, \"DjHHtbrWC8XB7irjiPUTeUrYon4=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DetailLiterature;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailLiterature\");","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/src/screen/detail-literature/detail-literature.js"],"names":["Navbar","useState","useEffect","useParams","useHistory","API","dateFormat","Document","Page","pdfjs","Link","GlobalWorkerOptions","workerSrc","version","DetailLiterature","history","id","user","sessionStorage","getItem","literature","setLiterature","getLiterature","response","get","data","console","log","error","collection","e","preventDefault","config","headers","post","push","Pdf","image","require","default","Btn","color","collections","setCollection","getCollection","coll","setColl","MyCollection","length","i","idUser","idLiterature","fontSize","title","author","marginTop","publication_date","pages","isbn"],"mappings":"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","sourcesContent":["import './detail-literature.css'\r\nimport Navbar from '../../components/navbar'\r\nimport { useState,useEffect } from 'react';\r\nimport { useParams,useHistory } from 'react-router-dom';\r\nimport {API} from '../../config/api'\r\nimport dateFormat from \"dateformat\";\r\nimport { Document, Page,pdfjs } from 'react-pdf';\r\nimport { Link } from 'react-router-dom'\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\n\r\nexport default function DetailLiterature(){\r\n    let history = useHistory()\r\n    let { id } = useParams();\r\n    const user = sessionStorage.getItem('user')\r\n    const [literature,setLiterature] = useState([])\r\n    const getLiterature = async (id) => {\r\n        try {\r\n          const response = await API.get(`/literature/${id}`);\r\n          setLiterature(response.data.data);\r\n          console.log(response)\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n      useEffect(() => {\r\n        getLiterature(id);\r\n        \r\n      }, []);\r\n\r\n      const collection =async(e)=>{\r\n        e.preventDefault()\r\n        \r\n        const config ={\r\n            headers:{\r\n              \"Content-type\": \"application/json\",\r\n            }\r\n        }\r\n        const data =({\"idUser\":user, \"idLiterature\":id})\r\n    \r\n        const response = await API.post('/favorite',data,config)\r\n        console.log(response)\r\n        history.push('/my-collection')\r\n      }\r\n      \r\n     \r\n      const Pdf =()=>{\r\n        if(typeof(literature.image) == \"undefined\"){\r\n         \r\n          return(\r\n            <></>\r\n          )\r\n        }else{\r\n          return(\r\n            <Document file={require(`../../../../server/uploads/${literature.image}`).default} >\r\n            <Page pageNumber={1} />\r\n          </Document>\r\n           \r\n\r\n          )\r\n        }\r\n      }\r\n      const Btn =()=>{\r\n        if(typeof(literature.image) == \"undefined\"){\r\n          return(<button></button>)\r\n        }else{\r\n          return(                \r\n          <button><Link style={{color:\"white\"}} id=\"btn\" to={require(`../../../../server/uploads/${literature.image}`).default} target=\"_blank\" download>Download</Link></button>\r\n          )\r\n        }\r\n      }\r\n\r\n   \r\n    const [collections, setCollection] = useState([])\r\n    const getCollection = async () => {\r\n        try {\r\n        \r\n          const response = await API.get(`/favorites`);\r\n          setCollection(response.data.data);\r\n          console.log(response)\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        getCollection();\r\n        \r\n      }, []);\r\n      \r\n      const [coll,setColl]=useState(false)\r\n      const MyCollection=()=>{\r\n        if(collections.length !=0){\r\n        for(let i =0;i<=collections.length;i++){\r\n          if(collections[i].idUser == user && collections[i].idLiterature == id){\r\n            setColl(true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n      useEffect(() => {\r\n        MyCollection();\r\n        \r\n      }, []);\r\n      console.log(coll)\r\n    return(\r\n        <>\r\n        <Navbar/>\r\n        <div id=\"detail-literature\">\r\n            <Pdf/>\r\n            <div id=\"literature\">\r\n                <h1 style={{color:'white', fontSize:36,}}>{literature.title}</h1>\r\n                <h3 style={{color:'#929292', fontSize:24,}}>{literature.author}</h3>\r\n                <h2 style={{color:'white', fontSize:24,marginTop:35}}>Publication Date</h2>\r\n                <h3 style={{color:'#929292', fontSize:18,}}>{dateFormat(literature.publication_date, \"dddd, d mmmm yyyy\")}</h3>\r\n                <h2 style={{color:'white', fontSize:24,marginTop:35}}>Pages</h2>\r\n                <h3 style={{color:'#929292', fontSize:18,}}>{literature.pages}</h3>\r\n                <h2 style={{color:'#AF2E1C', fontSize:24,marginTop:35}}>ISBN</h2>\r\n                <h3 style={{color:'#929292', fontSize:18,}}>{literature.isbn}</h3>\r\n                <Btn/>\r\n            </div>\r\n            <div id='btn-literature'>\r\n                <button onClick={collection}>Add My Collection</button>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}