{"ast":null,"code":"var _jsxFileName = \"D:\\\\pelatihan\\\\batch 27\\\\Literature\\\\client\\\\src\\\\routes\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Home from \"../screen/home/Home\";\nimport Search from \"../screen/search/search\";\nimport AddLiterature from \"../screen/add-literature/add-literature\";\nimport Profile from \"../screen/profile/profile\";\nimport MyCollection from \"../screen/my-collection/my-collection\";\nimport DetailLiterature from \"../screen/detail-literature/detail-literature\";\nimport SearchResult from \"../screen/search-result/search-result\";\nimport { Route, Switch } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { API, setAuthToken } from '../config/api';\nimport IndexOwner from '../screen/index-owner/index-owner';\nimport { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let history = useHistory();\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    const isLogin = sessionStorage.getItem('isLogin');\n    const status = sessionStorage.getItem('status'); // Redirect Auth\n\n    if (!isLogin) {\n      history.push(\"/search\");\n    } else {\n      if (status === \"admin\") {\n        history.push(\"/index-owner\");\n      } else if (status === \"user\") {\n        history.push(\"/search\");\n      }\n    }\n  }, []);\n\n  const checkUser = async () => {\n    try {\n      const response = await API.get(\"/check-auth\"); // If the token incorrect\n      // Get user data\n\n      let payload = response.data.data.user; // Get token from local storage\n\n      payload.token = localStorage.token; // Send data to useContext\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n  const isLogin = JSON.parse(sessionStorage.getItem('isLogin'));\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      component: Search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/add-literature\",\n      component: AddLiterature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isLogin && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile/:id\",\n      component: Profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/my-collection\",\n      component: MyCollection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/detail-literature\",\n      component: DetailLiterature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search-result\",\n      component: SearchResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/index-owner\",\n      component: IndexOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3WyoFml4oZXE7oPo4ynvC0RjEsU=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/src/routes/App.js"],"names":["Home","Search","AddLiterature","Profile","MyCollection","DetailLiterature","SearchResult","Route","Switch","useHistory","API","setAuthToken","IndexOwner","useEffect","useState","useContext","UserContext","App","history","localStorage","token","isLogin","sessionStorage","getItem","status","push","checkUser","response","get","payload","data","user","error","console","log","JSON","parse"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,GAAR,EAAYC,YAAZ,QAA+B,eAA/B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,OAAO,GAAET,UAAU,EAAvB;AAGAI,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIM,YAAY,CAACC,KAAjB,EAAwB;AACtBT,MAAAA,YAAY,CAACQ,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,UAAMC,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAhB;AACA,UAAMC,MAAM,GAAGF,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAf,CANc,CAOd;;AACA,QAAI,CAACF,OAAL,EAAc;AACZH,MAAAA,OAAO,CAACO,IAAR,CAAa,SAAb;AACD,KAFD,MAEO;AACL,UAAID,MAAM,KAAK,OAAf,EAAwB;AACtBN,QAAAA,OAAO,CAACO,IAAR,CAAa,cAAb;AACD,OAFD,MAEO,IAAID,MAAM,KAAK,MAAf,EAAuB;AAC5BN,QAAAA,OAAO,CAACO,IAAR,CAAa,SAAb;AACD;AACF;AACF,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMC,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAJ,CAAQ,aAAR,CAAvB,CADE,CAGF;AACA;;AACA,UAAIC,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBC,IAAjC,CALE,CAMF;;AACAF,MAAAA,OAAO,CAACT,KAAR,GAAgBD,YAAY,CAACC,KAA7B,CAPE,CASF;AACD,KAVD,CAUE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAdD;;AAgBAnB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAML,OAAO,GAAGc,IAAI,CAACC,KAAL,CAAWd,cAAc,CAACC,OAAf,CAAuB,SAAvB,CAAX,CAAhB;AACA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEvB;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,SAAd;AAAwB,MAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,iBAAd;AAAgC,MAAA,SAAS,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGmB,OAAO,iBAAI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,cAAd;AAA6B,MAAA,SAAS,EAAElB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJd,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,gBAAd;AAA+B,MAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,oBAAd;AAAmC,MAAA,SAAS,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,gBAAd;AAA+B,MAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,cAAd;AAA6B,MAAA,SAAS,EAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvDQK,G;UACMR,U;;;KADNQ,G;AAyDT,eAAeA,GAAf","sourcesContent":["import Home from \"../screen/home/Home\";\nimport Search from \"../screen/search/search\";\nimport AddLiterature from \"../screen/add-literature/add-literature\";\nimport Profile from \"../screen/profile/profile\";\nimport MyCollection from \"../screen/my-collection/my-collection\";\nimport DetailLiterature from \"../screen/detail-literature/detail-literature\";\nimport SearchResult from \"../screen/search-result/search-result\";\nimport {Route, Switch} from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport {API,setAuthToken} from '../config/api'\nimport IndexOwner from '../screen/index-owner/index-owner'\nimport { useEffect ,useState} from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\n\n\nfunction App() {\n  let history =useHistory()\n \n\n  useEffect(() => {\n    \n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    const isLogin = sessionStorage.getItem('isLogin')\n    const status = sessionStorage.getItem('status')\n    // Redirect Auth\n    if (!isLogin) {\n      history.push(\"/search\");\n    } else {\n      if (status === \"admin\") {\n        history.push(\"/index-owner\");\n      } else if (status === \"user\") {\n        history.push(\"/search\");\n      }\n    }\n  }, []);\n\n  const checkUser = async () => {\n    try {\n      const response = await API.get(\"/check-auth\");\n\n      // If the token incorrect\n      // Get user data\n      let payload = response.data.data.user;\n      // Get token from local storage\n      payload.token = localStorage.token;\n\n      // Send data to useContext\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n  const isLogin = JSON.parse(sessionStorage.getItem('isLogin'))\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path  =\"/search\" component={Search} />\n      <Route path  =\"/add-literature\" component={AddLiterature} />\n      {isLogin && <Route path  =\"/profile/:id\" component={Profile} />}\n      <Route path  =\"/my-collection\" component={MyCollection} />\n      <Route path  =\"/detail-literature\" component={DetailLiterature} />\n      <Route path  =\"/search-result\" component={SearchResult} />\n      <Route path  =\"/index-owner\" component={IndexOwner} />\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}