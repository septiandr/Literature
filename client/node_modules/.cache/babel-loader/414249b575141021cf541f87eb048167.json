{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getDefs = _interopRequireDefault(require(\"./getDefs\"));\n\nvar isDefs = R.propEq('type', P.Defs);\nvar isNotDefs = R.complement(isDefs);\nvar detachDefs = R.evolve({\n  children: R.filter(isNotDefs)\n});\nvar URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nvar replaceDef = function replaceDef(defs) {\n  return R.compose(R.when(R.test(URL_REGEX), R.compose(R.prop(R.__, defs), R.prop(1), R.match(URL_REGEX))), R.defaultTo(''));\n};\n\nvar parseNodeDefs = function parseNodeDefs(defs) {\n  return function (node) {\n    return R.compose(R.evolve({\n      props: R.evolve({\n        fill: replaceDef(defs),\n        clipPath: replaceDef(defs)\n      })\n    }), R.evolve({\n      children: R.map(parseNodeDefs(defs))\n    }))(node);\n  };\n};\n\nvar parseDefs = function parseDefs(root) {\n  var defs = (0, _getDefs.default)(root);\n  return R.evolve({\n    children: R.map(parseNodeDefs(defs))\n  }, root);\n};\n\nvar replaceDefs = R.compose(detachDefs, parseDefs);\nvar _default = replaceDefs;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/svg/replaceDefs.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","P","_getDefs","isDefs","propEq","Defs","isNotDefs","complement","detachDefs","evolve","children","filter","URL_REGEX","replaceDef","defs","compose","when","test","prop","__","match","defaultTo","parseNodeDefs","node","props","fill","clipPath","map","parseDefs","root","replaceDefs","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,CAAC,GAAGL,uBAAuB,CAACD,OAAO,CAAC,uBAAD,CAAR,CAA/B;;AAEA,IAAIO,QAAQ,GAAGR,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIQ,MAAM,GAAGH,CAAC,CAACI,MAAF,CAAS,MAAT,EAAiBH,CAAC,CAACI,IAAnB,CAAb;AACA,IAAIC,SAAS,GAAGN,CAAC,CAACO,UAAF,CAAaJ,MAAb,CAAhB;AACA,IAAIK,UAAU,GAAGR,CAAC,CAACS,MAAF,CAAS;AACxBC,EAAAA,QAAQ,EAAEV,CAAC,CAACW,MAAF,CAASL,SAAT;AADc,CAAT,CAAjB;AAGA,IAAIM,SAAS,GAAG,4BAAhB;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACzC,SAAOd,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACgB,IAAF,CAAOhB,CAAC,CAACiB,IAAF,CAAOL,SAAP,CAAP,EAA0BZ,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACkB,IAAF,CAAOlB,CAAC,CAACmB,EAAT,EAAaL,IAAb,CAAV,EAA8Bd,CAAC,CAACkB,IAAF,CAAO,CAAP,CAA9B,EAAyClB,CAAC,CAACoB,KAAF,CAAQR,SAAR,CAAzC,CAA1B,CAAV,EAAmGZ,CAAC,CAACqB,SAAF,CAAY,EAAZ,CAAnG,CAAP;AACD,CAFD;;AAIA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBR,IAAvB,EAA6B;AAC/C,SAAO,UAAUS,IAAV,EAAgB;AACrB,WAAOvB,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACS,MAAF,CAAS;AACxBe,MAAAA,KAAK,EAAExB,CAAC,CAACS,MAAF,CAAS;AACdgB,QAAAA,IAAI,EAAEZ,UAAU,CAACC,IAAD,CADF;AAEdY,QAAAA,QAAQ,EAAEb,UAAU,CAACC,IAAD;AAFN,OAAT;AADiB,KAAT,CAAV,EAKHd,CAAC,CAACS,MAAF,CAAS;AACXC,MAAAA,QAAQ,EAAEV,CAAC,CAAC2B,GAAF,CAAML,aAAa,CAACR,IAAD,CAAnB;AADC,KAAT,CALG,EAOHS,IAPG,CAAP;AAQD,GATD;AAUD,CAXD;;AAaA,IAAIK,SAAS,GAAG,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvC,MAAIf,IAAI,GAAG,CAAC,GAAGZ,QAAQ,CAACH,OAAb,EAAsB8B,IAAtB,CAAX;AACA,SAAO7B,CAAC,CAACS,MAAF,CAAS;AACdC,IAAAA,QAAQ,EAAEV,CAAC,CAAC2B,GAAF,CAAML,aAAa,CAACR,IAAD,CAAnB;AADI,GAAT,EAEJe,IAFI,CAAP;AAGD,CALD;;AAOA,IAAIC,WAAW,GAAG9B,CAAC,CAACe,OAAF,CAAUP,UAAV,EAAsBoB,SAAtB,CAAlB;AACA,IAAIG,QAAQ,GAAGD,WAAf;AACAjC,OAAO,CAACE,OAAR,GAAkBgC,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _getDefs = _interopRequireDefault(require(\"./getDefs\"));\n\nvar isDefs = R.propEq('type', P.Defs);\nvar isNotDefs = R.complement(isDefs);\nvar detachDefs = R.evolve({\n  children: R.filter(isNotDefs)\n});\nvar URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nvar replaceDef = function replaceDef(defs) {\n  return R.compose(R.when(R.test(URL_REGEX), R.compose(R.prop(R.__, defs), R.prop(1), R.match(URL_REGEX))), R.defaultTo(''));\n};\n\nvar parseNodeDefs = function parseNodeDefs(defs) {\n  return function (node) {\n    return R.compose(R.evolve({\n      props: R.evolve({\n        fill: replaceDef(defs),\n        clipPath: replaceDef(defs)\n      })\n    }), R.evolve({\n      children: R.map(parseNodeDefs(defs))\n    }))(node);\n  };\n};\n\nvar parseDefs = function parseDefs(root) {\n  var defs = (0, _getDefs.default)(root);\n  return R.evolve({\n    children: R.map(parseNodeDefs(defs))\n  }, root);\n};\n\nvar replaceDefs = R.compose(detachDefs, parseDefs);\nvar _default = replaceDefs;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}