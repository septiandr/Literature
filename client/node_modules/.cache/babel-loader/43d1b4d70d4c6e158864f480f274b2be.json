{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _isFixed = _interopRequireDefault(require(\"../node/isFixed\"));\n\nvar _splitText = _interopRequireDefault(require(\"../text/splitText\"));\n\nvar _splitNode2 = _interopRequireDefault(require(\"../node/splitNode\"));\n\nvar _getWrap = _interopRequireDefault(require(\"../node/getWrap\"));\n\nvar _getWrapArea = _interopRequireDefault(require(\"../page/getWrapArea\"));\n\nvar _getContentArea = _interopRequireDefault(require(\"../page/getContentArea\"));\n\nvar _createInstance = _interopRequireDefault(require(\"../node/createInstance\"));\n\nvar _shouldBreak = _interopRequireDefault(require(\"../node/shouldBreak\"));\n\nvar _resolveTextLayout = _interopRequireDefault(require(\"./resolveTextLayout\"));\n\nvar _resolveInheritance = _interopRequireDefault(require(\"./resolveInheritance\"));\n\nvar _resolveDimensions = require(\"./resolveDimensions\");\n/* eslint-disable no-continue */\n\n/* eslint-disable prefer-destructuring */\n\n\nvar isText = R.propEq('type', P.Text); // Prevent splitting elements by low decimal numbers\n\nvar SAFTY_THRESHOLD = 0.001;\nvar assingChildren = R.assoc('children');\nvar getTop = R.pathOr(0, ['box', 'top']);\nvar getHeight = R.path(['box', 'height']);\nvar getChildren = R.propOr([], 'children');\nvar isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\nvar allFixed = R.all(_isFixed.default);\nvar isDynamic = R.hasPath(['props', 'render']);\n\nvar compose = function compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (value) {\n    var result = value;\n    var reversedFns = R.reverse(fns);\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    for (var i = 0; i < reversedFns.length; i += 1) {\n      var fn = reversedFns[i];\n      result = fn.apply(void 0, [result].concat(args));\n    }\n\n    return result;\n  };\n};\n\nvar relayoutPage = compose(_resolveTextLayout.default, _resolveInheritance.default, _resolveDimensions.resolvePageDimensions);\n\nvar warnUnavailableSpace = function warnUnavailableSpace(node) {\n  console.warn(\"Node of type \" + node.type + \" can't wrap between pages and it's bigger than available page height\");\n};\n\nvar splitNodes = function splitNodes(height, contentArea, nodes) {\n  var currentChildren = [];\n  var nextChildren = [];\n\n  for (var i = 0; i < nodes.length; i += 1) {\n    var child = nodes[i];\n    var futureNodes = nodes.slice(i + 1);\n    var futureFixedNodes = R.filter(_isFixed.default, futureNodes);\n    var nodeTop = getTop(child);\n    var nodeHeight = getHeight(child);\n    var isOutside = isElementOutside(height, child);\n    var shouldBreak = (0, _shouldBreak.default)(child, futureNodes, height);\n    var shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n    var canWrap = (0, _getWrap.default)(child);\n    var fitsInsidePage = nodeHeight <= contentArea;\n\n    if ((0, _isFixed.default)(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      var next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        }\n      })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (!fitsInsidePage && !canWrap) {\n      currentChildren.push(child);\n      nextChildren.push.apply(nextChildren, futureNodes);\n      warnUnavailableSpace(child);\n      break;\n    }\n\n    if (shouldBreak) {\n      var _next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        },\n        props: R.evolve({\n          wrap: R.always(true),\n          break: R.always(false)\n        })\n      })(child);\n\n      currentChildren.push.apply(currentChildren, futureFixedNodes);\n      nextChildren.push.apply(nextChildren, [_next].concat(futureNodes));\n      break;\n    }\n\n    if (shouldSplit) {\n      var _split = split(child, height, contentArea),\n          currentChild = _split[0],\n          nextChild = _split[1];\n\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nvar splitChildren = function splitChildren(height, contentArea, node) {\n  var children = getChildren(node);\n  var availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, contentArea, children);\n};\n\nvar splitView = function splitView(node, height, contentArea) {\n  var _splitNode = (0, _splitNode2.default)(node, height),\n      currentNode = _splitNode[0],\n      nextNode = _splitNode[1];\n\n  var _splitChildren = splitChildren(height, contentArea, node),\n      currentChilds = _splitChildren[0],\n      nextChildren = _splitChildren[1];\n\n  return [assingChildren(currentChilds)(currentNode), assingChildren(nextChildren)(nextNode)];\n};\n\nvar split = R.ifElse(isText, _splitText.default, splitView);\n\nvar shouldResolveDynamicNodes = function shouldResolveDynamicNodes(node) {\n  var children = node.children || [];\n  return isDynamic(node) || children.some(shouldResolveDynamicNodes);\n};\n\nvar resolveDynamicNodes = function resolveDynamicNodes(props, node) {\n  var isNodeDynamic = isDynamic(node); // Call render prop on dynamic nodes and append result to children\n\n  var resolveChildren = function resolveChildren(children) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    if (isNodeDynamic) {\n      var res = node.props.render(props);\n      return [(0, _createInstance.default)(res)].filter(Boolean);\n    }\n\n    return children.map(function (c) {\n      return resolveDynamicNodes(props, c);\n    });\n  }; // We reset dynamic text box so it can be computed again later on\n\n\n  var resolveBox = function resolveBox(box) {\n    return isNodeDynamic && isText(node) ? (0, _extends2.default)({}, box, {\n      height: 0\n    }) : box;\n  };\n\n  return R.evolve({\n    box: resolveBox,\n    children: resolveChildren,\n    lines: function lines(prev) {\n      return isNodeDynamic ? null : prev;\n    }\n  }, node);\n};\n\nvar resolveDynamicPage = function resolveDynamicPage(props, page, fontStore) {\n  if (shouldResolveDynamicNodes(page)) {\n    var resolvedPage = resolveDynamicNodes(props, page);\n    return relayoutPage(resolvedPage, fontStore);\n  }\n\n  return page;\n};\n\nvar splitPage = function splitPage(page, pageNumber, fontStore) {\n  var wrapArea = (0, _getWrapArea.default)(page);\n  var contentArea = (0, _getContentArea.default)(page);\n  var height = R.path(['style', 'height'], page);\n  var dynamicPage = resolveDynamicPage({\n    pageNumber: pageNumber\n  }, page, fontStore);\n\n  var _splitNodes = splitNodes(wrapArea, contentArea, dynamicPage.children),\n      currentChilds = _splitNodes[0],\n      nextChilds = _splitNodes[1];\n\n  var relayout = function relayout(node) {\n    return relayoutPage(node, fontStore);\n  };\n\n  var currentPage = R.compose(relayout, assingChildren(currentChilds), R.assocPath(['box', 'height'], height))(page);\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n  var nextPage = R.compose(relayout, assingChildren(nextChilds), R.dissocPath(['box', 'height']))(page);\n  return [currentPage, nextPage];\n};\n\nvar resolvePageIndices = function resolvePageIndices(fontStore) {\n  return function (page, pageNumber, pages) {\n    var totalPages = pages.length;\n    var props = {\n      totalPages: totalPages,\n      pageNumber: pageNumber + 1,\n      subPageNumber: page.subPageNumber + 1,\n      subPageTotalPages: page.subPageTotalPages\n    };\n    return resolveDynamicPage(props, page, fontStore);\n  };\n};\n\nvar assocSubPageData = function assocSubPageData(subpages) {\n  return subpages.map(function (page, i) {\n    return (0, _extends2.default)({}, page, {\n      subPageNumber: i,\n      subPageTotalPages: subpages.length\n    });\n  });\n};\n\nvar dissocSubPageData = function dissocSubPageData(page) {\n  return R.compose(R.dissoc('subPageNumber'), R.dissoc('subPageTotalPages'))(page);\n};\n\nvar paginate = function paginate(page, pageNumber, fontStore) {\n  if (!page) return [];\n  var splittedPage = splitPage(page, pageNumber, fontStore);\n  var pages = [splittedPage[0]];\n  var nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n/**\n * Performs pagination. This is the step responsible of breaking the whole document\n * into pages following pagiation rules, such as `fixed`, `break` and dynamic nodes.\n *\n * @param {Object} node\n * @param {Object} fontStore font store\n * @returns {Object} layout node\n */\n\n\nvar resolvePagination = function resolvePagination(doc, fontStore) {\n  var pages = [];\n  var pageNumber = 1;\n\n  for (var i = 0; i < doc.children.length; i += 1) {\n    var page = doc.children[i];\n    var subpages = paginate(page, pageNumber, fontStore);\n    subpages = assocSubPageData(subpages);\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(R.compose(dissocSubPageData, resolvePageIndices(fontStore)));\n  return assingChildren(pages, doc);\n};\n\nvar _default = resolvePagination;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/steps/resolvePagination.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","default","_extends2","R","P","_isFixed","_splitText","_splitNode2","_getWrap","_getWrapArea","_getContentArea","_createInstance","_shouldBreak","_resolveTextLayout","_resolveInheritance","_resolveDimensions","isText","propEq","Text","SAFTY_THRESHOLD","assingChildren","assoc","getTop","pathOr","getHeight","path","getChildren","propOr","isElementOutside","useWith","lte","identity","allFixed","all","isDynamic","hasPath","compose","_len","arguments","length","fns","Array","_key","value","result","reversedFns","reverse","_len2","args","_key2","i","fn","apply","concat","relayoutPage","resolvePageDimensions","warnUnavailableSpace","node","console","warn","type","splitNodes","height","contentArea","nodes","currentChildren","nextChildren","child","futureNodes","slice","futureFixedNodes","filter","nodeTop","nodeHeight","isOutside","shouldBreak","shouldSplit","canWrap","fitsInsidePage","push","next","evolve","box","top","subtract","__","_next","props","wrap","always","break","_split","split","currentChild","nextChild","splitChildren","children","availableHeight","splitView","_splitNode","currentNode","nextNode","_splitChildren","currentChilds","ifElse","shouldResolveDynamicNodes","some","resolveDynamicNodes","isNodeDynamic","resolveChildren","res","render","Boolean","map","c","resolveBox","lines","prev","resolveDynamicPage","page","fontStore","resolvedPage","splitPage","pageNumber","wrapArea","dynamicPage","_splitNodes","nextChilds","relayout","currentPage","assocPath","isEmpty","nextPage","dissocPath","resolvePageIndices","pages","totalPages","subPageNumber","subPageTotalPages","assocSubPageData","subpages","dissocSubPageData","dissoc","paginate","splittedPage","resolvePagination","doc","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _isFixed = _interopRequireDefault(require(\"../node/isFixed\"));\n\nvar _splitText = _interopRequireDefault(require(\"../text/splitText\"));\n\nvar _splitNode2 = _interopRequireDefault(require(\"../node/splitNode\"));\n\nvar _getWrap = _interopRequireDefault(require(\"../node/getWrap\"));\n\nvar _getWrapArea = _interopRequireDefault(require(\"../page/getWrapArea\"));\n\nvar _getContentArea = _interopRequireDefault(require(\"../page/getContentArea\"));\n\nvar _createInstance = _interopRequireDefault(require(\"../node/createInstance\"));\n\nvar _shouldBreak = _interopRequireDefault(require(\"../node/shouldBreak\"));\n\nvar _resolveTextLayout = _interopRequireDefault(require(\"./resolveTextLayout\"));\n\nvar _resolveInheritance = _interopRequireDefault(require(\"./resolveInheritance\"));\n\nvar _resolveDimensions = require(\"./resolveDimensions\");\n\n/* eslint-disable no-continue */\n\n/* eslint-disable prefer-destructuring */\nvar isText = R.propEq('type', P.Text); // Prevent splitting elements by low decimal numbers\n\nvar SAFTY_THRESHOLD = 0.001;\nvar assingChildren = R.assoc('children');\nvar getTop = R.pathOr(0, ['box', 'top']);\nvar getHeight = R.path(['box', 'height']);\nvar getChildren = R.propOr([], 'children');\nvar isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\nvar allFixed = R.all(_isFixed.default);\nvar isDynamic = R.hasPath(['props', 'render']);\n\nvar compose = function compose() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (value) {\n    var result = value;\n    var reversedFns = R.reverse(fns);\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    for (var i = 0; i < reversedFns.length; i += 1) {\n      var fn = reversedFns[i];\n      result = fn.apply(void 0, [result].concat(args));\n    }\n\n    return result;\n  };\n};\n\nvar relayoutPage = compose(_resolveTextLayout.default, _resolveInheritance.default, _resolveDimensions.resolvePageDimensions);\n\nvar warnUnavailableSpace = function warnUnavailableSpace(node) {\n  console.warn(\"Node of type \" + node.type + \" can't wrap between pages and it's bigger than available page height\");\n};\n\nvar splitNodes = function splitNodes(height, contentArea, nodes) {\n  var currentChildren = [];\n  var nextChildren = [];\n\n  for (var i = 0; i < nodes.length; i += 1) {\n    var child = nodes[i];\n    var futureNodes = nodes.slice(i + 1);\n    var futureFixedNodes = R.filter(_isFixed.default, futureNodes);\n    var nodeTop = getTop(child);\n    var nodeHeight = getHeight(child);\n    var isOutside = isElementOutside(height, child);\n    var shouldBreak = (0, _shouldBreak.default)(child, futureNodes, height);\n    var shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n    var canWrap = (0, _getWrap.default)(child);\n    var fitsInsidePage = nodeHeight <= contentArea;\n\n    if ((0, _isFixed.default)(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      var next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        }\n      })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (!fitsInsidePage && !canWrap) {\n      currentChildren.push(child);\n      nextChildren.push.apply(nextChildren, futureNodes);\n      warnUnavailableSpace(child);\n      break;\n    }\n\n    if (shouldBreak) {\n      var _next = R.evolve({\n        box: {\n          top: R.subtract(R.__, height)\n        },\n        props: R.evolve({\n          wrap: R.always(true),\n          break: R.always(false)\n        })\n      })(child);\n\n      currentChildren.push.apply(currentChildren, futureFixedNodes);\n      nextChildren.push.apply(nextChildren, [_next].concat(futureNodes));\n      break;\n    }\n\n    if (shouldSplit) {\n      var _split = split(child, height, contentArea),\n          currentChild = _split[0],\n          nextChild = _split[1];\n\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nvar splitChildren = function splitChildren(height, contentArea, node) {\n  var children = getChildren(node);\n  var availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, contentArea, children);\n};\n\nvar splitView = function splitView(node, height, contentArea) {\n  var _splitNode = (0, _splitNode2.default)(node, height),\n      currentNode = _splitNode[0],\n      nextNode = _splitNode[1];\n\n  var _splitChildren = splitChildren(height, contentArea, node),\n      currentChilds = _splitChildren[0],\n      nextChildren = _splitChildren[1];\n\n  return [assingChildren(currentChilds)(currentNode), assingChildren(nextChildren)(nextNode)];\n};\n\nvar split = R.ifElse(isText, _splitText.default, splitView);\n\nvar shouldResolveDynamicNodes = function shouldResolveDynamicNodes(node) {\n  var children = node.children || [];\n  return isDynamic(node) || children.some(shouldResolveDynamicNodes);\n};\n\nvar resolveDynamicNodes = function resolveDynamicNodes(props, node) {\n  var isNodeDynamic = isDynamic(node); // Call render prop on dynamic nodes and append result to children\n\n  var resolveChildren = function resolveChildren(children) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    if (isNodeDynamic) {\n      var res = node.props.render(props);\n      return [(0, _createInstance.default)(res)].filter(Boolean);\n    }\n\n    return children.map(function (c) {\n      return resolveDynamicNodes(props, c);\n    });\n  }; // We reset dynamic text box so it can be computed again later on\n\n\n  var resolveBox = function resolveBox(box) {\n    return isNodeDynamic && isText(node) ? (0, _extends2.default)({}, box, {\n      height: 0\n    }) : box;\n  };\n\n  return R.evolve({\n    box: resolveBox,\n    children: resolveChildren,\n    lines: function lines(prev) {\n      return isNodeDynamic ? null : prev;\n    }\n  }, node);\n};\n\nvar resolveDynamicPage = function resolveDynamicPage(props, page, fontStore) {\n  if (shouldResolveDynamicNodes(page)) {\n    var resolvedPage = resolveDynamicNodes(props, page);\n    return relayoutPage(resolvedPage, fontStore);\n  }\n\n  return page;\n};\n\nvar splitPage = function splitPage(page, pageNumber, fontStore) {\n  var wrapArea = (0, _getWrapArea.default)(page);\n  var contentArea = (0, _getContentArea.default)(page);\n  var height = R.path(['style', 'height'], page);\n  var dynamicPage = resolveDynamicPage({\n    pageNumber: pageNumber\n  }, page, fontStore);\n\n  var _splitNodes = splitNodes(wrapArea, contentArea, dynamicPage.children),\n      currentChilds = _splitNodes[0],\n      nextChilds = _splitNodes[1];\n\n  var relayout = function relayout(node) {\n    return relayoutPage(node, fontStore);\n  };\n\n  var currentPage = R.compose(relayout, assingChildren(currentChilds), R.assocPath(['box', 'height'], height))(page);\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n  var nextPage = R.compose(relayout, assingChildren(nextChilds), R.dissocPath(['box', 'height']))(page);\n  return [currentPage, nextPage];\n};\n\nvar resolvePageIndices = function resolvePageIndices(fontStore) {\n  return function (page, pageNumber, pages) {\n    var totalPages = pages.length;\n    var props = {\n      totalPages: totalPages,\n      pageNumber: pageNumber + 1,\n      subPageNumber: page.subPageNumber + 1,\n      subPageTotalPages: page.subPageTotalPages\n    };\n    return resolveDynamicPage(props, page, fontStore);\n  };\n};\n\nvar assocSubPageData = function assocSubPageData(subpages) {\n  return subpages.map(function (page, i) {\n    return (0, _extends2.default)({}, page, {\n      subPageNumber: i,\n      subPageTotalPages: subpages.length\n    });\n  });\n};\n\nvar dissocSubPageData = function dissocSubPageData(page) {\n  return R.compose(R.dissoc('subPageNumber'), R.dissoc('subPageTotalPages'))(page);\n};\n\nvar paginate = function paginate(page, pageNumber, fontStore) {\n  if (!page) return [];\n  var splittedPage = splitPage(page, pageNumber, fontStore);\n  var pages = [splittedPage[0]];\n  var nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n/**\n * Performs pagination. This is the step responsible of breaking the whole document\n * into pages following pagiation rules, such as `fixed`, `break` and dynamic nodes.\n *\n * @param {Object} node\n * @param {Object} fontStore font store\n * @returns {Object} layout node\n */\n\n\nvar resolvePagination = function resolvePagination(doc, fontStore) {\n  var pages = [];\n  var pageNumber = 1;\n\n  for (var i = 0; i < doc.children.length; i += 1) {\n    var page = doc.children[i];\n    var subpages = paginate(page, pageNumber, fontStore);\n    subpages = assocSubPageData(subpages);\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(R.compose(dissocSubPageData, resolvePageIndices(fontStore)));\n  return assingChildren(pages, doc);\n};\n\nvar _default = resolvePagination;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}