{"ast":null,"code":"import r from 'restructure';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _applyDecoratedDescriptor from '@babel/runtime/helpers/applyDecoratedDescriptor';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\nvar fontkit = {};\nfontkit.logErrors = false;\nvar formats = [];\n\nfontkit.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n};\n\nfontkit.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n};\n\nfontkit.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nfontkit.defaultLanguage = 'en';\n\nfontkit.setDefaultLanguage = function (lang) {\n  if (lang === void 0) {\n    lang = 'en';\n  }\n\n  fontkit.defaultLanguage = lang;\n};\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\n\n\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n\n});\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n\n});\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\n\nfunction getEncoding(platformID, encodingID, languageID) {\n  if (languageID === void 0) {\n    languageID = 0;\n  }\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\n\nvar ENCODINGS = [// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], // ISO (deprecated)\n['ascii'], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, // ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\n\nfunction _createForOfIteratorHelperLoose$s(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$s(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$s(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$s(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$s(o, minLen);\n}\n\nfunction _arrayLikeToArray$s(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$s(this.records), _step; !(_step = _iterator()).done;) {\n    var record = _step.value; // find out what language this is for\n\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n}); // These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\nvar glyf = new r.Array(new r.Buffer());\n\nfunction _createForOfIteratorHelperLoose$r(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$r(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$r(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$r(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$r(o, minLen);\n}\n\nfunction _arrayLikeToArray$r(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar CFFIndex = /*#__PURE__*/function () {\n  function CFFIndex(type) {\n    this.type = type;\n  }\n\n  var _proto = CFFIndex.prototype;\n\n  _proto.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  _proto.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  _proto.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = _createForOfIteratorHelperLoose$r(arr), _step; !(_step = _iterator()).done;) {\n      var item = _step.value;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _i = 0, _sizes = sizes; _i < _sizes.length; _i++) {\n      var size = _sizes[_i];\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$r(arr), _step2; !(_step2 = _iterator2()).done;) {\n      var _item = _step2.value;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = /*#__PURE__*/function () {\n  function CFFOperand() {}\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nfunction _createForOfIteratorHelperLoose$q(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$q(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$q(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$q(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$q(o, minLen);\n}\n\nfunction _arrayLikeToArray$q(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar CFFDict = /*#__PURE__*/function () {\n  function CFFDict(ops) {\n    if (ops === void 0) {\n      ops = [];\n    }\n\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose$q(ops), _step; !(_step = _iterator()).done;) {\n      var field = _step.value;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  var _proto = CFFDict.prototype;\n\n  _proto.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  _proto.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error(\"Unknown operator \" + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  _proto.size = function size(dict, parent, includePointers) {\n    if (includePointers === void 0) {\n      includePointers = true;\n    }\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$q(operands), _step2; !(_step2 = _iterator2()).done;) {\n        var op = _step2.value;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  _proto.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose$q(this.ops), _step3; !(_step3 = _iterator3()).done;) {\n      var field = _step3.value;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose$q(operands), _step4; !(_step4 = _iterator4()).done;) {\n        var op = _step4.value;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose$q(key), _step5; !(_step5 = _iterator5()).done;) {\n        var _op = _step5.value;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = /*#__PURE__*/function (_r$Pointer) {\n  _inheritsLoose(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return _r$Pointer.call(this, null, type, options) || this;\n  }\n\n  var _proto = CFFPointer.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = /*#__PURE__*/function () {\n  function Ptr(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  var _proto2 = Ptr.prototype;\n\n  _proto2.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = /*#__PURE__*/function () {\n  function CFFBlendOp() {}\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]); // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior']; // Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\n\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _[\"axisIndex\"] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n}); // otherwise delegates to the provided type.\n\nvar PredefinedOp = /*#__PURE__*/function () {\n  function PredefinedOp(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  var _proto = PredefinedOp.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  _proto.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = /*#__PURE__*/function (_r$Number) {\n  _inheritsLoose(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    return _r$Number.call(this, 'UInt8') || this;\n  }\n\n  var _proto2 = CFFEncodingVersion.prototype;\n\n  _proto2.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  } // TODO: supplement?\n\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(RangeArray, _r$Array);\n\n  function RangeArray() {\n    return _r$Array.apply(this, arguments) || this;\n  }\n\n  var _proto3 = RangeArray.prototype;\n\n  _proto3.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = /*#__PURE__*/function () {\n  function CFFPrivateOp() {}\n\n  var _proto4 = CFFPrivateOp.prototype;\n\n  _proto4.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  _proto4.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  _proto4.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], 'PaintType', 'number', 0]]);\nvar CFFTopDict = new CFFDict([// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], // CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = /*#__PURE__*/function () {\n  function CFFFont(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  var _proto = CFFFont.prototype;\n\n  _proto.decode = function decode() {\n    this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  _proto.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  _proto.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  _proto.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  _proto.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error(\"Unknown FDSelect version: \" + this.topDict.FDSelect.version);\n    }\n  };\n\n  _proto.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  _createClass(CFFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {};\n\nvar BitAligned = function BitAligned() {};\n\nnew r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis$1 = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis$1),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis$1) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = /*#__PURE__*/function () {\n  function ValueRecord(key) {\n    if (key === void 0) {\n      key = 'valueFormat';\n    }\n\n    this.key = key;\n  }\n\n  var _proto = ValueRecord.prototype;\n\n  _proto.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  _proto.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n}); // export GPOSLookup for JSTF table\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\nvar VariableSizeNumber = /*#__PURE__*/function () {\n  function VariableSizeNumber(size) {\n    this._size = size;\n  }\n\n  var _proto = VariableSizeNumber.prototype;\n\n  _proto.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  _proto.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n\n});\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable$1 = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n}); // Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n}); // NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n}); // sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n\n});\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n\n});\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac$1,\n  toCoord: shortFrac$1\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = /*#__PURE__*/function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  var _proto = UnboundedArrayAccessor.prototype;\n\n  _proto.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  _proto.inspect = function inspect() {\n    return \"[UnboundedArray \" + this.type.constructor.name + \"]\";\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    return _r$Array.call(this, type, 0) || this;\n  }\n\n  var _proto2 = UnboundedArray.prototype;\n\n  _proto2.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\n\nvar LookupTable = function LookupTable(ValueType) {\n  if (ValueType === void 0) {\n    ValueType = r.uint16;\n  } // Helper class that makes internal structures invisible to pointers\n\n\n  var Shadow = /*#__PURE__*/function () {\n    function Shadow(type) {\n      this.type = type;\n    }\n\n    var _proto3 = Shadow.prototype;\n\n    _proto3.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    _proto3.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    _proto3.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nfunction StateTable(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\n\nfunction StateTable1(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\nvar Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\nvar shortFrac = new r.Fixed(16, 'BE', 14);\n\nvar Offset = /*#__PURE__*/function () {\n  function Offset() {}\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\nvar ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\nvar tables = {};\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\n\ntables.HVAR = HVAR; // Other OpenType Tables\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nfunction _createForOfIteratorHelperLoose$p(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$p(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$p(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$p(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$p(o, minLen);\n}\n\nfunction _arrayLikeToArray$p(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$p(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$1 = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$1.length;\n  this.tables = tables$1;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$4;\n\nfunction _createForOfIteratorHelperLoose$o(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$o(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$o(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$o(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$o(o, minLen);\n}\n\nfunction _arrayLikeToArray$o(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$4 = /*#__PURE__*/function () {\n  function CmapProcessor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = _createForOfIteratorHelperLoose$o(cmapTable.tables), _step; !(_step = _iterator()).done;) {\n        var cmap = _step.value;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  var _proto = CmapProcessor.prototype;\n\n  _proto.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose$o(pairs), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          platformID = _step2$value[0],\n          encodingID = _step2$value[1];\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$o(cmapTable.tables), _step3; !(_step3 = _iterator3()).done;) {\n        var cmap = _step3.value;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  _proto.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step4; !(_step4 = _iterator4()).done;) {\n            var group = _step4.value;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i = 0; _i < cmap.segCount; _i++) {\n            var end = cmap.endCode.get(_i);\n            var start = cmap.startCode.get(_i);\n            var rangeOffset = cmap.idRangeOffset.get(_i);\n            var delta = cmap.idDelta.get(_i);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step5; !(_step5 = _iterator5()).done;) {\n            var group = _step5.value;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step6; !(_step6 = _iterator6()).done;) {\n            var _group = _step6.value;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), (_applyDecoratedDescriptor(_class$4.prototype, \"getCharacterSet\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"getCharacterSet\"), _class$4.prototype), _applyDecoratedDescriptor(_class$4.prototype, \"codePointsForGlyph\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"codePointsForGlyph\"), _class$4.prototype)), _class$4);\n\nfunction _createForOfIteratorHelperLoose$n(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$n(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$n(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$n(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$n(o, minLen);\n}\n\nfunction _arrayLikeToArray$n(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar KernProcessor = /*#__PURE__*/function () {\n  function KernProcessor(font) {\n    this.kern = font.kern;\n  }\n\n  var _proto = KernProcessor.prototype;\n\n  _proto.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  _proto.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose$n(this.kern.tables), _step; !(_step = _iterator()).done;) {\n      var table = _step.value;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning table version \" + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning sub-table format \" + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\n\nvar UnicodeLayoutEngine = /*#__PURE__*/function () {\n  function UnicodeLayoutEngine(font) {\n    this.font = font;\n  }\n\n  var _proto = UnicodeLayoutEngine.prototype;\n\n  _proto.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  _proto.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  _proto.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n/**\n * Represents a glyph bounding box\n */\n\n\nvar BBox = /*#__PURE__*/function () {\n  function BBox(minX, minY, maxX, maxY) {\n    if (minX === void 0) {\n      minX = Infinity;\n    }\n\n    if (minY === void 0) {\n      minY = Infinity;\n    }\n\n    if (maxX === void 0) {\n      maxX = -Infinity;\n    }\n\n    if (maxY === void 0) {\n      maxY = -Infinity;\n    }\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n\n\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  var _proto = BBox.prototype;\n\n  _proto.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  _proto.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  _createClass(BBox, [{\n    key: \"width\",\n    get: function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }]);\n\n  return BBox;\n}();\n\nfunction _createForOfIteratorHelperLoose$m(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$m(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$m(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$m(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$m(o, minLen);\n}\n\nfunction _arrayLikeToArray$m(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n} // Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = _createForOfIteratorHelperLoose$m(tag), _step; !(_step = _iterator()).done;) {\n      var t = _step.value;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nfunction forCodePoints(codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    var codePoint = codePoints[i];\n\n    var _script2 = unicode.getScript(codePoint);\n\n    if (_script2 !== 'Common' && _script2 !== 'Inherited' && _script2 !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script2];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n\n};\n\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\nfunction _createForOfIteratorHelperLoose$l(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$l(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$l(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$l(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$l(o, minLen);\n}\n\nfunction _arrayLikeToArray$l(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\n\nvar GlyphRun = /*#__PURE__*/function () {\n  function GlyphRun(glyphs, features, script, language, direction$1) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$1 || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = _createForOfIteratorHelperLoose$l(features), _step; !(_step = _iterator()).done;) {\n        var tag = _step.value;\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  _createClass(GlyphRun, [{\n    key: \"advanceWidth\",\n    get: function get() {\n      var width = 0;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$l(this.positions), _step2; !(_step2 = _iterator2()).done;) {\n        var position = _step2.value;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      var height = 0;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$l(this.positions), _step3; !(_step3 = _iterator3()).done;) {\n        var position = _step3.value;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n\n  return GlyphRun;\n}();\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\n\n\nvar GlyphPosition = function GlyphPosition(xAdvance, yAdvance, xOffset, yOffset) {\n  if (xAdvance === void 0) {\n    xAdvance = 0;\n  }\n\n  if (yAdvance === void 0) {\n    yAdvance = 0;\n  }\n\n  if (xOffset === void 0) {\n    xOffset = 0;\n  }\n\n  if (yOffset === void 0) {\n    yOffset = 0;\n  }\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n\n\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n}; // see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\n\n\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping[\"cv\" + (\"00\" + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r = void 0;\n\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n  } else if (typeof features === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _createForOfIteratorHelperLoose$k(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$k(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$k(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$k(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$k(o, minLen);\n}\n\nfunction _arrayLikeToArray$k(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar AATLookupTable = (_class$3 = /*#__PURE__*/function () {\n  function AATLookupTable(table) {\n    this.table = table;\n  }\n\n  var _proto = AATLookupTable.prototype;\n\n  _proto.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n  };\n\n  _proto.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = _createForOfIteratorHelperLoose$k(this.table.segments), _step; !(_step = _iterator()).done;) {\n            var segment = _step.value;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = _createForOfIteratorHelperLoose$k(this.table.segments), _step2; !(_step2 = _iterator2()).done;) {\n            var _segment = _step2.value;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), _applyDecoratedDescriptor(_class$3.prototype, \"glyphsForValue\", [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, \"glyphsForValue\"), _class$3.prototype), _class$3);\n\nfunction _createForOfIteratorHelperLoose$j(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$j(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$j(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$j(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$j(o, minLen);\n}\n\nfunction _arrayLikeToArray$j(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = /*#__PURE__*/function () {\n  function AATStateMachine(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  var _proto = AATStateMachine.prototype;\n\n  _proto.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  ;\n\n  _proto.traverse = function traverse(opts, state, visited) {\n    if (state === void 0) {\n      state = 0;\n    }\n\n    if (visited === void 0) {\n      visited = new Set();\n    }\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _this$stateTable = this.stateTable,\n        nClasses = _this$stateTable.nClasses,\n        stateArray = _this$stateTable.stateArray,\n        entryTable = _this$stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = _createForOfIteratorHelperLoose$j(this.lookupTable.glyphsForValue(classCode)), _step; !(_step = _iterator()).done;) {\n        var glyph = _step.value;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _createForOfIteratorHelperLoose$i(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$i(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$i(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$i(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$i(o, minLen);\n}\n\nfunction _arrayLikeToArray$i(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3FFFFFFF;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03E0;\nvar MARKED_INSERT_COUNT = 0x001F;\nvar AATMorxProcessor = (_class$2 = /*#__PURE__*/function () {\n  function AATMorxProcessor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n\n\n  var _proto = AATMorxProcessor.prototype;\n\n  _proto.process = function process(glyphs, features) {\n    if (features === void 0) {\n      features = {};\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose$i(this.morx.chains), _step; !(_step = _iterator()).done;) {\n      var chain = _step.value;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$i(chain.features), _step2; !(_step2 = _iterator2()).done;) {\n        var feature = _step2.value;\n        var f = void 0;\n\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$i(chain.subtables), _step3; !(_step3 = _iterator3()).done;) {\n        var subtable = _step3.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  _proto.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  _proto.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  _proto.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error(\"Invalid morx subtable type: \" + this.subtable.type);\n    }\n  };\n\n  _proto.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  _proto.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  _proto.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _this$ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n\n      (_this$ligatureStack = this.ligatureStack).push.apply(_this$ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  _proto.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  _proto._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _this$glyphs;\n\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  _proto.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  _proto.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose$i(this.morx.chains), _step4; !(_step4 = _iterator4()).done;) {\n      var chain = _step4.value;\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose$i(chain.features), _step5; !(_step5 = _iterator5()).done;) {\n        var feature = _step5.value;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  _proto.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  _proto.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose$i(this.morx.chains), _step6; !(_step6 = _iterator6()).done;) {\n      var chain = _step6.value;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = _createForOfIteratorHelperLoose$i(chain.subtables), _step7; !(_step7 = _iterator7()).done;) {\n        var subtable = _step7.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  _proto.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this; // Currently, only supporting ligature subtables.\n\n\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), _applyDecoratedDescriptor(_class$2.prototype, \"getStateMachine\", [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, \"getStateMachine\"), _class$2.prototype), _class$2); // reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\n\nfunction swap(glyphs, rangeA, rangeB, reverseA, reverseB) {\n  if (reverseA === void 0) {\n    reverseA = false;\n  }\n\n  if (reverseB === void 0) {\n    reverseB = false;\n  }\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(\"Unknown verb: \" + verb);\n  }\n}\n\nfunction _createForOfIteratorHelperLoose$h(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$h(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$h(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$h(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$h(o, minLen);\n}\n\nfunction _arrayLikeToArray$h(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar AATLayoutEngine = /*#__PURE__*/function () {\n  function AATLayoutEngine(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  var _proto = AATLayoutEngine.prototype;\n\n  _proto.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = _createForOfIteratorHelperLoose$h(glyphStrings), _step; !(_step = _iterator()).done;) {\n      var glyphs = _step.value;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  _proto._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$h(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      var s = string + String.fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$g(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$g(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$g(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$g(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$g(o, minLen);\n}\n\nfunction _arrayLikeToArray$g(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\n\nvar ShapingPlan = /*#__PURE__*/function () {\n  function ShapingPlan(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  var _proto = ShapingPlan.prototype;\n\n  _proto._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = _createForOfIteratorHelperLoose$g(features), _step; !(_step = _iterator()).done;) {\n      var feature = _step.value;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n  /**\n   * Add features to the last stage\n   */\n  ;\n\n  _proto.add = function add(arg, global) {\n    if (global === void 0) {\n      global = true;\n    }\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n  /**\n   * Add a new stage\n   */\n  ;\n\n  _proto.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  _proto.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  ;\n\n  _proto.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose$g(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var glyph = _step2.value;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  ;\n\n  _proto.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose$g(this.stages), _step3; !(_step3 = _iterator3()).done;) {\n      var stage = _step3.value;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = /*#__PURE__*/function () {\n  function DefaultShaper() {}\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}();\n\n_defineProperty(DefaultShaper, \"zeroMarkWidths\", 'AFTER_GPOS');\n\nvar type$2 = \"Buffer\";\nvar data$2 = [0, 1, 240, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 253, 1, 2, 254, 237, 154, 45, 76, 196, 48, 20, 199, 187, 237, 190, 56, 64, 129, 192, 224, 144, 72, 4, 2, 121, 151, 16, 18, 12, 9, 134, 132, 115, 40, 4, 138, 160, 80, 224, 80, 36, 8, 78, 34, 145, 72, 12, 138, 32, 73, 72, 8, 18, 137, 68, 18, 12, 201, 253, 47, 215, 146, 151, 166, 221, 117, 215, 110, 131, 219, 123, 201, 47, 237, 173, 235, 235, 123, 237, 235, 219, 186, 92, 55, 22, 98, 27, 236, 130, 125, 208, 149, 191, 255, 75, 121, 12, 78, 193, 25, 184, 0, 151, 160, 15, 110, 192, 45, 184, 3, 247, 224, 1, 60, 145, 126, 207, 224, 77, 254, 30, 242, 14, 62, 100, 253, 83, 150, 95, 164, 157, 153, 78, 126, 192, 181, 164, 158, 8, 49, 15, 22, 146, 242, 237, 42, 138, 37, 248, 186, 44, 253, 93, 169, 144, 223, 12, 195, 48, 12, 195, 48, 12, 195, 48, 12, 195, 84, 143, 225, 247, 159, 85, 254, 254, 193, 48, 12, 195, 48, 12, 195, 48, 185, 114, 53, 51, 98, 49, 39, 94, 193, 92, 91, 136, 14, 56, 7, 143, 224, 187, 61, 106, 91, 159, 21, 98, 83, 8, 209, 107, 9, 209, 111, 141, 234, 69, 240, 210, 202, 111, 62, 215, 112, 134, 217, 48, 156, 99, 58, 184, 182, 149, 225, 124, 179, 131, 123, 247, 60, 207, 67, 61, 244, 63, 176, 232, 56, 196, 245, 163, 138, 156, 183, 212, 255, 11, 78, 166, 212, 223, 78, 28, 253, 194, 194, 82, 101, 137, 44, 208, 118, 83, 61, 148, 212, 164, 222, 68, 163, 102, 40, 117, 76, 125, 178, 66, 251, 253, 37, 161, 54, 81, 31, 245, 185, 114, 241, 47, 4, 147, 204, 109, 17, 36, 90, 221, 197, 15, 83, 92, 169, 118, 65, 74, 155, 132, 216, 7, 116, 60, 23, 161, 62, 211, 107, 62, 210, 4, 117, 131, 254, 134, 36, 109, 253, 93, 99, 34, 33, 58, 245, 126, 13, 79, 251, 149, 100, 141, 207, 80, 113, 61, 110, 110, 76, 237, 227, 198, 117, 149, 178, 247, 157, 111, 236, 217, 250, 143, 203, 245, 89, 98, 143, 222, 107, 122, 182, 217, 236, 138, 12, 122, 84, 222, 213, 115, 69, 104, 153, 36, 134, 169, 109, 166, 24, 211, 245, 154, 230, 79, 151, 178, 223, 140, 213, 26, 40, 209, 109, 12, 101, 95, 217, 251, 196, 244, 238, 213, 148, 20, 185, 143, 125, 247, 115, 154, 127, 121, 234, 14, 169, 203, 53, 71, 248, 72, 168, 53, 139, 39, 180, 211, 150, 75, 34, 173, 84, 245, 72, 142, 229, 242, 78, 24, 167, 232, 55, 141, 167, 198, 114, 181, 53, 68, 206, 165, 246, 216, 124, 209, 115, 169, 158, 83, 125, 237, 176, 205, 99, 136, 184, 179, 173, 65, 209, 40, 191, 138, 150, 180, 184, 115, 37, 235, 58, 132, 142, 81, 95, 9, 153, 191, 76, 207, 10, 155, 52, 3, 142, 107, 147, 1];\nvar trieData$2 = {\n  type: type$2,\n  data: data$2\n};\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE$1 = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type = getShapingClass(glyph.codePoints[0]);\n\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie$2.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = /*#__PURE__*/function () {\n  function GlyphIterator(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  var _proto = GlyphIterator.prototype;\n\n  _proto.reset = function reset(options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  _proto.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  _proto.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _proto.next = function next() {\n    return this.move(+1);\n  };\n\n  _proto.prev = function prev() {\n    return this.move(-1);\n  };\n\n  _proto.peek = function peek(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  _proto.peekIndex = function peekIndex(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  _proto.increment = function increment(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n\n  return GlyphIterator;\n}();\n\nfunction _createForOfIteratorHelperLoose$f(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$f(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$f(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$f(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$f(o, minLen);\n}\n\nfunction _arrayLikeToArray$f(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = /*#__PURE__*/function () {\n  function OTProcessor(font, table) {\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  var _proto = OTProcessor.prototype;\n\n  _proto.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose$f(script), _step; !(_step = _iterator()).done;) {\n      var s = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$f(this.table.scriptList), _step2; !(_step2 = _iterator2()).done;) {\n        var entry = _step2.value;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.selectScript = function selectScript(script, language, direction$1) {\n    var changed = false;\n    var entry;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$1 || direction$1 !== this.direction) {\n      this.direction = direction$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$f(this.script.langSysRecords), _step3; !(_step3 = _iterator3()).done;) {\n        var lang = _step3.value;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = _createForOfIteratorHelperLoose$f(this.language.featureIndexes), _step4; !(_step4 = _iterator4()).done;) {\n          var featureIndex = _step4.value;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  _proto.lookupsForFeatures = function lookupsForFeatures(userFeatures, exclude) {\n    if (userFeatures === void 0) {\n      userFeatures = [];\n    }\n\n    var lookups = [];\n\n    for (var _iterator5 = _createForOfIteratorHelperLoose$f(userFeatures), _step5; !(_step5 = _iterator5()).done;) {\n      var tag = _step5.value;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = _createForOfIteratorHelperLoose$f(feature.lookupListIndexes), _step6; !(_step6 = _iterator6()).done;) {\n        var lookupIndex = _step6.value;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  _proto.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = _createForOfIteratorHelperLoose$f(substitutions), _step7; !(_step7 = _iterator7()).done;) {\n      var substitution = _step7.value;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  _proto.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  _proto.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = _createForOfIteratorHelperLoose$f(lookups), _step8; !(_step8 = _iterator8()).done;) {\n      var _step8$value = _step8.value,\n          feature = _step8$value.feature,\n          lookup = _step8$value.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = _createForOfIteratorHelperLoose$f(lookup.subTables), _step9; !(_step9 = _iterator9()).done;) {\n          var table = _step9.value;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  _proto.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  _proto.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = _createForOfIteratorHelperLoose$f(lookupRecords), _step10; !(_step10 = _iterator10()).done;) {\n      var lookupRecord = _step10.value; // Reset flags and find glyph index for this lookup record\n\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = _createForOfIteratorHelperLoose$f(lookup.subTables), _step11; !(_step11 = _iterator11()).done;) {\n        var table = _step11.value;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  _proto.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = _createForOfIteratorHelperLoose$f(coverage.rangeRecords), _step12; !(_step12 = _iterator12()).done;) {\n          var range = _step12.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  _proto.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  _proto.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  _proto.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  _proto.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  _proto.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = _createForOfIteratorHelperLoose$f(classDef.classRangeRecord), _step13; !(_step13 = _iterator13()).done;) {\n          var range = _step13.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  _proto.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  _proto.applyContext = function applyContext(table) {\n    var index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.ruleSets[index];\n\n        for (var _iterator14 = _createForOfIteratorHelperLoose$f(set), _step14; !(_step14 = _iterator14()).done;) {\n          var rule = _step14.value;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n\n        for (var _iterator15 = _createForOfIteratorHelperLoose$f(set), _step15; !(_step15 = _iterator15()).done;) {\n          var _rule = _step15.value;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  _proto.applyChainingContext = function applyChainingContext(table) {\n    var index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.chainRuleSets[index];\n\n        for (var _iterator16 = _createForOfIteratorHelperLoose$f(set), _step16; !(_step16 = _iterator16()).done;) {\n          var rule = _step16.value;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = _createForOfIteratorHelperLoose$f(rules), _step17; !(_step17 = _iterator17()).done;) {\n          var _rule2 = _step17.value;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = /*#__PURE__*/function () {\n  function GlyphInfo(font, id, codePoints, features) {\n    if (codePoints === void 0) {\n      codePoints = [];\n    }\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  var _proto = GlyphInfo.prototype;\n\n  _proto.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  };\n\n  _createClass(GlyphInfo, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }]);\n\n  return GlyphInfo;\n}();\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\n\nvar HangulShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper);\n\n_defineProperty(HangulShaper, \"zeroMarkWidths\", 'NONE');\n\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return 1 <= code && code <= T_END;\n}; // Character categories\n\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n} // State machine actions\n\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv, ljmo, vjmo, tjmo;\n\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable$1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]];\nvar accepting$1 = [false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, true, true, true, false, true, false, true, true, false, false, true, true, true, true, true, true, true, false, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, false, true, false, true, true, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, true, false, true, true, false, false, false, false, true, true, false, false, true, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, true, false, true, false, true, true, false, false, true, true, false, false, true, true, true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, false, false, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, false, false, false, false, false, false, false, true, true, false, false, true, true, false, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, true, true, false, true, true, true, true, true, true, false, true, true, false, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, false, true, true, false, false, false, false, false, true, true, false, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true, true, true, false, true, true, true, true, true, false, true, true, false, true, true, true];\nvar tags$1 = [[], [\"broken_cluster\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"symbol_cluster\"], [], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"broken_cluster\"], [\"symbol_cluster\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [\"standalone_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [], [], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [], [], [\"consonant_syllable\", \"broken_cluster\"], [\"consonant_syllable\", \"broken_cluster\"], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [], [], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"consonant_syllable\"], [], [\"consonant_syllable\"], [\"consonant_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"vowel_syllable\"], [], [\"vowel_syllable\"], [\"vowel_syllable\"], [\"broken_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"standalone_cluster\"], [\"standalone_cluster\"], [], [\"consonant_syllable\"], [\"vowel_syllable\"], [\"standalone_cluster\"]];\nvar indicMachine = {\n  stateTable: stateTable$1,\n  accepting: accepting$1,\n  tags: tags$1\n};\nvar categories$1 = [\"O\", \"IND\", \"S\", \"GB\", \"B\", \"FM\", \"CGJ\", \"VMAbv\", \"VMPst\", \"VAbv\", \"VPst\", \"CMBlw\", \"VPre\", \"VBlw\", \"H\", \"VMBlw\", \"CMAbv\", \"MBlw\", \"CS\", \"R\", \"SUB\", \"MPst\", \"MPre\", \"FAbv\", \"FPst\", \"FBlw\", \"null\", \"SMAbv\", \"SMBlw\", \"VMPre\", \"ZWNJ\", \"ZWJ\", \"WJ\", \"M\", \"VS\", \"N\", \"HN\", \"MAbv\"];\nvar decompositions$2 = {\n  \"2507\": [2503, 2494],\n  \"2508\": [2503, 2519],\n  \"2888\": [2887, 2902],\n  \"2891\": [2887, 2878],\n  \"2892\": [2887, 2903],\n  \"3018\": [3014, 3006],\n  \"3019\": [3015, 3006],\n  \"3020\": [3014, 3031],\n  \"3144\": [3142, 3158],\n  \"3264\": [3263, 3285],\n  \"3271\": [3270, 3285],\n  \"3272\": [3270, 3286],\n  \"3274\": [3270, 3266],\n  \"3275\": [3270, 3266, 3285],\n  \"3402\": [3398, 3390],\n  \"3403\": [3399, 3390],\n  \"3404\": [3398, 3415],\n  \"3546\": [3545, 3530],\n  \"3548\": [3545, 3535],\n  \"3549\": [3545, 3535, 3530],\n  \"3550\": [3545, 3551],\n  \"3635\": [3661, 3634],\n  \"3763\": [3789, 3762],\n  \"3955\": [3953, 3954],\n  \"3957\": [3953, 3956],\n  \"3958\": [4018, 3968],\n  \"3959\": [4018, 3953, 3968],\n  \"3960\": [4019, 3968],\n  \"3961\": [4019, 3953, 3968],\n  \"3969\": [3953, 3968],\n  \"6971\": [6970, 6965],\n  \"6973\": [6972, 6965],\n  \"6976\": [6974, 6965],\n  \"6977\": [6975, 6965],\n  \"6979\": [6978, 6965],\n  \"69934\": [69937, 69927],\n  \"69935\": [69938, 69927],\n  \"70475\": [70471, 70462],\n  \"70476\": [70471, 70487],\n  \"70843\": [70841, 70842],\n  \"70844\": [70841, 70832],\n  \"70846\": [70841, 70845],\n  \"71098\": [71096, 71087],\n  \"71099\": [71097, 71087]\n};\nvar stateTable = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]];\nvar accepting = [false, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true];\nvar tags = [[], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"broken_cluster\"], [\"independent_cluster\"], [\"symbol_cluster\"], [\"symbol_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"virama_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"broken_cluster\"], [\"broken_cluster\"], [\"numeral_cluster\"], [\"number_joiner_terminated_cluster\"], [\"standard_cluster\"], [\"standard_cluster\"], [\"numeral_cluster\"]];\nvar useData = {\n  categories: categories$1,\n  decompositions: decompositions$2,\n  stateTable: stateTable,\n  accepting: accepting,\n  tags: tags\n}; // Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\n\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nvar type$1 = \"Buffer\";\nvar data$1 = [0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 216, 96, 1, 102, 15, 153, 240, 237, 157, 123, 140, 92, 85, 29, 199, 239, 238, 206, 206, 204, 238, 204, 238, 116, 11, 68, 8, 98, 81, 32, 196, 80, 109, 64, 34, 182, 20, 22, 144, 96, 10, 137, 88, 77, 164, 85, 81, 68, 9, 136, 65, 80, 131, 144, 54, 8, 8, 106, 45, 32, 15, 65, 76, 44, 252, 33, 229, 47, 138, 254, 193, 67, 99, 193, 180, 18, 17, 44, 16, 80, 33, 96, 20, 176, 168, 53, 4, 172, 81, 2, 162, 32, 126, 207, 220, 115, 230, 158, 57, 115, 222, 143, 123, 103, 101, 126, 201, 39, 247, 113, 206, 61, 231, 119, 126, 191, 243, 190, 119, 103, 151, 212, 178, 236, 96, 176, 12, 28, 1, 78, 6, 167, 128, 79, 128, 207, 130, 119, 131, 247, 70, 56, 158, 14, 206, 6, 95, 2, 235, 28, 158, 91, 15, 46, 3, 27, 192, 53, 224, 187, 224, 102, 176, 25, 108, 1, 119, 130, 123, 52, 207, 95, 0, 46, 6, 63, 7, 191, 2, 247, 131, 71, 192, 19, 224, 105, 176, 4, 252, 5, 252, 13, 188, 12, 230, 193, 127, 65, 125, 50, 15, 155, 197, 113, 79, 240, 86, 112, 32, 88, 10, 14, 3, 43, 192, 113, 224, 68, 240, 33, 176, 6, 156, 6, 206, 2, 95, 0, 95, 1, 95, 5, 223, 0, 87, 130, 235, 193, 38, 176, 25, 108, 1, 119, 130, 173, 224, 62, 240, 32, 120, 12, 60, 5, 254, 8, 118, 129, 221, 224, 21, 240, 6, 152, 172, 103, 217, 12, 216, 11, 236, 7, 14, 4, 75, 193, 225, 96, 37, 56, 22, 172, 170, 231, 186, 175, 198, 113, 13, 56, 141, 94, 159, 133, 227, 121, 224, 66, 112, 17, 184, 28, 92, 1, 190, 67, 195, 191, 143, 227, 45, 224, 54, 112, 7, 216, 90, 207, 203, 125, 31, 61, 218, 242, 32, 141, 255, 24, 142, 191, 4, 79, 209, 235, 199, 233, 241, 58, 240, 12, 206, 31, 226, 158, 217, 229, 152, 135, 13, 207, 112, 105, 238, 198, 249, 43, 224, 13, 208, 104, 100, 89, 7, 188, 5, 44, 1, 7, 131, 101, 224, 136, 70, 127, 124, 114, 156, 167, 247, 30, 6, 31, 192, 249, 201, 224, 20, 240, 169, 70, 110, 175, 51, 113, 60, 151, 198, 185, 128, 222, 187, 24, 199, 111, 130, 171, 27, 121, 125, 154, 167, 220, 136, 235, 77, 96, 51, 184, 13, 220, 1, 182, 210, 103, 238, 163, 199, 29, 56, 254, 134, 166, 247, 84, 131, 218, 10, 199, 63, 55, 244, 101, 125, 209, 16, 206, 219, 248, 37, 196, 221, 65, 239, 221, 13, 94, 195, 117, 173, 153, 101, 237, 102, 17, 119, 15, 156, 239, 75, 175, 79, 2, 7, 52, 7, 211, 59, 68, 114, 47, 148, 195, 154, 121, 219, 115, 121, 102, 69, 2, 61, 82, 115, 52, 116, 62, 94, 162, 247, 243, 224, 90, 73, 252, 19, 105, 92, 214, 22, 87, 227, 122, 45, 248, 52, 133, 143, 123, 36, 173, 111, 159, 227, 238, 175, 208, 232, 66, 234, 246, 23, 185, 184, 223, 166, 199, 13, 66, 188, 11, 155, 121, 255, 203, 235, 186, 142, 62, 247, 181, 166, 92, 111, 134, 46, 108, 196, 136, 17, 126, 60, 60, 4, 58, 140, 24, 49, 98, 196, 136, 17, 35, 70, 140, 88, 120, 28, 57, 4, 58, 136, 60, 71, 215, 186, 223, 114, 88, 223, 175, 84, 220, 95, 174, 121, 230, 90, 164, 127, 61, 216, 4, 54, 131, 45, 224, 78, 112, 15, 216, 14, 30, 0, 143, 130, 39, 193, 179, 96, 87, 51, 223, 91, 218, 141, 227, 63, 193, 127, 192, 196, 84, 150, 181, 192, 28, 216, 7, 188, 125, 42, 223, 207, 121, 39, 142, 135, 130, 229, 224, 88, 112, 6, 45, 203, 102, 46, 255, 85, 184, 191, 122, 170, 122, 123, 143, 24, 49, 98, 196, 155, 9, 178, 111, 185, 22, 125, 239, 251, 106, 197, 62, 125, 85, 84, 109, 139, 17, 35, 70, 196, 225, 4, 110, 206, 74, 222, 115, 206, 131, 211, 208, 207, 156, 5, 206, 19, 230, 122, 23, 58, 206, 253, 78, 162, 199, 121, 154, 199, 81, 224, 146, 169, 226, 125, 234, 6, 156, 95, 45, 164, 121, 195, 84, 241, 94, 135, 135, 188, 151, 185, 9, 97, 183, 14, 193, 252, 243, 181, 69, 57, 43, 231, 96, 35, 240, 147, 69, 102, 54, 32, 222, 3, 138, 184, 47, 224, 254, 254, 139, 179, 108, 13, 184, 6, 60, 186, 184, 63, 252, 247, 8, 111, 238, 145, 101, 123, 131, 53, 224, 146, 233, 44, 219, 6, 178, 86, 150, 29, 3, 46, 33, 71, 114, 143, 30, 119, 210, 35, 207, 59, 218, 89, 246, 189, 177, 156, 211, 113, 254, 131, 246, 96, 156, 157, 184, 55, 62, 83, 92, 31, 135, 243, 75, 193, 118, 48, 54, 139, 117, 1, 184, 116, 182, 72, 39, 22, 219, 105, 154, 175, 226, 184, 188, 147, 159, 31, 223, 233, 143, 179, 174, 147, 235, 244, 211, 206, 160, 222, 35, 70, 140, 24, 49, 162, 28, 254, 93, 113, 31, 28, 123, 252, 113, 97, 197, 162, 234, 243, 159, 175, 189, 185, 185, 28, 220, 142, 121, 224, 93, 83, 131, 235, 81, 242, 157, 207, 189, 184, 191, 141, 155, 39, 222, 143, 243, 71, 166, 242, 249, 232, 14, 73, 122, 236, 251, 187, 39, 232, 250, 154, 156, 63, 61, 149, 127, 83, 71, 210, 219, 73, 211, 122, 94, 146, 223, 18, 154, 230, 63, 16, 246, 50, 247, 60, 219, 55, 125, 125, 202, 111, 253, 76, 190, 153, 34, 223, 76, 28, 37, 209, 119, 18, 109, 160, 9, 22, 77, 23, 115, 227, 189, 167, 243, 176, 253, 113, 60, 24, 44, 155, 238, 207, 239, 136, 233, 98, 30, 62, 143, 243, 19, 192, 7, 167, 139, 252, 88, 188, 143, 210, 123, 159, 156, 206, 191, 251, 58, 3, 199, 207, 131, 47, 79, 15, 234, 191, 126, 186, 184, 94, 70, 211, 190, 140, 62, 191, 113, 218, 236, 199, 121, 170, 187, 204, 62, 196, 126, 15, 73, 194, 136, 93, 174, 67, 218, 55, 130, 155, 193, 45, 224, 54, 240, 35, 240, 99, 112, 47, 248, 5, 120, 8, 252, 22, 252, 14, 236, 4, 187, 192, 110, 240, 10, 120, 3, 212, 90, 69, 154, 109, 156, 239, 9, 246, 5, 7, 128, 67, 192, 161, 96, 57, 56, 182, 53, 168, 195, 189, 208, 97, 21, 238, 175, 166, 97, 107, 113, 60, 21, 156, 33, 137, 203, 226, 159, 131, 176, 243, 91, 197, 245, 69, 56, 255, 58, 184, 10, 252, 12, 215, 55, 224, 120, 19, 13, 191, 21, 199, 219, 21, 105, 17, 72, 252, 187, 90, 131, 54, 35, 156, 42, 169, 111, 221, 60, 17, 127, 59, 120, 16, 60, 6, 30, 7, 127, 104, 229, 123, 255, 127, 194, 241, 133, 86, 254, 252, 238, 186, 217, 103, 47, 33, 238, 171, 96, 12, 235, 133, 58, 104, 129, 185, 118, 17, 190, 15, 206, 247, 3, 7, 129, 119, 129, 247, 180, 139, 178, 153, 56, 178, 173, 14, 35, 250, 189, 191, 93, 254, 122, 79, 172, 135, 124, 216, 73, 26, 125, 142, 182, 40, 175, 15, 101, 151, 95, 198, 71, 52, 126, 42, 139, 88, 101, 33, 223, 242, 86, 149, 63, 105, 111, 164, 15, 252, 56, 103, 79, 50, 78, 125, 134, 171, 87, 103, 226, 252, 156, 118, 241, 189, 108, 42, 59, 174, 107, 202, 239, 159, 79, 117, 89, 207, 233, 120, 116, 68, 251, 47, 68, 116, 239, 105, 99, 176, 204, 179, 78, 150, 137, 169, 12, 108, 108, 191, 12, 245, 102, 163, 99, 191, 61, 12, 239, 57, 92, 202, 127, 13, 202, 119, 67, 59, 93, 159, 239, 106, 127, 246, 189, 237, 149, 138, 240, 245, 220, 220, 111, 147, 164, 47, 231, 191, 195, 39, 115, 46, 217, 188, 128, 133, 223, 77, 143, 228, 239, 154, 54, 35, 173, 45, 212, 215, 119, 224, 248, 67, 176, 213, 193, 247, 47, 90, 252, 125, 205, 49, 9, 254, 142, 98, 27, 116, 124, 96, 8, 198, 52, 91, 30, 133, 174, 79, 26, 230, 74, 207, 182, 251, 199, 21, 219, 58, 181, 204, 114, 238, 94, 37, 42, 63, 254, 181, 221, 31, 254, 247, 18, 124, 250, 47, 90, 191, 95, 231, 242, 34, 239, 48, 100, 107, 77, 6, 105, 35, 147, 51, 89, 54, 3, 246, 2, 251, 129, 131, 102, 242, 176, 165, 51, 118, 229, 231, 255, 174, 137, 180, 215, 141, 224, 240, 153, 188, 237, 63, 199, 181, 35, 118, 126, 21, 157, 131, 175, 68, 156, 227, 103, 242, 62, 246, 196, 25, 121, 251, 87, 217, 55, 53, 68, 247, 15, 207, 244, 223, 227, 251, 34, 210, 15, 173, 228, 202, 190, 145, 246, 99, 100, 189, 248, 49, 206, 110, 151, 115, 207, 156, 78, 211, 59, 27, 199, 43, 106, 131, 105, 159, 139, 251, 231, 91, 216, 124, 152, 168, 202, 63, 169, 89, 219, 252, 255, 46, 31, 207, 235, 154, 113, 113, 71, 73, 58, 12, 43, 191, 174, 56, 255, 71, 20, 251, 40, 101, 18, 90, 6, 221, 248, 179, 16, 184, 72, 24, 7, 92, 236, 147, 106, 173, 188, 144, 252, 191, 144, 33, 117, 247, 109, 181, 177, 46, 157, 44, 91, 112, 144, 253, 101, 254, 220, 134, 170, 117, 30, 86, 222, 236, 82, 181, 253, 163, 213, 77, 250, 123, 22, 11, 66, 215, 33, 134, 137, 41, 220, 20, 175, 195, 133, 155, 226, 249, 234, 89, 181, 173, 22, 90, 57, 108, 124, 54, 76, 200, 244, 93, 72, 250, 235, 202, 164, 146, 42, 117, 241, 213, 185, 42, 253, 135, 189, 78, 84, 105, 147, 178, 235, 142, 173, 84, 173, 247, 66, 245, 127, 140, 180, 170, 176, 63, 175, 183, 107, 254, 41, 36, 85, 25, 23, 74, 89, 102, 155, 253, 212, 198, 35, 48, 22, 145, 69, 118, 241, 166, 26, 57, 205, 9, 148, 99, 113, 126, 62, 222, 40, 238, 187, 208, 172, 21, 207, 118, 109, 52, 77, 161, 54, 226, 227, 26, 117, 163, 54, 153, 226, 210, 35, 184, 174, 211, 189, 109, 221, 234, 247, 111, 166, 75, 139, 194, 68, 117, 237, 234, 195, 238, 179, 26, 255, 178, 112, 94, 100, 105, 16, 97, 254, 109, 83, 255, 182, 37, 254, 99, 50, 78, 227, 48, 105, 211, 248, 196, 191, 98, 126, 50, 105, 55, 6, 239, 13, 148, 73, 240, 111, 47, 158, 165, 127, 89, 253, 118, 105, 175, 228, 200, 231, 101, 235, 223, 129, 178, 148, 236, 95, 49, 174, 120, 78, 132, 248, 151, 217, 158, 249, 151, 33, 243, 79, 91, 225, 95, 94, 72, 219, 213, 137, 170, 60, 218, 103, 44, 253, 219, 235, 87, 199, 10, 63, 215, 230, 220, 198, 0, 215, 246, 203, 124, 170, 188, 46, 201, 191, 182, 237, 87, 132, 213, 109, 214, 166, 152, 143, 101, 254, 13, 29, 75, 153, 77, 196, 186, 228, 218, 63, 107, 243, 24, 227, 198, 16, 80, 159, 40, 32, 210, 88, 32, 253, 179, 171, 127, 39, 45, 250, 231, 73, 139, 246, 43, 147, 73, 69, 159, 16, 187, 127, 238, 100, 69, 187, 13, 153, 199, 177, 126, 187, 155, 183, 69, 255, 172, 107, 203, 170, 177, 146, 157, 139, 247, 100, 241, 196, 123, 202, 251, 150, 243, 47, 81, 248, 182, 44, 235, 191, 217, 216, 60, 46, 180, 109, 66, 221, 178, 125, 203, 252, 175, 146, 20, 239, 69, 100, 34, 206, 167, 109, 230, 212, 93, 253, 12, 254, 142, 217, 158, 93, 253, 73, 218, 51, 249, 125, 104, 17, 190, 77, 241, 247, 197, 235, 186, 161, 61, 243, 207, 233, 234, 20, 111, 23, 254, 25, 23, 255, 234, 196, 103, 189, 164, 157, 155, 15, 129, 127, 85, 113, 153, 176, 254, 218, 198, 191, 252, 53, 59, 183, 241, 175, 216, 247, 202, 164, 167, 107, 4, 255, 118, 58, 57, 62, 34, 250, 151, 215, 169, 44, 255, 106, 177, 108, 191, 4, 102, 119, 54, 30, 171, 32, 98, 234, 143, 187, 54, 85, 248, 141, 209, 110, 232, 219, 14, 111, 147, 208, 249, 150, 9, 83, 191, 230, 58, 159, 182, 157, 115, 203, 236, 18, 3, 171, 52, 37, 107, 105, 219, 62, 94, 214, 134, 85, 251, 35, 44, 140, 29, 217, 94, 137, 108, 191, 69, 37, 174, 253, 53, 191, 127, 226, 42, 177, 125, 225, 11, 91, 183, 219, 34, 10, 121, 158, 111, 167, 227, 141, 254, 125, 42, 114, 228, 215, 22, 132, 110, 251, 111, 22, 113, 98, 172, 107, 196, 58, 169, 178, 113, 10, 219, 155, 242, 12, 177, 119, 119, 63, 111, 46, 135, 137, 204, 222, 204, 23, 68, 68, 123, 215, 179, 162, 95, 201, 28, 236, 173, 170, 171, 41, 246, 167, 121, 154, 20, 101, 63, 106, 187, 143, 229, 80, 175, 248, 250, 218, 161, 54, 20, 243, 37, 38, 153, 176, 240, 113, 138, 58, 166, 235, 39, 51, 143, 58, 197, 218, 32, 107, 135, 100, 60, 38, 245, 164, 174, 210, 125, 206, 158, 110, 249, 29, 226, 167, 128, 181, 7, 29, 252, 222, 183, 108, 29, 229, 83, 119, 101, 82, 117, 31, 223, 197, 114, 190, 160, 170, 43, 178, 113, 148, 212, 157, 238, 92, 157, 172, 57, 102, 251, 251, 170, 30, 36, 111, 151, 125, 13, 174, 159, 231, 247, 58, 100, 101, 24, 232, 39, 117, 117, 118, 44, 143, 211, 154, 200, 97, 113, 216, 179, 236, 62, 15, 159, 150, 49, 47, 27, 230, 6, 109, 41, 203, 151, 208, 164, 249, 119, 245, 176, 180, 31, 123, 86, 124, 175, 99, 170, 227, 50, 233, 8, 231, 161, 200, 210, 177, 73, 63, 11, 124, 62, 52, 255, 212, 229, 243, 73, 183, 12, 120, 73, 157, 135, 111, 120, 170, 242, 138, 226, 179, 110, 238, 62, 39, 220, 179, 89, 131, 196, 202, 95, 6, 159, 191, 77, 185, 83, 229, 239, 42, 49, 236, 79, 196, 59, 255, 178, 198, 104, 155, 125, 148, 8, 123, 2, 204, 247, 186, 253, 23, 17, 126, 173, 209, 219, 131, 161, 99, 127, 247, 124, 38, 135, 221, 151, 165, 65, 230, 8, 166, 253, 24, 2, 219, 27, 234, 217, 63, 112, 31, 53, 180, 15, 40, 171, 255, 142, 145, 127, 108, 253, 9, 93, 251, 150, 213, 6, 36, 237, 216, 101, 141, 204, 175, 147, 153, 176, 251, 221, 247, 30, 154, 53, 131, 110, 143, 67, 102, 79, 235, 53, 102, 76, 155, 120, 236, 253, 185, 142, 119, 3, 246, 243, 240, 25, 47, 170, 245, 4, 191, 87, 164, 90, 99, 200, 252, 43, 194, 230, 189, 74, 253, 29, 246, 2, 164, 126, 78, 88, 191, 101, 101, 143, 146, 191, 170, 94, 176, 112, 137, 29, 187, 107, 127, 217, 58, 122, 214, 111, 127, 65, 181, 47, 72, 218, 225, 192, 30, 213, 68, 255, 179, 124, 221, 9, 237, 255, 67, 159, 231, 223, 189, 176, 49, 207, 123, 252, 77, 80, 135, 68, 219, 153, 252, 33, 222, 111, 213, 244, 233, 251, 218, 211, 103, 172, 33, 117, 176, 153, 21, 123, 81, 50, 92, 199, 65, 107, 191, 165, 28, 203, 36, 227, 140, 204, 23, 164, 173, 245, 237, 157, 140, 217, 219, 155, 204, 155, 164, 121, 42, 250, 6, 219, 122, 99, 26, 31, 69, 25, 152, 63, 40, 108, 161, 171, 147, 186, 254, 158, 223, 183, 108, 78, 232, 243, 118, 25, 167, 251, 234, 56, 167, 111, 232, 252, 201, 52, 222, 166, 76, 155, 8, 255, 157, 87, 71, 184, 182, 102, 177, 128, 228, 30, 179, 23, 9, 227, 207, 25, 170, 62, 54, 134, 125, 109, 237, 100, 218, 243, 213, 233, 99, 171, 111, 102, 56, 234, 158, 9, 241, 127, 138, 180, 109, 243, 179, 205, 195, 75, 151, 73, 80, 47, 174, 99, 140, 53, 62, 122, 244, 202, 109, 177, 134, 149, 210, 200, 156, 255, 6, 216, 215, 119, 188, 132, 250, 219, 244, 173, 178, 73, 66, 116, 143, 161, 191, 46, 237, 20, 226, 170, 83, 173, 29, 183, 140, 202, 122, 155, 152, 84, 249, 132, 218, 88, 39, 161, 245, 162, 44, 155, 250, 234, 80, 117, 120, 108, 91, 248, 218, 72, 39, 101, 215, 199, 212, 245, 35, 212, 62, 195, 84, 127, 93, 242, 72, 81, 55, 92, 197, 70, 95, 254, 253, 53, 191, 254, 172, 75, 214, 225, 252, 223, 233, 164, 220, 127, 146, 189, 27, 82, 217, 48, 212, 247, 73, 215, 217, 58, 76, 235, 253, 113, 205, 154, 89, 182, 134, 29, 43, 190, 183, 118, 169, 115, 209, 254, 174, 53, 225, 94, 133, 203, 62, 31, 249, 219, 24, 254, 251, 50, 149, 244, 234, 127, 232, 126, 156, 207, 250, 213, 102, 77, 75, 209, 181, 91, 151, 253, 200, 210, 235, 179, 132, 230, 68, 65, 175, 28, 137, 251, 15, 221, 62, 142, 235, 251, 215, 14, 215, 94, 180, 123, 120, 42, 187, 68, 182, 185, 110, 207, 140, 223, 203, 234, 123, 63, 81, 243, 31, 215, 66, 218, 139, 206, 223, 172, 159, 183, 42, 119, 64, 125, 207, 50, 77, 253, 76, 221, 62, 44, 234, 169, 184, 255, 40, 123, 255, 97, 146, 144, 111, 20, 51, 15, 255, 14, 244, 75, 129, 182, 25, 72, 67, 177, 175, 66, 194, 90, 244, 93, 141, 248, 125, 92, 108, 223, 168, 222, 13, 138, 247, 217, 119, 186, 236, 152, 90, 116, 243, 57, 155, 178, 202, 202, 36, 75, 147, 125, 83, 25, 162, 151, 105, 110, 236, 18, 174, 19, 111, 223, 243, 118, 179, 237, 15, 12, 109, 202, 52, 30, 145, 50, 177, 111, 36, 123, 250, 7, 206, 71, 92, 230, 192, 161, 107, 29, 223, 57, 183, 139, 238, 174, 101, 140, 173, 191, 238, 126, 166, 136, 91, 166, 142, 190, 182, 150, 73, 21, 249, 134, 150, 183, 12, 127, 135, 60, 111, 83, 222, 216, 229, 8, 177, 165, 201, 174, 41, 194, 77, 246, 177, 181, 147, 173, 248, 214, 39, 83, 120, 72, 125, 9, 77, 219, 70, 127, 215, 231, 109, 236, 150, 170, 46, 198, 200, 207, 39, 13, 89, 153, 171, 148, 216, 54, 13, 205, 191, 44, 157, 83, 249, 62, 150, 174, 182, 18, 154, 94, 10, 187, 184, 164, 239, 34, 49, 218, 138, 73, 15, 157, 111, 83, 213, 31, 85, 25, 171, 168, 191, 46, 254, 137, 89, 143, 67, 242, 8, 181, 121, 138, 188, 92, 116, 170, 34, 255, 170, 202, 111, 202, 147, 172, 123, 39, 133, 111, 99, 201, 145, 255, 157, 42, 94, 88, 60, 241, 119, 222, 250, 246, 228, 52, 215, 169, 96, 82, 231, 246, 164, 7, 202, 62, 27, 182, 22, 151, 217, 47, 102, 27, 246, 201, 203, 54, 95, 223, 52, 135, 169, 93, 165, 44, 143, 139, 205, 92, 37, 212, 103, 190, 105, 199, 202, 35, 52, 255, 20, 62, 240, 45, 107, 104, 58, 125, 191, 133, 213, 201, 25, 186, 119, 172, 134, 253, 111, 25, 117, 195, 123, 36, 81, 172, 223, 219, 4, 244, 181, 38, 233, 126, 151, 238, 243, 91, 206, 145, 237, 107, 250, 221, 101, 242, 14, 155, 127, 71, 26, 218, 70, 59, 194, 249, 48, 183, 59, 173, 127, 74, 168, 255, 166, 182, 160, 243, 29, 251, 219, 36, 34, 190, 127, 151, 194, 231, 107, 35, 101, 246, 19, 98, 157, 180, 145, 40, 191, 157, 158, 208, 191, 174, 191, 129, 78, 222, 159, 235, 190, 203, 32, 176, 191, 5, 225, 223, 243, 244, 252, 229, 89, 47, 120, 155, 199, 234, 75, 125, 250, 212, 88, 190, 234, 166, 149, 96, 124, 34, 245, 140, 248, 136, 125, 159, 161, 178, 35, 251, 142, 92, 167, 63, 211, 81, 166, 171, 175, 254, 62, 207, 235, 218, 90, 213, 109, 200, 5, 246, 119, 82, 198, 241, 111, 66, 221, 255, 133, 214, 105, 223, 223, 175, 228, 227, 13, 216, 62, 178, 239, 249, 112, 85, 92, 34, 108, 221, 202, 254, 159, 131, 10, 38, 226, 239, 253, 243, 125, 26, 19, 93, 93, 83, 249, 164, 147, 13, 246, 241, 98, 222, 186, 111, 223, 250, 252, 99, 8, 55, 73, 138, 122, 235, 51, 78, 176, 239, 16, 25, 204, 79, 166, 121, 145, 75, 253, 102, 190, 98, 99, 142, 237, 239, 237, 166, 236, 35, 108, 108, 165, 10, 239, 179, 87, 77, 110, 51, 163, 255, 3, 251, 135, 84, 101, 103, 34, 134, 203, 202, 28, 115, 141, 60, 80, 191, 4, 159, 139, 250, 197, 240, 191, 43, 124, 249, 217, 124, 201, 119, 173, 147, 242, 251, 153, 24, 107, 49, 163, 254, 142, 227, 169, 237, 152, 218, 170, 21, 191, 227, 166, 205, 191, 132, 117, 120, 172, 242, 135, 210, 203, 211, 226, 155, 45, 83, 187, 118, 181, 159, 110, 253, 151, 106, 108, 146, 245, 51, 3, 250, 59, 206, 133, 202, 222, 35, 97, 162, 43, 27, 63, 102, 140, 75, 124, 148, 82, 248, 62, 213, 68, 234, 250, 45, 27, 99, 250, 126, 151, 95, 252, 102, 81, 177, 238, 236, 221, 183, 248, 6, 212, 165, 252, 50, 27, 40, 199, 45, 199, 239, 153, 251, 202, 58, 43, 172, 253, 20, 243, 176, 42, 196, 102, 94, 38, 141, 151, 176, 190, 232, 214, 17, 166, 57, 91, 168, 109, 99, 239, 103, 248, 246, 171, 46, 99, 134, 235, 119, 246, 166, 111, 134, 85, 115, 196, 208, 250, 196, 135, 247, 206, 75, 172, 71, 188, 136, 245, 137, 157, 243, 235, 37, 22, 214, 109, 191, 157, 194, 126, 49, 234, 143, 171, 253, 164, 182, 75, 188, 55, 169, 107, 127, 252, 185, 216, 207, 105, 237, 19, 75, 199, 214, 224, 220, 200, 166, 173, 199, 90, 199, 248, 72, 140, 60, 67, 117, 73, 145, 191, 139, 62, 190, 246, 141, 53, 70, 134, 250, 59, 180, 62, 196, 182, 117, 140, 122, 27, 43, 173, 84, 250, 149, 149, 190, 141, 132, 166, 229, 170, 207, 48, 250, 62, 134, 190, 166, 248, 101, 139, 76, 39, 241, 154, 191, 239, 99, 51, 155, 103, 125, 210, 142, 85, 55, 92, 125, 100, 171, 179, 109, 56, 47, 169, 108, 20, 34, 41, 252, 21, 42, 101, 212, 37, 215, 188, 84, 113, 83, 72, 168, 205, 83, 216, 36, 52, 109, 23, 123, 133, 166, 25, 250, 92, 12, 137, 81, 71, 67, 237, 40, 211, 39, 203, 250, 159, 215, 213, 109, 83, 155, 144, 165, 169, 211, 77, 101, 115, 213, 81, 150, 167, 78, 127, 155, 244, 100, 207, 155, 202, 103, 91, 126, 157, 77, 124, 109, 27, 171, 110, 216, 228, 147, 50, 127, 23, 137, 145, 78, 168, 254, 41, 202, 31, 195, 182, 101, 248, 34, 117, 190, 161, 254, 13, 213, 39, 180, 28, 85, 181, 139, 208, 252, 109, 234, 185, 107, 62, 166, 184, 41, 244, 54, 229, 173, 179, 151, 143, 196, 240, 103, 76, 255, 135, 202, 255, 0];\nvar trieData$1 = {\n  type: type$1,\n  data: data$1\n};\n\nfunction _createForOfIteratorHelperLoose$e(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$e(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$e(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$e(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$e(o, minLen);\n}\n\nfunction _arrayLikeToArray$e(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar decompositions$1 = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine$1 = new StateMachine(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions$1[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper);\n\n_defineProperty(IndicShaper, \"zeroMarkWidths\", 'NONE');\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose$e(stateMachine$1.match(glyphs.map(indicCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i = last; _i < start; _i++) {\n        glyphs[_i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable; // Create shaper info\n\n    for (var _i2 = start; _i2 <= end; _i2++) {\n      glyphs[_i2].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i2]), indicPosition(glyphs[_i2]), tags[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose$e(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var _glyph$features;\n\n    var glyph = _step2.value;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo;\n    _glyphs$start$shaperI.category;\n    var syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i3 = start;\n\n      while (_i3 < end && glyphs[_i3].shaperInfo.category === CATEGORIES.Repha) {\n        _i3++;\n      }\n\n      glyphs.splice(_i3++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i4 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i4].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i4])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i4;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i4;\n            } else if (start < _i4 && _info.category === CATEGORIES.ZWJ && glyphs[_i4 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i4 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i5 = base + 1; _i5 < end; _i5++) {\n            if (isConsonant(glyphs[_i5])) {\n              glyphs[_i5].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n\n    for (var _i6 = start; _i6 < base; _i6++) {\n      var _info2 = glyphs[_i6].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n\n    for (var _i7 = base + 1; _i7 < end; _i7++) {\n      if (glyphs[_i7].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i7 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    } // Handle beginning Ra\n\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i8 = base + 1; _i8 < end; _i8++) {\n        if (glyphs[_i8].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i8; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i8) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i8];\n            glyphs.splice.apply(glyphs, [_i8, 0].concat(glyphs.splice(_i8 + 1, _j - _i8)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i9 = start; _i9 < end; _i9++) {\n      var _info3 = glyphs[_i9].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i9; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    var last = base;\n\n    for (var _i10 = base + 1; _i10 < end; _i10++) {\n      if (isConsonant(glyphs[_i10])) {\n        for (var _j3 = last + 1; _j3 < _i10; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i10].shaperInfo.position;\n          }\n        }\n\n        last = _i10;\n      } else if (glyphs[_i10].shaperInfo.category === CATEGORIES.M) {\n        last = _i10;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      if (glyphs[_i11].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i11;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n\n    for (var _i12 = start; _i12 < end && glyphs[_i12].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i12++) {\n      glyphs[_i12].features.rphf = true;\n    } // Pre-base\n\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i13 = start; _i13 < base; _i13++) {\n      glyphs[_i13].features.half = true;\n\n      if (blwf) {\n        glyphs[_i13].features.blwf = true;\n      }\n    } // Post-base\n\n\n    for (var _i14 = base + 1; _i14 < end; _i14++) {\n      glyphs[_i14].features.abvf = true;\n      glyphs[_i14].features.pstf = true;\n      glyphs[_i14].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i15 = start; _i15 + 1 < base; _i15++) {\n        if (glyphs[_i15].shaperInfo.category === CATEGORIES.Ra && glyphs[_i15 + 1].shaperInfo.category === CATEGORIES.H && (_i15 + 1 === base || glyphs[_i15 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i15].features.blwf = true;\n          glyphs[_i15 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i16 = base + 1; _i16 + prefLen - 1 < end; _i16++) {\n        var _g2 = [glyphs[_i16].copy(), glyphs[_i16 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i16++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) {\n            for (; _i16 < end; _i16++) {\n              glyphs[_i16].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n\n    for (var _i17 = start + 1; _i17 < end; _i17++) {\n      if (isJoiner(glyphs[_i17])) {\n        var nonJoiner = glyphs[_i17].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i17;\n\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i18 = base + 1; _i18 < end; _i18++) {\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 === end || !isHalantOrCoeng(glyphs[_i18])) {\n              break;\n            }\n\n            _i18++; // Skip halant.\n\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 < end && isConsonant(glyphs[_i18]) && glyphs[_i18].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i18;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i19 = newPos; _i19 > start; _i19--) {\n          if (glyphs[_i19 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i19 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i20 = base + 1; _i20 < newRephPos; _i20++) {\n            if (glyphs[_i20].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (var _i21 = base + 1; _i21 < end; _i21++) {\n        if (glyphs[_i21].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i21].isLigated && !glyphs[_i21].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i21;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i21;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nvar type = \"Buffer\";\nvar data = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 186, 16, 1, 5, 14, 250, 241, 237, 156, 123, 140, 95, 69, 21, 199, 103, 119, 187, 251, 123, 109, 119, 187, 22, 90, 160, 188, 31, 166, 165, 8, 69, 154, 24, 164, 49, 16, 32, 209, 148, 38, 106, 67, 20, 249, 195, 214, 7, 54, 98, 176, 65, 141, 141, 74, 104, 136, 134, 2, 18, 9, 134, 80, 99, 132, 26, 163, 149, 52, 245, 25, 80, 99, 64, 249, 3, 72, 5, 77, 138, 68, 65, 5, 21, 35, 1, 81, 132, 72, 72, 197, 196, 248, 29, 239, 156, 252, 206, 206, 158, 121, 222, 215, 22, 126, 39, 249, 100, 238, 99, 158, 231, 204, 204, 157, 153, 59, 247, 174, 154, 80, 234, 20, 176, 22, 156, 3, 46, 4, 27, 193, 102, 112, 185, 185, 118, 94, 5, 238, 22, 176, 13, 108, 7, 59, 60, 254, 118, 130, 93, 194, 245, 27, 193, 173, 96, 55, 216, 3, 190, 13, 190, 7, 238, 1, 247, 25, 30, 100, 254, 127, 1, 30, 5, 191, 3, 79, 11, 241, 61, 5, 158, 1, 171, 192, 11, 38, 111, 171, 204, 253, 85, 140, 87, 192, 33, 160, 150, 40, 213, 5, 203, 192, 10, 112, 60, 120, 35, 56, 19, 172, 7, 27, 192, 69, 224, 18, 240, 110, 240, 62, 240, 1, 240, 81, 176, 29, 236, 0, 59, 193, 46, 112, 11, 216, 13, 238, 4, 123, 193, 126, 112, 55, 184, 23, 60, 0, 30, 6, 191, 6, 191, 7, 127, 1, 207, 130, 23, 193, 33, 160, 38, 149, 234, 128, 89, 176, 18, 156, 0, 78, 5, 103, 76, 22, 121, 95, 15, 247, 60, 112, 161, 57, 223, 8, 119, 51, 184, 28, 108, 1, 219, 192, 199, 193, 167, 205, 253, 107, 225, 126, 1, 220, 12, 110, 3, 95, 155, 28, 150, 253, 155, 147, 243, 117, 81, 150, 253, 136, 239, 251, 21, 199, 201, 249, 177, 21, 247, 125, 56, 127, 16, 252, 10, 252, 6, 60, 53, 89, 148, 247, 25, 240, 2, 120, 5, 252, 55, 144, 159, 169, 41, 165, 102, 192, 10, 176, 106, 170, 8, 127, 10, 220, 53, 224, 108, 112, 174, 185, 118, 1, 220, 119, 128, 119, 129, 203, 166, 10, 221, 106, 182, 226, 248, 67, 224, 99, 224, 147, 224, 115, 224, 243, 38, 204, 77, 198, 253, 50, 220, 175, 130, 27, 88, 186, 223, 192, 249, 190, 41, 127, 222, 126, 16, 184, 31, 195, 79, 16, 199, 253, 224, 0, 56, 8, 158, 48, 229, 210, 247, 158, 132, 251, 87, 240, 15, 240, 178, 185, 246, 42, 220, 241, 14, 234, 32, 88, 218, 9, 199, 127, 36, 252, 28, 215, 41, 226, 60, 17, 238, 106, 112, 22, 88, 15, 214, 153, 180, 54, 224, 248, 12, 19, 215, 219, 140, 95, 205, 197, 236, 152, 179, 9, 215, 47, 5, 151, 89, 247, 183, 58, 252, 19, 31, 49, 105, 159, 205, 244, 230, 243, 207, 253, 229, 162, 227, 248, 48, 210, 188, 10, 92, 13, 118, 116, 226, 227, 223, 105, 233, 247, 76, 193, 207, 46, 248, 185, 5, 236, 238, 20, 245, 109, 15, 139, 127, 169, 71, 31, 123, 113, 111, 63, 184, 27, 220, 235, 176, 163, 212, 254, 31, 232, 12, 203, 245, 8, 142, 31, 3, 127, 0, 79, 155, 180, 244, 241, 223, 204, 241, 99, 1, 123, 84, 161, 223, 17, 35, 94, 143, 140, 218, 207, 136, 17, 35, 70, 140, 24, 49, 98, 196, 136, 215, 2, 235, 58, 195, 53, 129, 27, 34, 252, 255, 147, 205, 93, 255, 101, 205, 99, 191, 24, 17, 254, 63, 8, 51, 209, 45, 214, 97, 6, 112, 151, 131, 21, 224, 56, 112, 154, 185, 254, 38, 184, 235, 187, 133, 255, 13, 112, 207, 7, 111, 7, 239, 52, 247, 223, 11, 119, 11, 216, 102, 206, 183, 195, 221, 1, 118, 118, 221, 233, 106, 127, 187, 60, 247, 71, 140, 24, 49, 98, 68, 189, 156, 211, 50, 109, 151, 127, 196, 136, 17, 245, 80, 119, 251, 254, 18, 198, 143, 183, 119, 139, 247, 66, 119, 192, 253, 150, 48, 158, 252, 78, 183, 120, 183, 175, 143, 239, 177, 238, 223, 183, 8, 198, 159, 127, 159, 46, 152, 94, 170, 212, 37, 224, 145, 233, 48, 59, 225, 239, 231, 150, 95, 53, 51, 60, 94, 141, 227, 45, 96, 15, 120, 28, 28, 50, 247, 86, 207, 98, 140, 62, 59, 244, 183, 3, 199, 123, 160, 131, 63, 129, 19, 123, 8, 3, 246, 244, 138, 177, 252, 29, 83, 133, 251, 176, 57, 231, 12, 250, 240, 55, 54, 100, 99, 127, 161, 159, 155, 112, 109, 31, 187, 254, 60, 142, 215, 14, 148, 186, 18, 236, 3, 207, 131, 181, 211, 237, 63, 127, 218, 38, 212, 94, 30, 132, 238, 14, 152, 122, 122, 16, 238, 227, 198, 94, 122, 158, 248, 108, 55, 253, 121, 186, 223, 184, 103, 70, 250, 231, 188, 152, 145, 158, 212, 39, 72, 225, 95, 70, 220, 175, 118, 231, 251, 163, 252, 238, 247, 164, 55, 142, 250, 217, 3, 115, 189, 97, 217, 180, 191, 163, 112, 126, 108, 175, 56, 63, 185, 55, 244, 127, 122, 111, 126, 62, 98, 251, 171, 88, 91, 186, 202, 247, 230, 158, 124, 239, 173, 184, 190, 1, 92, 4, 54, 130, 205, 224, 61, 224, 73, 115, 255, 253, 56, 190, 2, 92, 5, 174, 54, 247, 63, 3, 174, 3, 55, 130, 91, 193, 237, 44, 238, 59, 113, 188, 23, 236, 3, 63, 4, 63, 5, 247, 131, 3, 224, 160, 144, 7, 61, 15, 127, 2, 215, 255, 108, 238, 233, 253, 52, 207, 225, 248, 37, 193, 47, 249, 255, 55, 238, 141, 245, 135, 231, 61, 28, 207, 129, 163, 251, 197, 249, 73, 253, 98, 111, 137, 190, 191, 6, 199, 103, 247, 221, 58, 211, 254, 207, 237, 203, 58, 115, 233, 253, 2, 248, 191, 24, 108, 2, 151, 130, 203, 192, 86, 147, 246, 182, 126, 209, 102, 98, 237, 182, 29, 254, 63, 5, 174, 1, 215, 129, 235, 193, 205, 44, 63, 183, 225, 248, 43, 224, 235, 224, 46, 240, 93, 86, 182, 16, 63, 242, 148, 251, 81, 228, 241, 103, 253, 118, 158, 57, 46, 93, 63, 20, 200, 207, 98, 234, 43, 171, 212, 65, 27, 233, 255, 178, 63, 63, 222, 131, 70, 247, 191, 133, 251, 199, 126, 185, 124, 198, 150, 227, 105, 79, 187, 179, 211, 191, 171, 226, 242, 47, 198, 250, 85, 133, 253, 203, 212, 147, 182, 203, 151, 90, 254, 231, 250, 205, 230, 219, 183, 143, 106, 175, 89, 55, 127, 169, 95, 184, 135, 224, 42, 140, 49, 167, 6, 197, 249, 244, 96, 232, 247, 136, 129, 92, 54, 186, 191, 166, 35, 151, 171, 238, 250, 31, 34, 180, 151, 44, 102, 175, 217, 202, 65, 225, 30, 15, 247, 180, 193, 225, 81, 239, 108, 253, 135, 238, 159, 46, 216, 55, 20, 239, 67, 194, 216, 118, 177, 17, 219, 239, 220, 208, 96, 94, 206, 26, 204, 191, 118, 77, 70, 254, 207, 153, 136, 171, 135, 186, 14, 191, 133, 181, 99, 189, 191, 115, 3, 206, 207, 31, 20, 237, 127, 29, 219, 111, 121, 177, 241, 55, 48, 249, 219, 4, 247, 210, 65, 177, 239, 246, 114, 184, 31, 20, 234, 136, 175, 237, 172, 142, 216, 203, 153, 139, 206, 251, 149, 131, 249, 215, 248, 222, 213, 231, 80, 55, 175, 232, 12, 203, 254, 9, 227, 126, 22, 238, 93, 157, 97, 254, 79, 101, 97, 174, 53, 126, 174, 135, 123, 179, 16, 247, 173, 184, 182, 59, 177, 157, 180, 205, 49, 19, 99, 106, 49, 200, 24, 99, 220, 58, 231, 126, 200, 157, 96, 247, 151, 68, 98, 199, 167, 28, 215, 234, 150, 197, 161, 241, 145, 144, 80, 93, 26, 23, 32, 91, 141, 11, 225, 198, 45, 119, 210, 64, 18, 83, 183, 234, 174, 11, 19, 53, 199, 95, 181, 76, 181, 157, 129, 18, 18, 99, 203, 215, 83, 219, 151, 218, 204, 235, 73, 198, 28, 44, 6, 177, 243, 193, 251, 188, 195, 93, 164, 49, 131, 125, 124, 184, 72, 110, 157, 145, 198, 82, 57, 246, 181, 245, 119, 56, 233, 176, 169, 118, 23, 27, 119, 138, 238, 171, 110, 135, 220, 246, 174, 126, 41, 196, 107, 93, 92, 243, 14, 126, 191, 10, 187, 228, 234, 159, 242, 212, 97, 96, 26, 27, 61, 255, 169, 154, 30, 48, 75, 130, 255, 63, 215, 199, 211, 198, 93, 106, 209, 179, 232, 91, 204, 176, 176, 84, 198, 89, 166, 179, 30, 139, 43, 54, 127, 228, 63, 103, 158, 168, 74, 232, 101, 130, 217, 166, 27, 25, 151, 178, 252, 217, 231, 169, 132, 194, 42, 53, 63, 29, 201, 63, 73, 140, 125, 73, 166, 13, 246, 185, 182, 111, 76, 31, 210, 23, 174, 185, 202, 100, 167, 157, 170, 163, 80, 123, 166, 251, 84, 39, 248, 220, 142, 183, 63, 95, 218, 190, 178, 228, 228, 57, 213, 190, 161, 99, 45, 3, 227, 74, 246, 181, 133, 218, 175, 125, 62, 99, 249, 155, 85, 126, 137, 169, 143, 161, 48, 46, 180, 93, 150, 169, 162, 29, 210, 252, 119, 78, 165, 61, 195, 98, 237, 235, 179, 73, 74, 158, 171, 178, 111, 110, 251, 37, 155, 242, 62, 90, 169, 249, 253, 115, 85, 82, 182, 253, 210, 88, 54, 148, 6, 127, 78, 46, 99, 40, 117, 248, 244, 207, 169, 246, 165, 103, 107, 78, 255, 28, 18, 187, 237, 219, 58, 176, 243, 153, 107, 223, 113, 53, 191, 124, 185, 162, 109, 28, 122, 150, 75, 229, 112, 233, 92, 242, 171, 4, 255, 46, 127, 174, 116, 164, 235, 177, 117, 136, 11, 181, 85, 62, 190, 226, 50, 173, 230, 219, 159, 159, 199, 182, 111, 233, 249, 236, 146, 156, 114, 72, 107, 176, 161, 181, 9, 222, 150, 187, 230, 60, 181, 253, 165, 228, 55, 167, 61, 167, 234, 65, 159, 251, 198, 203, 74, 45, 236, 171, 249, 121, 200, 158, 52, 158, 150, 244, 96, 75, 217, 246, 236, 147, 208, 51, 153, 250, 2, 110, 227, 152, 177, 188, 84, 174, 166, 236, 235, 242, 75, 98, 247, 215, 117, 216, 87, 106, 255, 182, 216, 121, 45, 99, 223, 55, 24, 114, 132, 143, 181, 82, 158, 199, 85, 183, 191, 28, 200, 30, 100, 79, 27, 174, 211, 80, 255, 187, 92, 201, 125, 28, 159, 255, 199, 216, 180, 206, 246, 74, 98, 175, 149, 72, 235, 38, 41, 246, 204, 201, 91, 213, 182, 140, 141, 83, 169, 249, 121, 137, 205, 175, 212, 102, 121, 93, 161, 186, 68, 54, 91, 202, 252, 76, 59, 240, 213, 135, 84, 157, 82, 62, 114, 214, 250, 218, 104, 123, 62, 219, 244, 216, 53, 123, 237, 73, 26, 23, 147, 140, 43, 127, 220, 58, 124, 71, 45, 156, 91, 116, 204, 189, 178, 251, 17, 108, 125, 42, 203, 205, 173, 179, 57, 58, 140, 137, 155, 252, 196, 234, 91, 159, 207, 177, 176, 190, 114, 145, 216, 250, 86, 204, 77, 41, 191, 203, 191, 22, 251, 157, 127, 46, 227, 204, 181, 199, 172, 174, 49, 109, 213, 246, 211, 113, 78, 90, 46, 205, 123, 37, 137, 181, 113, 157, 216, 194, 215, 140, 93, 107, 200, 54, 52, 134, 224, 231, 29, 53, 92, 3, 246, 149, 247, 136, 4, 84, 162, 255, 58, 208, 18, 154, 43, 77, 122, 238, 241, 240, 174, 122, 44, 181, 9, 73, 234, 174, 27, 41, 72, 207, 82, 205, 180, 146, 235, 139, 94, 167, 212, 117, 102, 198, 92, 59, 18, 172, 80, 69, 31, 53, 151, 152, 182, 189, 47, 141, 142, 67, 121, 117, 189, 215, 152, 83, 243, 243, 209, 87, 195, 49, 149, 29, 71, 87, 128, 199, 101, 151, 61, 71, 183, 115, 106, 56, 22, 161, 120, 164, 116, 187, 70, 175, 75, 132, 124, 248, 160, 176, 100, 191, 54, 246, 35, 72, 117, 188, 237, 119, 163, 161, 118, 94, 133, 158, 248, 94, 183, 42, 165, 14, 29, 229, 62, 95, 236, 107, 188, 127, 168, 59, 125, 9, 158, 126, 138, 142, 170, 78, 63, 85, 170, 208, 191, 106, 56, 253, 80, 222, 180, 240, 231, 134, 52, 118, 117, 205, 193, 8, 26, 127, 244, 213, 112, 236, 161, 159, 193, 43, 85, 49, 254, 154, 100, 208, 26, 142, 62, 182, 219, 136, 253, 28, 38, 91, 165, 150, 191, 46, 241, 245, 129, 77, 244, 139, 250, 185, 90, 117, 29, 72, 209, 41, 175, 27, 246, 120, 131, 176, 199, 106, 92, 142, 50, 204, 178, 99, 155, 163, 77, 60, 147, 66, 120, 187, 175, 79, 221, 223, 80, 117, 187, 41, 91, 247, 114, 211, 205, 13, 111, 195, 215, 169, 202, 230, 143, 75, 236, 115, 187, 110, 234, 172, 3, 212, 14, 104, 45, 138, 247, 83, 117, 214, 75, 26, 163, 235, 246, 181, 210, 112, 140, 146, 231, 73, 51, 44, 111, 174, 246, 202, 231, 152, 212, 174, 165, 62, 94, 90, 255, 33, 168, 189, 242, 54, 59, 153, 80, 38, 151, 148, 13, 31, 26, 183, 214, 61, 166, 229, 58, 210, 118, 106, 122, 207, 154, 126, 246, 74, 115, 66, 123, 93, 65, 178, 53, 61, 167, 235, 232, 143, 66, 235, 72, 49, 172, 2, 199, 26, 215, 69, 234, 220, 161, 45, 59, 113, 120, 27, 150, 250, 24, 106, 203, 51, 204, 95, 221, 245, 198, 94, 171, 39, 151, 250, 159, 152, 119, 110, 90, 108, 91, 187, 202, 110, 247, 65, 124, 189, 96, 165, 135, 227, 12, 186, 239, 161, 189, 93, 174, 180, 83, 250, 103, 46, 49, 253, 78, 172, 148, 157, 91, 243, 254, 69, 251, 159, 117, 64, 126, 164, 235, 93, 79, 56, 105, 47, 155, 116, 141, 242, 171, 227, 163, 247, 161, 180, 31, 65, 211, 198, 183, 88, 210, 248, 49, 36, 199, 131, 19, 216, 249, 132, 131, 88, 251, 216, 235, 97, 169, 246, 77, 89, 127, 137, 185, 158, 26, 183, 253, 172, 76, 9, 167, 229, 196, 136, 50, 166, 72, 142, 77, 41, 156, 61, 62, 105, 66, 58, 97, 47, 94, 145, 214, 172, 165, 107, 41, 241, 197, 132, 11, 173, 157, 75, 174, 148, 78, 74, 190, 202, 150, 163, 202, 245, 210, 148, 252, 248, 198, 20, 33, 155, 249, 236, 235, 10, 87, 5, 82, 57, 235, 72, 199, 55, 214, 138, 145, 212, 248, 234, 202, 111, 89, 63, 117, 234, 179, 141, 116, 115, 108, 25, 35, 109, 151, 161, 233, 242, 134, 164, 77, 91, 164, 164, 95, 103, 221, 77, 201, 199, 68, 205, 121, 246, 233, 221, 30, 35, 150, 213, 95, 21, 250, 111, 66, 66, 105, 53, 161, 255, 166, 236, 156, 163, 239, 170, 109, 147, 243, 238, 193, 53, 47, 112, 197, 25, 90, 47, 115, 133, 207, 45, 67, 206, 220, 66, 242, 175, 50, 226, 74, 153, 143, 133, 164, 201, 126, 167, 137, 250, 222, 180, 62, 36, 225, 246, 201, 205, 91, 110, 185, 234, 234, 67, 67, 229, 173, 202, 14, 174, 120, 154, 174, 7, 177, 210, 84, 251, 41, 91, 214, 182, 242, 80, 214, 38, 139, 161, 111, 168, 178, 191, 181, 227, 77, 245, 75, 235, 184, 246, 190, 48, 233, 189, 71, 204, 183, 85, 101, 224, 107, 220, 180, 198, 158, 171, 251, 216, 112, 85, 151, 33, 245, 121, 42, 237, 215, 107, 18, 189, 231, 81, 250, 118, 197, 133, 174, 23, 49, 107, 122, 84, 254, 156, 247, 11, 92, 92, 239, 91, 83, 113, 165, 227, 26, 59, 73, 109, 130, 35, 237, 65, 230, 239, 12, 82, 203, 31, 131, 253, 222, 210, 126, 151, 201, 223, 3, 233, 125, 36, 41, 223, 107, 82, 217, 219, 124, 87, 107, 67, 239, 224, 92, 123, 122, 233, 61, 173, 222, 11, 160, 235, 241, 73, 106, 248, 175, 137, 220, 113, 111, 110, 125, 245, 217, 155, 246, 69, 212, 173, 175, 216, 52, 164, 253, 15, 252, 29, 56, 93, 179, 247, 67, 199, 8, 79, 103, 101, 68, 94, 168, 174, 74, 225, 99, 244, 111, 219, 177, 106, 29, 242, 245, 12, 254, 60, 209, 247, 232, 253, 94, 149, 237, 164, 199, 92, 178, 131, 109, 55, 87, 56, 234, 231, 200, 109, 82, 114, 244, 175, 235, 26, 175, 123, 125, 37, 63, 55, 105, 143, 126, 140, 240, 248, 165, 111, 226, 249, 190, 189, 49, 19, 119, 93, 223, 73, 214, 33, 246, 120, 230, 228, 146, 196, 174, 49, 248, 36, 102, 77, 66, 186, 23, 242, 235, 74, 199, 231, 143, 230, 142, 117, 140, 175, 165, 124, 140, 43, 191, 206, 164, 117, 163, 148, 52, 236, 107, 74, 201, 186, 110, 74, 236, 250, 103, 143, 177, 125, 115, 237, 42, 210, 171, 107, 238, 148, 35, 139, 101, 253, 160, 204, 28, 86, 178, 95, 153, 185, 112, 83, 101, 118, 73, 93, 235, 18, 77, 216, 184, 238, 58, 93, 119, 252, 49, 250, 208, 207, 78, 251, 27, 108, 223, 183, 32, 228, 143, 246, 106, 133, 198, 107, 246, 121, 93, 144, 232, 57, 202, 64, 45, 220, 107, 167, 37, 180, 119, 52, 102, 44, 81, 245, 154, 125, 221, 237, 179, 206, 119, 11, 135, 75, 30, 154, 78, 51, 165, 156, 124, 206, 66, 251, 20, 155, 104, 47, 246, 28, 198, 181, 31, 219, 245, 189, 119, 104, 94, 111, 203, 41, 37, 105, 98, 30, 112, 170, 106, 255, 95, 174, 210, 127, 1, 237, 61, 207, 90, 247, 186, 127, 147, 198, 237, 210, 26, 91, 91, 72, 245, 74, 250, 246, 155, 238, 209, 119, 223, 42, 33, 13, 105, 189, 33, 118, 239, 119, 74, 58, 49, 216, 54, 105, 58, 125, 223, 63, 37, 125, 237, 88, 135, 93, 110, 80, 106, 161, 78, 105, 239, 58, 217, 42, 119, 125, 78, 154, 99, 86, 173, 3, 74, 43, 86, 170, 76, 51, 215, 102, 246, 123, 22, 251, 191, 8, 218, 70, 244, 191, 76, 87, 127, 75, 239, 0, 98, 242, 40, 249, 43, 171, 139, 148, 240, 190, 246, 81, 117, 93, 72, 65, 235, 208, 215, 255, 18, 3, 229, 30, 31, 151, 173, 163, 185, 255, 95, 83, 158, 243, 170, 109, 105, 167, 229, 242, 67, 227, 112, 94, 207, 237, 111, 119, 120, 63, 93, 230, 127, 168, 74, 249, 251, 124, 87, 187, 35, 241, 189, 171, 82, 1, 127, 41, 82, 71, 189, 77, 233, 247, 237, 247, 134, 84, 215, 200, 78, 92, 164, 126, 38, 165, 14, 241, 254, 62, 229, 219, 203, 178, 101, 165, 49, 6, 255, 86, 139, 254, 9, 64, 229, 165, 49, 148, 157, 215, 144, 148, 109, 223, 117, 149, 157, 68, 250, 15, 130, 93, 230, 152, 57, 108, 46, 118, 158, 203, 254, 23, 222, 213, 110, 83, 234, 58, 47, 127, 207, 202, 111, 170, 148, 181, 127, 142, 78, 171, 148, 20, 93, 243, 127, 120, 133, 158, 137, 118, 123, 170, 34, 253, 178, 144, 232, 119, 165, 250, 189, 233, 105, 42, 252, 79, 42, 187, 108, 101, 243, 207, 237, 56, 158, 17, 222, 215, 230, 165, 177, 162, 221, 206, 83, 243, 159, 91, 206, 170, 251, 49, 187, 13, 211, 120, 136, 230, 43, 84, 54, 62, 94, 104, 66, 150, 168, 133, 255, 40, 144, 144, 254, 33, 86, 53, 147, 38, 29, 123, 60, 162, 245, 164, 231, 114, 115, 22, 174, 111, 62, 233, 122, 204, 56, 203, 87, 126, 169, 95, 182, 243, 188, 220, 193, 209, 137, 80, 57, 151, 169, 133, 107, 81, 75, 148, 251, 121, 228, 170, 243, 77, 244, 71, 190, 255, 30, 240, 181, 119, 187, 77, 243, 118, 109, 247, 41, 109, 172, 55, 112, 73, 29, 23, 198, 198, 93, 230, 95, 140, 190, 251, 212, 215, 243, 61, 141, 41, 227, 248, 216, 122, 20, 242, 91, 6, 87, 127, 195, 165, 199, 92, 126, 76, 101, 229, 235, 57, 244, 191, 235, 152, 61, 69, 57, 117, 36, 38, 188, 114, 28, 215, 217, 22, 125, 255, 121, 87, 74, 30, 63, 86, 165, 159, 16, 19, 106, 225, 191, 54, 98, 218, 122, 155, 239, 80, 171, 24, 171, 214, 53, 254, 173, 243, 221, 79, 91, 239, 177, 104, 76, 233, 179, 219, 152, 227, 122, 19, 82, 231, 60, 38, 86, 236, 189, 42, 169, 123, 48, 154, 218, 159, 208, 196, 30, 149, 152, 248, 155, 42, 243, 98, 220, 239, 33, 137, 148, 70, 91, 237, 169, 170, 114, 199, 232, 51, 69, 247, 116, 92, 247, 218, 133, 84, 142, 170, 227, 40, 27, 231, 98, 108, 23, 101, 227, 168, 178, 125, 214, 213, 214, 171, 212, 91, 217, 188, 248, 164, 238, 116, 203, 228, 205, 151, 191, 166, 164, 201, 250, 149, 147, 126, 85, 249, 207, 13, 95, 85, 250, 49, 233, 148, 213, 115, 200, 111, 29, 249, 78, 73, 191, 142, 184, 109, 73, 177, 157, 36, 185, 245, 192, 37, 255, 3];\nvar trieData = {\n  type: type,\n  data: data\n};\n\nfunction _createForOfIteratorHelperLoose$d(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$d(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$d(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$d(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$d(o, minLen);\n}\n\nfunction _arrayLikeToArray$d(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar categories = useData.categories,\n    decompositions = useData.decompositions;\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar stateMachine = new StateMachine(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions[codepoint]) {\n        var decomposed = decompositions[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    }; // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n\n\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper);\n\n_defineProperty(UniversalShaper, \"zeroMarkWidths\", 'BEFORE_GPOS');\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose$d(stateMachine.match(glyphs.map(useCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i = start; _i < start + limit; _i++) {\n      glyphs[_i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose$d(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var glyph = _step2.value;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = _createForOfIteratorHelperLoose$d(glyphs), _step3; !(_step3 = _iterator3()).done;) {\n    var glyph = _step3.value;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = _createForOfIteratorHelperLoose$d(glyphs), _step4; !(_step4 = _iterator4()).done;) {\n    var glyph = _step4.value;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {}\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {}\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nfunction _createForOfIteratorHelperLoose$c(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$c(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$c(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$c(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$c(o, minLen);\n}\n\nfunction _arrayLikeToArray$c(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n\n};\n\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose$c(script), _step; !(_step = _iterator()).done;) {\n    var s = _step.value;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nfunction _createForOfIteratorHelperLoose$b(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$b(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$b(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$b(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$b(o, minLen);\n}\n\nfunction _arrayLikeToArray$b(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar GSUBProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GSUBProcessor.prototype;\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    var _this = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _this$glyphs;\n\n            var sequence = table.sequences.get(_index);\n\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = _createForOfIteratorHelperLoose$b(table.ligatureSets.get(_index3)), _step; !(_step = _iterator()).done;) {\n            var ligature = _step.value;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = _createForOfIteratorHelperLoose$b(matched), _step2; !(_step2 = _iterator2()).done;) {\n              var _index4 = _step2.value;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose$b(matched), _step3; !(_step3 = _iterator3()).done;) {\n              var matchIndex = _step3.value; // Don't assign new ligature components for mark ligatures (see above)\n\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i = idx; _i < this.glyphs.length; _i++) {\n                if (this.glyphs[_i].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n\n            for (var _i2 = matched.length - 1; _i2 >= 0; _i2--) {\n              this.glyphs.splice(matched[_i2], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"GSUB lookupType \" + lookupType + \" is not supported\");\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nfunction _createForOfIteratorHelperLoose$a(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$a(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$a(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$a(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$a(o, minLen);\n}\n\nfunction _arrayLikeToArray$a(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar GPOSProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GPOSProcessor.prototype;\n\n  _proto.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n\n  };\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set = table.pairSets.get(_index);\n\n              for (var _iterator = _createForOfIteratorHelperLoose$a(set), _step; !(_step = _iterator()).done;) {\n                var _pair = _step.value;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {}\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {}\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"Unsupported GPOS table: \" + lookupType);\n    }\n  };\n\n  _proto.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  _proto.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  _proto.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  _proto.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = /*#__PURE__*/function () {\n  function OTLayoutEngine(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  var _proto = OTLayoutEngine.prototype;\n\n  _proto.setup = function setup(glyphRun) {\n    var _this = this; // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n\n\n    this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphInfo(_this.font, glyph.id, [].concat(glyph.codePoints));\n    }); // Select a script based on what is available in GSUB/GPOS.\n\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    var _this2 = this;\n\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n        return _this2.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n      });\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  _proto.zeroMarkAdvances = function zeroMarkAdvances(positions) {\n    for (var i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$9(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$9(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$9(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$9(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$9(o, minLen);\n}\n\nfunction _arrayLikeToArray$9(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar LayoutEngine = /*#__PURE__*/function () {\n  function LayoutEngine(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  var _proto = LayoutEngine.prototype;\n\n  _proto.layout = function layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        var codePoints = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose$9(string), _step; !(_step = _iterator()).done;) {\n          var glyph = _step.value;\n          codePoints.push.apply(codePoints, glyph.codePoints);\n        }\n\n        script = forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  _proto.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n\n        case 0x03:\n          return ch === 0x034F;\n\n        case 0x06:\n          return ch === 0x061C;\n\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$9(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator3 = _createForOfIteratorHelperLoose$9(this.engine.stringsForGlyph(gid)), _step3; !(_step3 = _iterator3()).done;) {\n        var string = _step3.value;\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$8(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$8(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$8(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$8(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen);\n}\n\nfunction _arrayLikeToArray$8(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = /*#__PURE__*/function () {\n  function Path() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  var _proto = Path.prototype;\n\n  _proto.toFunction = function toFunction() {\n    var _this = this;\n\n    return function (ctx) {\n      _this.commands.forEach(function (c) {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  }\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  ;\n\n  _proto.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return \"\" + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  }\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  ;\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n\n\n  _proto.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = _createForOfIteratorHelperLoose$8(this.commands), _step; !(_step = _iterator()).done;) {\n      var c = _step.value;\n      var args = [];\n\n      for (var i = 0; i < c.args.length; i += 2) {\n        var _fn = fn(c.args[i], c.args[i + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  }\n  /**\n   * Transforms the path by the given matrix.\n   */\n  ;\n\n  _proto.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  }\n  /**\n   * Translates the path by the given offset.\n   */\n  ;\n\n  _proto.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  ;\n\n  _proto.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n  /**\n   * Scales the path.\n   */\n  ;\n\n  _proto.scale = function scale(scaleX, scaleY) {\n    if (scaleY === void 0) {\n      scaleY = scaleX;\n    }\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  _createClass(Path, [{\n    key: \"cbox\",\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose$8(this.commands), _step2; !(_step2 = _iterator2()).done;) {\n          var command = _step2.value;\n\n          for (var i = 0; i < command.args.length; i += 2) {\n            cbox.addPoint(command.args[i], command.args[i + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$8(this.commands), _step3; !(_step3 = _iterator3()).done;) {\n        var c = _step3.value;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n\n  return Path;\n}();\n\nvar _loop = function _loop() {\n  var command = _arr[_i];\n\n  Path.prototype[command] = function () {\n    this._bbox = this._cbox = null;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i = 0, _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']; _i < _arr.length; _i++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$1;\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\n\nvar Glyph = (_class$1 = /*#__PURE__*/function () {\n  function Glyph(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  var _proto = Glyph.prototype;\n\n  _proto._getPath = function _getPath() {\n    return new Path();\n  };\n\n  _proto._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  _proto._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  _proto._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  _proto._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _this$_getTableMetric = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _this$_getTableMetric.advance,\n        leftBearing = _this$_getTableMetric.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _this$_getTableMetric2 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _this$_getTableMetric2.advance,\n          topBearing = _this$_getTableMetric2.bearing;\n    } else {\n      var os2;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  }\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  ;\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n\n\n  _proto.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  ;\n\n  _proto._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  ;\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n\n\n  _proto.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  _createClass(Glyph, [{\n    key: \"cbox\",\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: \"advanceWidth\",\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: \"ligatureCaretPositions\",\n    get: function get() {}\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._getName();\n    }\n  }]);\n\n  return Glyph;\n}(), (_applyDecoratedDescriptor(_class$1.prototype, \"cbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"cbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"bbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"path\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"path\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceWidth\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceWidth\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceHeight\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceHeight\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"name\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"name\"), _class$1.prototype)), _class$1);\n\nfunction _createForOfIteratorHelperLoose$7(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$7(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$7(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen);\n}\n\nfunction _arrayLikeToArray$7(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n\nvar Point$1 = /*#__PURE__*/function () {\n  function Point(onCurve, endContour, x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  var _proto = Point.prototype;\n\n  _proto.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}(); // Represents a component in a composite glyph\n\n\nvar Component = function Component(glyphID, dx, dy) {\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto2 = TTFGlyph.prototype; // Parses just the glyph header and returns the bounding box\n\n  _proto2._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  } // Parses a single glyph coordinate\n  ;\n\n  _proto2._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  } // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  ;\n\n  _proto2._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  _proto2._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT$1) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point$1(!!(flag & ON_CURVE$1), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR$1, flag & SAME_X$1);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR$1, flag & SAME_Y$1);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  _proto2._decodeComposite = function _decodeComposite(glyph, stream, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    } // this is a composite glyph\n\n\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point$1(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  _proto2._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _this$_metrics = this._metrics,\n        advanceWidth = _this$_metrics.advanceWidth,\n        advanceHeight = _this$_metrics.advanceHeight,\n        leftBearing = _this$_metrics.leftBearing,\n        topBearing = _this$_metrics.topBearing;\n    return [new Point$1(false, true, glyph.xMin - leftBearing, 0), new Point$1(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point$1(false, true, 0, glyph.yMax + topBearing), new Point$1(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  } // Decodes font data, resolves composite glyphs, and returns an array of contours\n  ;\n\n  _proto2._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = _createForOfIteratorHelperLoose$7(glyph.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point$1(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  _proto2._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  } // Converts contours to a Path object that can be rendered\n  ;\n\n  _proto2._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point$1(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\n\nvar CFFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = CFFGlyph.prototype;\n\n  _proto._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  _proto.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  _proto._getPath = function _getPath() {\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var stream = cff.stream;\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs;\n    var usedSubrs;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id) || {};\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30: // vhcurveto\n\n            case 31:\n              {\n                // hvcurveto\n                var _phase = op === 31;\n\n                while (stack.length >= 4) {\n                  if (_phase) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                  } else {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                  }\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                  _phase = !_phase;\n                }\n\n                break;\n              }\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(\"Unknown op: 12 \" + op);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"Unknown op: \" + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = /*#__PURE__*/function (_TTFGlyph) {\n  _inheritsLoose(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    return _TTFGlyph.apply(this, arguments) || this;\n  }\n\n  var _proto = SBIXGlyph.prototype;\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n\n  _proto.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  _proto.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nfunction _createForOfIteratorHelperLoose$6(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$6(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$6(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen);\n}\n\nfunction _arrayLikeToArray$6(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = COLRGlyph.prototype;\n\n  _proto._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  ;\n\n  _proto.render = function render(ctx, size) {\n    for (var _iterator = _createForOfIteratorHelperLoose$6(this.layers), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          glyph = _step$value.glyph,\n          color = _step$value.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  _createClass(COLRGlyph, [{\n    key: \"layers\",\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = /*#__PURE__*/function () {\n  function GlyphVariationProcessor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  var _proto = GlyphVariationProcessor.prototype;\n\n  _proto.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  _proto.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  _proto.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  _proto.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  _proto.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  } // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  ;\n\n  _proto.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  _proto.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  _proto.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  _proto.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  } // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  ;\n\n  _proto.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  _proto.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        } // take product of all the axis scalars\n\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar resolved = Promise.resolve();\n\nvar Subset = /*#__PURE__*/function () {\n  function Subset(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n  var _proto = Subset.prototype;\n\n  _proto.includeGlyph = function includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  _proto.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    resolved.then(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}();\n\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\nvar Point = /*#__PURE__*/function () {\n  function Point() {}\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = /*#__PURE__*/function () {\n  function TTFGlyphEncoder() {}\n\n  var _proto = TTFGlyphEncoder.prototype;\n\n  _proto.encodeSimple = function encodeSimple(path, instructions) {\n    if (instructions === void 0) {\n      instructions = [];\n    }\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  _proto._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nfunction _createForOfIteratorHelperLoose$5(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$5(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$5(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen);\n}\n\nfunction _arrayLikeToArray$5(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar TTFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  var _proto = TTFSubset.prototype;\n\n  _proto._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n\n      for (var _iterator = _createForOfIteratorHelperLoose$5(glyf.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nfunction _createForOfIteratorHelperLoose$4(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$4(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$4(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);\n}\n\nfunction _arrayLikeToArray$4(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar CFFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  var _proto = CFFSubset.prototype;\n\n  _proto.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose$4(this.glyphs), _step; !(_step = _iterator()).done;) {\n      var gid = _step.value;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  _proto.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  _proto.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$4(this.glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var gid = _step2.value;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  _proto.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose$4(this.glyphs), _step3; !(_step3 = _iterator3()).done;) {\n      var gid = _step3.value;\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  _proto.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (var _i = 0, _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _createForOfIteratorHelperLoose$3(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$3(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);\n}\n\nfunction _arrayLikeToArray$3(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\n\nvar TTFFont = (_class = /*#__PURE__*/function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream, variationCoords) {\n    if (variationCoords === void 0) {\n      variationCoords = null;\n    }\n\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  var _proto = TTFFont.prototype;\n\n  _proto.setDefaultLanguage = function setDefaultLanguage(lang) {\n    if (lang === void 0) {\n      lang = null;\n    }\n\n    this.defaultLanguage = lang;\n  };\n\n  _proto._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(\"Error decoding table \" + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  }\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  ;\n\n  _proto.getName = function getName(key, lang) {\n    if (lang === void 0) {\n      lang = this.defaultLanguage || fontkit.defaultLanguage;\n    }\n\n    var record = this.name && this.name.records[key];\n\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[fontkit.defaultLanguage] || record['en'] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    }\n\n    return null;\n  }\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  ;\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n\n\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  ;\n\n  _proto.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n\n\n  _proto.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  ;\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  ;\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  _proto._getBaseGlyph = function _getBaseGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.getGlyph = function getGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  ;\n\n  _proto.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  ;\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n\n\n  _proto.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  }; // Standardized format plugin API\n\n\n  _proto.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  _createClass(TTFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      return this.getName('postscriptName');\n    }\n    /**\n     * The font's full name, e.g. \"Helvetica Bold\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: \"subfamilyName\",\n    get: function get() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: \"copyright\",\n    get: function get() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: \"ascent\",\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlinePosition\",\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlineThickness\",\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: \"italicAngle\",\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: \"numGlyphs\",\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: \"_cmapProcessor\",\n    get: function get() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: \"_layoutEngine\",\n    get: function get() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: \"availableFeatures\",\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: \"variationAxes\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = _createForOfIteratorHelperLoose$3(this.fvar.axis), _step; !(_step = _iterator()).done;) {\n        var axis = _step.value;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: \"namedVariations\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$3(this.fvar.instance), _step2; !(_step2 = _iterator2()).done;) {\n        var instance = _step2.value;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"_variationProcessor\",\n    get: function get() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n\n  return TTFFont;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"bbox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_cmapProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_cmapProcessor\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"characterSet\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"characterSet\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_layoutEngine\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_layoutEngine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"variationAxes\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"variationAxes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"namedVariations\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"namedVariations\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_variationProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_variationProcessor\"), _class.prototype)), _class);\n\nfunction _createForOfIteratorHelperLoose$2(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$2(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);\n}\n\nfunction _arrayLikeToArray$2(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$2(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nvar WOFFFont = /*#__PURE__*/function (_TTFFont) {\n  _inheritsLoose(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    return _TTFFont.apply(this, arguments) || this;\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  var _proto = WOFFFont.prototype;\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nfunction _createForOfIteratorHelperLoose$1(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray$1(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n}\n\nfunction _arrayLikeToArray$1(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = /*#__PURE__*/function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  var _proto = TrueTypeCollection.prototype;\n\n  _proto.getFont = function getFont(name) {\n    for (var _iterator = _createForOfIteratorHelperLoose$1(this.header.offsets), _step; !(_step = _iterator()).done;) {\n      var offset = _step.value;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(TrueTypeCollection, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$1(this.header.offsets), _step2; !(_step2 = _iterator2()).done;) {\n        var offset = _step2.value;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return TrueTypeCollection;\n}();\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar DFontName = new r.String(r.uint8);\nnew r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = /*#__PURE__*/function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(header.map.typeList.types), _step; !(_step = _iterator()).done;) {\n      var type = _step.value;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.map.typeList.types), _step2; !(_step2 = _iterator2()).done;) {\n      var type = _step2.value;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(type.refList), _step3; !(_step3 = _iterator3()).done;) {\n        var ref = _step3.value;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  var _proto = DFont.prototype;\n\n  _proto.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step4; !(_step4 = _iterator4()).done;) {\n      var ref = _step4.value;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(DFont, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step5; !(_step5 = _iterator5()).done;) {\n        var ref = _step5.value;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return DFont;\n}();\n\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\nexport default fontkit;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/fontkit/lib/fontkit.browser.es.js"],"names":["r","_createClass","_applyDecoratedDescriptor","_inheritsLoose","PropertyDescriptor","resolveLength","isEqual","unicode","_defineProperty","UnicodeTrie","StateMachine","cloneDeep","inflate","fontkit","logErrors","formats","registerFormat","format","push","openSync","filename","postscriptName","Error","open","callback","create","buffer","i","length","probe","font","DecodeStream","getFont","defaultLanguage","setDefaultLanguage","lang","cache","target","key","descriptor","get","value","call","Object","defineProperty","fn","Map","memoized","_len","arguments","args","Array","_key","has","result","apply","set","SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","CmapGroup","startCharCode","uint32","endCharCode","glyphID","UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","UVSMapping","unicodeValue","DefaultUVS","NonDefaultUVS","VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","CmapSubtable","VersionedStruct","language","codeMap","LazyArray","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","CmapEntry","platformID","encodingID","table","lazy","cmap","version","numSubtables","tables","head","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","HmtxEntry","advance","bearing","hmtx","metrics","parent","bearings","maxp","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","getEncoding","languageID","MAC_LANGUAGE_ENCODINGS","ENCODINGS","LANGUAGES","_createForOfIteratorHelperLoose$s","o","allowArrayLike","it","Symbol","iterator","isArray","_unsupportedIterableToArray$s","done","TypeError","next","bind","minLen","_arrayLikeToArray$s","n","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","NameRecord","nameID","string","String","relativeTo","allowNull","LangTagRecord","tag","NameTable","count","stringOffset","records","langTagCount","langTags","NAMES","process","stream","_iterator","_step","record","obj","preEncode","val","indexOf","Buffer","byteLength","en","size","OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","versions","post","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","cvt","controlValues","fpgm","instructions","loca","prep","controlValueProgram","glyf","_createForOfIteratorHelperLoose$r","_unsupportedIterableToArray$r","_arrayLikeToArray$r","CFFIndex","_proto","getCFFVersion","ctx","hdrSize","decode","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","item","encode","writeUInt16BE","sizes","s","writeUInt8","_i","_sizes","_iterator2","_step2","_item","FLOAT_EOF","FLOAT_LOOKUP","FLOAT_ENCODE_LOOKUP","CFFOperand","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","c1","c2","writeInt16BE","_createForOfIteratorHelperLoose$q","_unsupportedIterableToArray$q","_arrayLikeToArray$q","CFFDict","ops","fields","field","decodeOperands","operands","_this","op","encodeOperands","_this2","defineProperties","_startOffset","_field","dict","includePointers","pointerSize","startOffset","k","pointers","pointerOffset","_iterator3","_step3","_iterator4","_step4","_iterator5","_step5","_op","ptr","CFFPointer","_r$Pointer","options","Ptr","_proto2","valueOf","CFFBlendOp","numBlends","pop","CFFPrivateDict","standardStrings","StandardEncoding","ExpertEncoding","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","LangSysTable","reqFeatureIndex","featureCount","featureIndexes","LangSysRecord","langSys","Script","defaultLangSys","langSysRecords","ScriptRecord","script","ScriptList","Feature","featureParams","lookupCount","lookupListIndexes","FeatureRecord","feature","FeatureList","LookupFlags","markAttachmentType","LookupList","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","RangeRecord","startCoverageIndex","Coverage","glyphCount","glyphs","rangeCount","rangeRecords","ClassRangeRecord","class","ClassDef","startGlyph","classValueArray","classRangeCount","classRangeRecord","Device","a","deltaFormat","LookupRecord","sequenceIndex","lookupListIndex","Rule","input","lookupRecords","RuleSet","ClassRule","classes","ClassSet","Context","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","ChainRuleSet","ChainingContext","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","_","F2DOT14","Fixed","RegionAxisCoordinates","startCoord","peakCoord","endCoord","VariationRegionList","axisCount","regionCount","variationRegions","DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","ItemVariationData","itemCount","regionIndexes","deltaSets","ItemVariationStore","variationRegionList","variationDataCount","itemVariationData","ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","ConditionSet","conditionCount","conditionTable","FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","FeatureTableSubstitution","substitutionCount","substitutions","FeatureVariationRecord","conditionSet","featureTableSubstitution","FeatureVariations","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","PredefinedOp","predefinedOps","index","CFFEncodingVersion","_r$Number","Range1","first","nLeft","Range2","CFFCustomEncoding","nCodes","codes","nRanges","ranges","CFFEncoding","RangeArray","_r$Array","_proto3","res","range","CFFCustomCharset","CharStrings","CFFCharset","FDRange3","fd","FDRange4","FDSelect","fds","sentinel","CFFPrivateOp","_proto4","FontDict","CFFTopDict","VariationStore","itemVariationStore","CFF2TopDict","CFFTop","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","CFFFont","top","isCIDFont","ROS","sid","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","low","high","mid","privateDictForGlyph","FDArray","Private","FullName","FamilyName","VerticalOrigin","glyphIndex","vertOriginY","VORG","defaultVertOriginY","numVertOriginYMetrics","BigMetrics","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","SmallMetrics","bearingX","bearingY","EBDTComponent","xOffset","yOffset","ByteAligned","BitAligned","data","pad","numComponents","components","dataLen","SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","CodeOffsetPair","glyphCode","IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","IndexSubtableArray","subtable","BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","EBLC","numSizes","ImageTable","ppem","resolution","imageOffsets","sbix","numImgTables","imageTables","LayerRecord","paletteIndex","BaseGlyphRecord","firstLayerIndex","numLayers","COLR","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","ColorRecord","blue","green","red","alpha","CPAL","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","BaseValues","defaultIndex","baseCoordCount","baseCoords","FeatMinMaxRecord","minCoord","maxCoord","MinMax","featMinMaxCount","featMinMaxRecords","BaseLangSysRecord","minMax","BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","BaseScriptRecord","BaseScriptList","BaseTagList","Axis$1","baseTagList","baseScriptList","BASE","horizAxis","vertAxis","AttachPoint","AttachList","attachPoints","CaretValue","caretValuePoint","LigGlyph","LigCaretList","ligGlyphCount","ligGlyphs","MarkGlyphSetsDef","markSetTableFormat","markSetCount","GDEF","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","ValueFormat","types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","ValueRecord","buildStruct","struct","rel","PairValueRecord","secondGlyph","value1","value2","PairSet","Class2Record","Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","EntryExitRecord","entryAnchor","exitAnchor","MarkRecord","markAnchor","MarkArray","BaseRecord","classCount","BaseArray","ComponentRecord","LigatureAttach","LigatureArray","GPOSLookup","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","undefined","GPOS","scriptList","featureList","lookupList","featureVariations","Sequence","AlternateSet","Ligature","compCount","LigatureSet","GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","GSUB","JstfGSUBModList","JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","JstfLangSys","JstfLangSysRecord","jstfLangSys","JstfScript","extenderGlyphs","langSysCount","JstfScriptRecord","JSTF","scriptCount","VariableSizeNumber","_size","readUInt24BE","MapDataEntry","entry","entryFormat","outerIndex","innerIndex","DeltaSetIndexMap","mapCount","mapData","HVAR","advanceWidthMapping","LSBMapping","RSBMapping","Signature","SignatureBlock","cbSignature","signature","DSIG","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","GaspRange","rangeMaxPPEM","rangeGaspBehavior","gasp","numRanges","gaspRanges","DeviceRecord","pixelSize","maximumWidth","widths","hdmx","sizeDeviceRecord","KernPair","left","right","ClassTable$1","firstGlyph","nGlyphs","Kern2Array","off","leftTable","rowWidth","KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","KernTable","subVersion","padding","tupleIndex","kern","nTables","LTSH","yPels","PCLT","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","vTable","yPelHeight","VdmxGroup","recs","startsz","endsz","entries","VDMX","numRecs","numRatios","ratioRanges","vhea","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","VmtxEntry","vmtx","shortFrac$1","Correspondence","fromCoord","toCoord","Segment","pairCount","correspondence","avar","segment","UnboundedArrayAccessor","base","_items","getItem","inspect","UnboundedArray","LookupTable","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","StateTable","entryData","assign","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","StateTable1","ClassLookupTable","newStateOffset","StateHeader1","BslnSubtable","mappingData","standardGlyph","controlPoints","bsln","defaultBaseline","Setting","setting","fontFeatures","FeatureName","nSettings","settingTable","featureFlags","defaultSetting","feat","featureNameCount","reserved1","reserved2","featureNames","Axis","axisTag","minValue","defaultValue","maxValue","Instance","coord","postscriptNameID","instanceSize","fvar","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","shortFrac","Offset","gvar","globalCoordCount","globalCoords","ClassTable","subFeatureFlags","stateTable","WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","WidthDeltaCluster","ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","Action","actionClass","actionType","actionLength","actionData","PostcompensationAction","PostCompensationTable","lookupTable","JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","just","horizontal","vertical","LigatureData","action","ContextualData","markIndex","currentIndex","InsertionData","currentInsertIndex","markedInsertIndex","SubstitutionTable","items","SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","Subtable","FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","morx","unused","nChains","chains","OpticalBounds","bottom","opbd","CBLC","_createForOfIteratorHelperLoose$p","_unsupportedIterableToArray$p","_arrayLikeToArray$p","TableEntry","checkSum","Directory","numTables","tables$1","VoidPointer","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","binarySearch","cmp","min","_class$4","_createForOfIteratorHelperLoose$o","_unsupportedIterableToArray$o","_arrayLikeToArray$o","iconv","require","err","CmapProcessor","cmapTable","encoding","findSubtable","encodingExists","uvs","_step2$value","lookup","codepoint","variationSelector","buf","fromCodePoint","getVariationSelector","rangeOffset","_gid","_min","_max","_mid","group","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","_res","codePointsForGlyph","_res2","delta","c","g","_res3","_res4","_iterator6","_step6","_group","getOwnPropertyDescriptor","_createForOfIteratorHelperLoose$n","_unsupportedIterableToArray$n","_arrayLikeToArray$n","KernProcessor","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","UnicodeLayoutEngine","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","BBox","Infinity","addPoint","y","abs","_createForOfIteratorHelperLoose$m","_unsupportedIterableToArray$m","_arrayLikeToArray$m","UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","OPENTYPE_SCRIPTS","fromOpenType","forString","idx","code","charCodeAt","_script","getScript","forCodePoints","_script2","RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","direction","_createForOfIteratorHelperLoose$l","_unsupportedIterableToArray$l","_arrayLikeToArray$l","GlyphRun","direction$1","bbox","p","GlyphPosition","allTypographicFeatures","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","selector","OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","AATMapping","ot","aat","mapOTToAAT","mapFeatureStrings","f","isNaN","typeCode","settingCode","mapAATToOT","_feature","_r","_f","keys","_class$3","_createForOfIteratorHelperLoose$k","_unsupportedIterableToArray$k","_arrayLikeToArray$k","AATLookupTable","seg","glyphsForValue","classValue","_segment","_createForOfIteratorHelperLoose$j","_unsupportedIterableToArray$j","_arrayLikeToArray$j","START_OF_TEXT_STATE","END_OF_TEXT_CLASS","OUT_OF_BOUNDS_CLASS","DELETED_GLYPH_CLASS","DONT_ADVANCE","AATStateMachine","reverse","processEntry","currentState","dir","classCode","shouldAdvance","row","entryIndex","traverse","opts","state","visited","Set","add","_this$stateTable","enter","exit","_class$2","_createForOfIteratorHelperLoose$i","_unsupportedIterableToArray$i","_arrayLikeToArray$i","MARK_FIRST","MARK_LAST","VERB","SET_MARK","SET_COMPONENT","PERFORM_ACTION","LAST_MASK","STORE_MASK","OFFSET_MASK","REVERSE_DIRECTION","CURRENT_INSERT_BEFORE","MARKED_INSERT_BEFORE","CURRENT_INSERT_COUNT","MARKED_INSERT_COUNT","AATMorxProcessor","processIndicRearragement","processContextualSubstitution","processLigature","processNoncontextualSubstitutions","processGlyphInsertion","inputCache","chain","processSubtable","splice","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","reorderGlyphs","subsitutions","getGlyph","_lookup","_lookupTable","_this$ligatureStack","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","_codePoints","componentGlyph","unshift","store","component","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","_this$glyphs","insertions","_count","_isBefore","getSupportedFeatures","generateInputs","generateInputCache","_iterator7","_step7","generateInputsForSubtable","stack","found","_cache","_stack$pop","swap","rangeA","rangeB","reverseA","reverseB","verb","_createForOfIteratorHelperLoose$h","_unsupportedIterableToArray$h","_arrayLikeToArray$h","AATLayoutEngine","morxProcessor","fallbackPosition","glyphRun","getAvailableFeatures","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","_createForOfIteratorHelperLoose$g","_unsupportedIterableToArray$g","_arrayLikeToArray$g","ShapingPlan","stages","globalFeatures","allFeatures","_addFeatures","global","stageIndex","stage","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","VARIATION_FEATURES","COMMON_FEATURES","FRACTIONAL_FEATURES","HORIZONTAL_FEATURES","DIRECTIONAL_FEATURES","ltr","rtl","DefaultShaper","plan","_plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","isDigit","type$2","data$2","trieData$2","trie$2","Uint8Array","FEATURES","ShapingClasses","Non_Joining","Left_Joining","Right_Joining","Dual_Joining","Join_Causing","ALAPH","Transparent","ISOL","FINA","FIN2","FIN3","MEDI","MED2","INIT","NONE","STATE_TABLE$1","ArabicShaper","_DefaultShaper","prev","curAction","prevAction","getShapingClass","_STATE_TABLE$state$ty","category","getCategory","GlyphIterator","reset","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","increment","peekIndex","_createForOfIteratorHelperLoose$f","_unsupportedIterableToArray$f","_arrayLikeToArray$f","DEFAULT_SCRIPTS","OTProcessor","scriptTag","lookups","variationsIndex","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","currentFeature","findScript","changed","repeat","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookupIndex","sort","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","_iterator8","_step8","_step8$value","cur","_iterator9","_step9","applyLookup","applyLookupList","_iterator10","_step10","lookupRecord","_iterator11","_step11","coverageIndex","_iterator12","_step12","match","sequence","matched","sequenceMatches","sequenceMatchIndices","coverageSequenceMatches","getClassID","_iterator13","_step13","classSequenceMatches","_this3","classID","applyContext","_iterator14","_step14","rule","_iterator15","_step15","_rule","applyChainingContext","_iterator16","_step16","rules","_iterator17","_step17","_rule2","GlyphInfo","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","substituted","isMultiplied","_id","HangulShaper","getType","STATE_TABLE","DECOMPOSE","hasGlyphForCodePoint","decompose","COMPOSE","compose","TONE_MARK","reorderToneMark","INVALID","insertDottedCircle","HANGUL_BASE","HANGUL_END","HANGUL_COUNT","L_BASE","V_BASE","T_BASE","L_COUNT","V_COUNT","T_COUNT","L_END","V_END","T_END","DOTTED_CIRCLE","isL","isV","isT","isTone","isLVT","isLV","isCombiningL","isCombiningV","isCombiningT","X","L","V","T","LV","LVT","M","NO_ACTION","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","del","getLength","advanceWidth","dottedCircle","stateTable$1","accepting$1","tags$1","indicMachine","accepting","tags","categories$1","decompositions$2","useData","categories","decompositions","CATEGORIES","C","N","H","ZWNJ","ZWJ","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","POSITIONS","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","CONSONANT_FLAGS","JOINER_FLAGS","HALANT_OR_COENG_FLAGS","INDIC_CONFIGS","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","INDIC_DECOMPOSITIONS","type$1","data$1","trieData$1","_createForOfIteratorHelperLoose$e","_unsupportedIterableToArray$e","_arrayLikeToArray$e","decompositions$1","trie$1","stateMachine$1","IndicShaper","setupSyllables$1","initialReordering","finalReordering","unicodeScript","indicConfig","isOldSpec","_loop","d","decomposed","indicCategory","indicPosition","IndicInfo","syllableType","syllable","_step$value","_i2","isConsonant","isJoiner","isHalantOrCoeng","wouldSubstitute","_glyph$features","_layoutEngine","engine","GSUBProcessor","consonantPosition","consonant","info","nextSyllable$1","_glyphs$start$shaperI","_i3","limit","hasReph","rphf","_g","_i4","seenBelow","_info","_i5","_i6","_info2","_i7","j","disallowDoubleHalants","_i8","_j","lastPos","_i9","_info3","_j2","_i10","_j3","_i11","_i12","blwf","_i13","_i14","abvf","pstf","_i15","prefLen","pref","_i16","_g2","_j4","cfar","_i17","nonJoiner","_j5","tryPref","BASE_C","_i18","newPos","_i19","oldPos","tmp","newRephPos","_i20","reph","_i21","_newPos","_oldPos2","_oldPos","_tmp","trieData","_createForOfIteratorHelperLoose$d","_unsupportedIterableToArray$d","_arrayLikeToArray$d","trie","UniversalShaper","setupSyllables","clearSubstitutionFlags","recordRphf","recordPref","reorder","useCategory","USEInfo","nextSyllable","isHalant","_createForOfIteratorHelperLoose$c","_unsupportedIterableToArray$c","_arrayLikeToArray$c","SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","choose","shaper","_createForOfIteratorHelperLoose$b","_unsupportedIterableToArray$b","_arrayLikeToArray$b","_OTProcessor","_index","curGlyph","replacement","_index2","USER_INDEX","_index3","ligature","_curGlyph","characters","_index4","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","_createForOfIteratorHelperLoose$a","_unsupportedIterableToArray$a","_arrayLikeToArray$a","GPOSProcessor","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","_pair","class1","class2","nextIndex","_nextGlyph","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","_markIndex","_baseGlyphIndex","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","_markRecord","_baseAnchor","mark1Index","prevIndex","_cur","good","mark2Index","_markRecord2","_baseAnchor2","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","_k","OTLayoutEngine","glyphInfos","setup","glyphInfo","zeroMarkWidths","zeroMarkAdvances","cleanup","_createForOfIteratorHelperLoose$9","_unsupportedIterableToArray$9","_arrayLikeToArray$9","LayoutEngine","unicodeLayoutEngine","kernProcessor","layout","glyphsForString","hideDefaultIgnorables","positioned","space","isDefaultIgnorable","ch","plane","_createForOfIteratorHelperLoose$8","_unsupportedIterableToArray$8","_arrayLikeToArray$8","SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","Path","commands","_bbox","_cbox","toFunction","forEach","command","toSVG","cmds","round","join","mapPoints","path","_fn","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","freeze","cx","cy","p0","p1","p2","p3","_c$args","_c$args2","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","_c$args3","b2ac","t1","sqrt","t2","_arr","StandardNames","_class$1","Glyph","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","_this$_getTableMetric","leftBearing","_this$_getTableMetric2","advanceHeight","topBearing","os2","getAdvanceAdjustment","getScaledPath","_getName","fromCharCode","render","save","fill","restore","_createForOfIteratorHelperLoose$7","_unsupportedIterableToArray$7","_arrayLikeToArray$7","GlyfHeader","numberOfContours","ON_CURVE$1","X_SHORT_VECTOR$1","Y_SHORT_VECTOR$1","REPEAT$1","SAME_X$1","SAME_Y$1","ARG_1_AND_2_ARE_WORDS","WE_HAVE_A_SCALE","MORE_COMPONENTS","WE_HAVE_AN_X_AND_Y_SCALE","WE_HAVE_A_TWO_BY_TWO","WE_HAVE_INSTRUCTIONS","Point$1","Point","onCurve","endContour","Component","dx","dy","scale01","scale10","TTFGlyph","_Glyph","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","nextPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_this$_metrics","_getContours","_contours","contour","_point","directory","contours","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","CFFGlyph","CFF2","bias","cff","trans","nStems","usedGsubrs","usedSubrs","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","parse","phase","c1x","c1y","c2x","c2y","subr","e","blendVector","getBlendVector","numOperands","sum","_phase","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","SBIXImage","originX","originY","buflen","SBIXGlyph","_TTFGlyph","getImageForSize","img","image","renderOutlines","_createForOfIteratorHelperLoose$6","_unsupportedIterableToArray$6","_arrayLikeToArray$6","COLRLayer","color","COLRGlyph","layers","layer","fillColor","cpal","colr","rec","baseLayer","_getBaseGlyph","TUPLES_SHARE_POINT_NUMBERS","TUPLE_COUNT_MASK","EMBEDDED_TUPLE_COORD","INTERMEDIATE_TUPLE","PRIVATE_POINT_NUMBERS","TUPLE_INDEX_MASK","POINTS_ARE_WORDS","POINT_RUN_COUNT_MASK","DELTAS_ARE_ZERO","DELTAS_ARE_WORDS","DELTA_RUN_COUNT_MASK","GlyphVariationProcessor","normalizeCoords","blendVectors","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","_a","endCoords","_a2","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","_p","out","ref","_table$advanceWidthMa","itemStore","varData","deltaSet","netAdjustment","master","scalar","regionIndex","axes","axisScalar","resolved","Promise","resolve","Subset","mapping","includeGlyph","encodeStream","EncodeStream","then","ON_CURVE","X_SHORT_VECTOR","Y_SHORT_VECTOR","REPEAT","SAME_X","SAME_Y","Glyf","xPoints","yPoints","TTFGlyphEncoder","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","_createForOfIteratorHelperLoose$5","_unsupportedIterableToArray$5","_arrayLikeToArray$5","TTFSubset","_Subset","glyphEncoder","_addGlyph","curOffset","nextOffset","_createForOfIteratorHelperLoose$4","_unsupportedIterableToArray$4","_arrayLikeToArray$4","CFFSubset","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","FontName","createCIDFontdict","addString","Encoding","CIDCount","_class","_createForOfIteratorHelperLoose$3","_unsupportedIterableToArray$3","_arrayLikeToArray$3","TTFFont","variationCoords","_directoryPos","_tables","_glyphs","_decodeDirectory","_getTable","_decodeTable","console","error","getName","nextState","createSubset","getVariation","settings","namedVariations","trim","default","_createForOfIteratorHelperLoose$2","_unsupportedIterableToArray$2","_arrayLikeToArray$2","WOFFDirectoryEntry","compLength","origChecksum","WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","WOFFFont","_TTFFont","outBuffer","alloc","_createForOfIteratorHelperLoose$1","_unsupportedIterableToArray$1","_arrayLikeToArray$1","TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","TrueTypeCollection","readString","fonts","_createForOfIteratorHelperLoose","_unsupportedIterableToArray","_arrayLikeToArray","DFontName","Ref","nameOffset","attr","dataOffset","handle","Type","maxTypeIndex","refList","TypeList","DFontMap","typeList","nameListOffset","DFontHeader","dataLength","mapLength","DFont","sfnt"],"mappings":"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","sourcesContent":["import r from 'restructure';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _applyDecoratedDescriptor from '@babel/runtime/helpers/applyDecoratedDescriptor';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { PropertyDescriptor, resolveLength } from 'restructure/src/utils';\nimport isEqual from 'deep-equal';\nimport unicode from '@react-pdf/unicode-properties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport UnicodeTrie from 'unicode-trie';\nimport StateMachine from 'dfa';\nimport cloneDeep from 'clone';\nimport inflate from 'tiny-inflate';\n\nvar fontkit = {};\nfontkit.logErrors = false;\nvar formats = [];\n\nfontkit.registerFormat = function (format) {\n  formats.push(format);\n};\n\nfontkit.openSync = function (filename, postscriptName) {\n  {\n    throw new Error('fontkit.openSync unavailable for browser build');\n  }\n};\n\nfontkit.open = function (filename, postscriptName, callback) {\n  {\n    throw new Error('fontkit.open unavailable for browser build');\n  }\n};\n\nfontkit.create = function (buffer, postscriptName) {\n  for (var i = 0; i < formats.length; i++) {\n    var format = formats[i];\n\n    if (format.probe(buffer)) {\n      var font = new format(new r.DecodeStream(buffer));\n\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nfontkit.defaultLanguage = 'en';\n\nfontkit.setDefaultLanguage = function (lang) {\n  if (lang === void 0) {\n    lang = 'en';\n  }\n\n  fontkit.defaultLanguage = lang;\n};\n\n/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nfunction cache(target, key, descriptor) {\n  if (descriptor.get) {\n    var get = descriptor.get;\n\n    descriptor.get = function () {\n      var value = get.call(this);\n      Object.defineProperty(this, key, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    var fn = descriptor.value;\n    return {\n      get: function get() {\n        var cache = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          var key = args.length > 0 ? args[0] : 'value';\n\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          var result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        }\n        Object.defineProperty(this, key, {\n          value: memoized\n        });\n        return memoized;\n      }\n    };\n  }\n}\n\nvar SubHeader = new r.Struct({\n  firstCode: r.uint16,\n  entryCount: r.uint16,\n  idDelta: r.int16,\n  idRangeOffset: r.uint16\n});\nvar CmapGroup = new r.Struct({\n  startCharCode: r.uint32,\n  endCharCode: r.uint32,\n  glyphID: r.uint32\n});\nvar UnicodeValueRange = new r.Struct({\n  startUnicodeValue: r.uint24,\n  additionalCount: r.uint8\n});\nvar UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID: r.uint16\n});\nvar DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nvar NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\nvar VarSelectorRecord = new r.Struct({\n  varSelector: r.uint24,\n  defaultUVS: new r.Pointer(r.uint32, DefaultUVS, {\n    type: 'parent'\n  }),\n  nonDefaultUVS: new r.Pointer(r.uint32, NonDefaultUVS, {\n    type: 'parent'\n  })\n});\nvar CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Byte encoding\n    length: r.uint16,\n    // Total table length in bytes (set to 262 for format 0)\n    language: r.uint16,\n    // Language code for this encoding subtable, or zero if language-independent\n    codeMap: new r.LazyArray(r.uint8, 256)\n  },\n  2: {\n    // High-byte mapping (CJK)\n    length: r.uint16,\n    language: r.uint16,\n    subHeaderKeys: new r.Array(r.uint16, 256),\n    subHeaderCount: function subHeaderCount(t) {\n      return Math.max.apply(Math, t.subHeaderKeys);\n    },\n    subHeaders: new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n  4: {\n    // Segment mapping to delta values\n    length: r.uint16,\n    // Total table length in bytes\n    language: r.uint16,\n    // Language code\n    segCountX2: r.uint16,\n    segCount: function segCount(t) {\n      return t.segCountX2 >> 1;\n    },\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    endCode: new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad: new r.Reserved(r.uint16),\n    // This value should be zero\n    startCode: new r.LazyArray(r.uint16, 'segCount'),\n    idDelta: new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset: new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray: new r.LazyArray(r.uint16, function (t) {\n      return (t.length - t._currentOffset) / 2;\n    })\n  },\n  6: {\n    // Trimmed table\n    length: r.uint16,\n    language: r.uint16,\n    firstCode: r.uint16,\n    entryCount: r.uint16,\n    glyphIndices: new r.LazyArray(r.uint16, 'entryCount')\n  },\n  8: {\n    // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint16,\n    is32: new r.LazyArray(r.uint8, 8192),\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  10: {\n    // Trimmed Array\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    firstCode: r.uint32,\n    entryCount: r.uint32,\n    glyphIndices: new r.LazyArray(r.uint16, 'numChars')\n  },\n  12: {\n    // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  13: {\n    // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length: r.uint32,\n    language: r.uint32,\n    nGroups: r.uint32,\n    groups: new r.LazyArray(CmapGroup, 'nGroups')\n  },\n  14: {\n    // Unicode Variation Sequences\n    length: r.uint32,\n    numRecords: r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\nvar CmapEntry = new r.Struct({\n  platformID: r.uint16,\n  // Platform identifier\n  encodingID: r.uint16,\n  // Platform-specific encoding identifier\n  table: new r.Pointer(r.uint32, CmapSubtable, {\n    type: 'parent',\n    lazy: true\n  })\n}); // character to glyph mapping\n\nvar cmap = new r.Struct({\n  version: r.uint16,\n  numSubtables: r.uint16,\n  tables: new r.Array(CmapEntry, 'numSubtables')\n});\n\nvar head = new r.Struct({\n  version: r.int32,\n  // 0x00010000 (version 1.0)\n  revision: r.int32,\n  // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber: r.uint32,\n  // set to 0x5F0F3CF5\n  flags: r.uint16,\n  unitsPerEm: r.uint16,\n  // range from 64 to 16384\n  created: new r.Array(r.int32, 2),\n  modified: new r.Array(r.int32, 2),\n  xMin: r.int16,\n  // for all glyph bounding boxes\n  yMin: r.int16,\n  // for all glyph bounding boxes\n  xMax: r.int16,\n  // for all glyph bounding boxes\n  yMax: r.int16,\n  // for all glyph bounding boxes\n  macStyle: new r.Bitfield(r.uint16, ['bold', 'italic', 'underline', 'outline', 'shadow', 'condensed', 'extended']),\n  lowestRecPPEM: r.uint16,\n  // smallest readable size in pixels\n  fontDirectionHint: r.int16,\n  indexToLocFormat: r.int16,\n  // 0 for short offsets, 1 for long\n  glyphDataFormat: r.int16 // 0 for current format\n\n});\n\nvar hhea = new r.Struct({\n  version: r.int32,\n  ascent: r.int16,\n  // Distance from baseline of highest ascender\n  descent: r.int16,\n  // Distance from baseline of lowest descender\n  lineGap: r.int16,\n  // Typographic line gap\n  advanceWidthMax: r.uint16,\n  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing: r.int16,\n  // Maximum advance width value in 'hmtx' table\n  minRightSideBearing: r.int16,\n  // Minimum right sidebearing value\n  xMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun: r.int16,\n  // 0 for vertical\n  caretOffset: r.int16,\n  // Set to 0 for non-slanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // 0 for current format\n  numberOfMetrics: r.uint16 // Number of advance widths in 'hmtx' table\n\n});\n\nvar HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\nvar hmtx = new r.Struct({\n  metrics: new r.LazyArray(HmtxEntry, function (t) {\n    return t.parent.hhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics;\n  })\n});\n\nvar maxp = new r.Struct({\n  version: r.int32,\n  numGlyphs: r.uint16,\n  // The number of glyphs in the font\n  maxPoints: r.uint16,\n  // Maximum points in a non-composite glyph\n  maxContours: r.uint16,\n  // Maximum contours in a non-composite glyph\n  maxComponentPoints: r.uint16,\n  // Maximum points in a composite glyph\n  maxComponentContours: r.uint16,\n  // Maximum contours in a composite glyph\n  maxZones: r.uint16,\n  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints: r.uint16,\n  // Maximum points used in Z0\n  maxStorage: r.uint16,\n  // Number of Storage Area locations\n  maxFunctionDefs: r.uint16,\n  // Number of FDEFs\n  maxInstructionDefs: r.uint16,\n  // Number of IDEFs\n  maxStackElements: r.uint16,\n  // Maximum stack depth\n  maxSizeOfInstructions: r.uint16,\n  // Maximum byte count for glyph instructions\n  maxComponentElements: r.uint16,\n  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth: r.uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n\n/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nfunction getEncoding(platformID, encodingID, languageID) {\n  if (languageID === void 0) {\n    languageID = 0;\n  }\n\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n\n  return ENCODINGS[platformID][encodingID];\n} // Map of platform ids to encoding ids.\n\nvar ENCODINGS = [// unicode\n['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n['macroman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8', 'macgreek', 'maccyrillic', 'symbol', 'Devanagari', 'Gurmukhi', 'Gujarati', 'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese', 'Burmese', 'Khmer', 'macthai', 'Laotian', 'Georgian', 'Armenian', 'gb-2312-80', 'Tibetan', 'Mongolian', 'Geez', 'maccenteuro', 'Vietnamese', 'Sindhi'], // ISO (deprecated)\n['ascii'], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'wansung', 'johab', null, null, null, 'utf16be']]; // Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\n\nvar MAC_LANGUAGE_ENCODINGS = {\n  15: 'maciceland',\n  17: 'macturkish',\n  18: 'maccroatian',\n  24: 'maccenteuro',\n  25: 'maccenteuro',\n  26: 'maccenteuro',\n  27: 'maccenteuro',\n  28: 'maccenteuro',\n  30: 'maciceland',\n  37: 'macromania',\n  38: 'maccenteuro',\n  39: 'maccenteuro',\n  40: 'maccenteuro',\n  143: 'macinuit',\n  // Unsupported by iconv-lite\n  146: 'macgaelic' // Unsupported by iconv-lite\n\n}; // Map of platform ids to BCP-47 language codes.\n\nvar LANGUAGES = [// unicode\n[], {\n  // macintosh\n  0: 'en',\n  30: 'fo',\n  60: 'ks',\n  90: 'rw',\n  1: 'fr',\n  31: 'fa',\n  61: 'ku',\n  91: 'rn',\n  2: 'de',\n  32: 'ru',\n  62: 'sd',\n  92: 'ny',\n  3: 'it',\n  33: 'zh',\n  63: 'bo',\n  93: 'mg',\n  4: 'nl',\n  34: 'nl-BE',\n  64: 'ne',\n  94: 'eo',\n  5: 'sv',\n  35: 'ga',\n  65: 'sa',\n  128: 'cy',\n  6: 'es',\n  36: 'sq',\n  66: 'mr',\n  129: 'eu',\n  7: 'da',\n  37: 'ro',\n  67: 'bn',\n  130: 'ca',\n  8: 'pt',\n  38: 'cz',\n  68: 'as',\n  131: 'la',\n  9: 'no',\n  39: 'sk',\n  69: 'gu',\n  132: 'qu',\n  10: 'he',\n  40: 'si',\n  70: 'pa',\n  133: 'gn',\n  11: 'ja',\n  41: 'yi',\n  71: 'or',\n  134: 'ay',\n  12: 'ar',\n  42: 'sr',\n  72: 'ml',\n  135: 'tt',\n  13: 'fi',\n  43: 'mk',\n  73: 'kn',\n  136: 'ug',\n  14: 'el',\n  44: 'bg',\n  74: 'ta',\n  137: 'dz',\n  15: 'is',\n  45: 'uk',\n  75: 'te',\n  138: 'jv',\n  16: 'mt',\n  46: 'be',\n  76: 'si',\n  139: 'su',\n  17: 'tr',\n  47: 'uz',\n  77: 'my',\n  140: 'gl',\n  18: 'hr',\n  48: 'kk',\n  78: 'km',\n  141: 'af',\n  19: 'zh-Hant',\n  49: 'az-Cyrl',\n  79: 'lo',\n  142: 'br',\n  20: 'ur',\n  50: 'az-Arab',\n  80: 'vi',\n  143: 'iu',\n  21: 'hi',\n  51: 'hy',\n  81: 'id',\n  144: 'gd',\n  22: 'th',\n  52: 'ka',\n  82: 'tl',\n  145: 'gv',\n  23: 'ko',\n  53: 'mo',\n  83: 'ms',\n  146: 'ga',\n  24: 'lt',\n  54: 'ky',\n  84: 'ms-Arab',\n  147: 'to',\n  25: 'pl',\n  55: 'tg',\n  85: 'am',\n  148: 'el-polyton',\n  26: 'hu',\n  56: 'tk',\n  86: 'ti',\n  149: 'kl',\n  27: 'es',\n  57: 'mn-CN',\n  87: 'om',\n  150: 'az',\n  28: 'lv',\n  58: 'mn',\n  88: 'so',\n  151: 'nn',\n  29: 'se',\n  59: 'ps',\n  89: 'sw'\n}, // ISO (deprecated)\n[], {\n  // windows                                        \n  0x0436: 'af',\n  0x4009: 'en-IN',\n  0x0487: 'rw',\n  0x0432: 'tn',\n  0x041C: 'sq',\n  0x1809: 'en-IE',\n  0x0441: 'sw',\n  0x045B: 'si',\n  0x0484: 'gsw',\n  0x2009: 'en-JM',\n  0x0457: 'kok',\n  0x041B: 'sk',\n  0x045E: 'am',\n  0x4409: 'en-MY',\n  0x0412: 'ko',\n  0x0424: 'sl',\n  0x1401: 'ar-DZ',\n  0x1409: 'en-NZ',\n  0x0440: 'ky',\n  0x2C0A: 'es-AR',\n  0x3C01: 'ar-BH',\n  0x3409: 'en-PH',\n  0x0454: 'lo',\n  0x400A: 'es-BO',\n  0x0C01: 'ar',\n  0x4809: 'en-SG',\n  0x0426: 'lv',\n  0x340A: 'es-CL',\n  0x0801: 'ar-IQ',\n  0x1C09: 'en-ZA',\n  0x0427: 'lt',\n  0x240A: 'es-CO',\n  0x2C01: 'ar-JO',\n  0x2C09: 'en-TT',\n  0x082E: 'dsb',\n  0x140A: 'es-CR',\n  0x3401: 'ar-KW',\n  0x0809: 'en-GB',\n  0x046E: 'lb',\n  0x1C0A: 'es-DO',\n  0x3001: 'ar-LB',\n  0x0409: 'en',\n  0x042F: 'mk',\n  0x300A: 'es-EC',\n  0x1001: 'ar-LY',\n  0x3009: 'en-ZW',\n  0x083E: 'ms-BN',\n  0x440A: 'es-SV',\n  0x1801: 'ary',\n  0x0425: 'et',\n  0x043E: 'ms',\n  0x100A: 'es-GT',\n  0x2001: 'ar-OM',\n  0x0438: 'fo',\n  0x044C: 'ml',\n  0x480A: 'es-HN',\n  0x4001: 'ar-QA',\n  0x0464: 'fil',\n  0x043A: 'mt',\n  0x080A: 'es-MX',\n  0x0401: 'ar-SA',\n  0x040B: 'fi',\n  0x0481: 'mi',\n  0x4C0A: 'es-NI',\n  0x2801: 'ar-SY',\n  0x080C: 'fr-BE',\n  0x047A: 'arn',\n  0x180A: 'es-PA',\n  0x1C01: 'aeb',\n  0x0C0C: 'fr-CA',\n  0x044E: 'mr',\n  0x3C0A: 'es-PY',\n  0x3801: 'ar-AE',\n  0x040C: 'fr',\n  0x047C: 'moh',\n  0x280A: 'es-PE',\n  0x2401: 'ar-YE',\n  0x140C: 'fr-LU',\n  0x0450: 'mn',\n  0x500A: 'es-PR',\n  0x042B: 'hy',\n  0x180C: 'fr-MC',\n  0x0850: 'mn-CN',\n  0x0C0A: 'es',\n  0x044D: 'as',\n  0x100C: 'fr-CH',\n  0x0461: 'ne',\n  0x040A: 'es',\n  0x082C: 'az-Cyrl',\n  0x0462: 'fy',\n  0x0414: 'nb',\n  0x540A: 'es-US',\n  0x042C: 'az',\n  0x0456: 'gl',\n  0x0814: 'nn',\n  0x380A: 'es-UY',\n  0x046D: 'ba',\n  0x0437: 'ka',\n  0x0482: 'oc',\n  0x200A: 'es-VE',\n  0x042D: 'eu',\n  0x0C07: 'de-AT',\n  0x0448: 'or',\n  0x081D: 'sv-FI',\n  0x0423: 'be',\n  0x0407: 'de',\n  0x0463: 'ps',\n  0x041D: 'sv',\n  0x0845: 'bn',\n  0x1407: 'de-LI',\n  0x0415: 'pl',\n  0x045A: 'syr',\n  0x0445: 'bn-IN',\n  0x1007: 'de-LU',\n  0x0416: 'pt',\n  0x0428: 'tg',\n  0x201A: 'bs-Cyrl',\n  0x0807: 'de-CH',\n  0x0816: 'pt-PT',\n  0x085F: 'tzm',\n  0x141A: 'bs',\n  0x0408: 'el',\n  0x0446: 'pa',\n  0x0449: 'ta',\n  0x047E: 'br',\n  0x046F: 'kl',\n  0x046B: 'qu-BO',\n  0x0444: 'tt',\n  0x0402: 'bg',\n  0x0447: 'gu',\n  0x086B: 'qu-EC',\n  0x044A: 'te',\n  0x0403: 'ca',\n  0x0468: 'ha',\n  0x0C6B: 'qu',\n  0x041E: 'th',\n  0x0C04: 'zh-HK',\n  0x040D: 'he',\n  0x0418: 'ro',\n  0x0451: 'bo',\n  0x1404: 'zh-MO',\n  0x0439: 'hi',\n  0x0417: 'rm',\n  0x041F: 'tr',\n  0x0804: 'zh',\n  0x040E: 'hu',\n  0x0419: 'ru',\n  0x0442: 'tk',\n  0x1004: 'zh-SG',\n  0x040F: 'is',\n  0x243B: 'smn',\n  0x0480: 'ug',\n  0x0404: 'zh-TW',\n  0x0470: 'ig',\n  0x103B: 'smj-NO',\n  0x0422: 'uk',\n  0x0483: 'co',\n  0x0421: 'id',\n  0x143B: 'smj',\n  0x042E: 'hsb',\n  0x041A: 'hr',\n  0x045D: 'iu',\n  0x0C3B: 'se-FI',\n  0x0420: 'ur',\n  0x101A: 'hr-BA',\n  0x085D: 'iu-Latn',\n  0x043B: 'se',\n  0x0843: 'uz-Cyrl',\n  0x0405: 'cs',\n  0x083C: 'ga',\n  0x083B: 'se-SE',\n  0x0443: 'uz',\n  0x0406: 'da',\n  0x0434: 'xh',\n  0x203B: 'sms',\n  0x042A: 'vi',\n  0x048C: 'prs',\n  0x0435: 'zu',\n  0x183B: 'sma-NO',\n  0x0452: 'cy',\n  0x0465: 'dv',\n  0x0410: 'it',\n  0x1C3B: 'sms',\n  0x0488: 'wo',\n  0x0813: 'nl-BE',\n  0x0810: 'it-CH',\n  0x044F: 'sa',\n  0x0485: 'sah',\n  0x0413: 'nl',\n  0x0411: 'ja',\n  0x1C1A: 'sr-Cyrl-BA',\n  0x0478: 'ii',\n  0x0C09: 'en-AU',\n  0x044B: 'kn',\n  0x0C1A: 'sr',\n  0x046A: 'yo',\n  0x2809: 'en-BZ',\n  0x043F: 'kk',\n  0x181A: 'sr-Latn-BA',\n  0x1009: 'en-CA',\n  0x0453: 'km',\n  0x081A: 'sr-Latn',\n  0x2409: 'en-029',\n  0x0486: 'quc',\n  0x046C: 'nso'\n}];\n\nfunction _createForOfIteratorHelperLoose$s(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$s(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$s(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$s(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$s(o, minLen); }\n\nfunction _arrayLikeToArray$s(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID: r.uint16,\n  length: r.uint16,\n  string: new r.Pointer(r.uint16, new r.String('length', function (t) {\n    return getEncoding(t.platformID, t.encodingID, t.languageID);\n  }), {\n    type: 'parent',\n    relativeTo: 'parent.stringOffset',\n    allowNull: false\n  })\n});\nvar LangTagRecord = new r.Struct({\n  length: r.uint16,\n  tag: new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {\n    type: 'parent',\n    relativeTo: 'stringOffset'\n  })\n});\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count: r.uint16,\n    stringOffset: r.uint16,\n    records: new r.Array(NameRecord, 'count'),\n    langTagCount: r.uint16,\n    langTags: new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\nvar NAMES = ['copyright', 'fontFamily', 'fontSubfamily', 'uniqueSubfamily', 'fullName', 'version', 'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n'trademark', 'manufacturer', 'designer', 'description', 'vendorURL', 'designerURL', 'license', 'licenseURL', null, // reserved\n'preferredFamily', 'preferredSubfamily', 'compatibleFull', 'sampleText', 'postscriptCIDFontName', 'wwsFamilyName', 'wwsSubfamilyName'];\n\nNameTable.process = function (stream) {\n  var records = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$s(this.records), _step; !(_step = _iterator()).done;) {\n    var record = _step.value;\n    // find out what language this is for\n    var language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    } // if the nameID is >= 256, it is a font feature record (AAT)\n\n\n    var key = record.nameID >= 256 ? 'fontFeatures' : NAMES[record.nameID] || record.nameID;\n\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    var obj = records[key];\n\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  var records = [];\n\n  for (var key in this.records) {\n    var val = this.records[key];\n    if (key === 'fontFeatures') continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: Buffer.byteLength(val.en, 'utf16le'),\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth: r.int16,\n    // average weighted advance width of lower case letters and space\n    usWeightClass: r.uint16,\n    // visual weight of stroke in glyphs\n    usWidthClass: r.uint16,\n    // relative change from the normal aspect ratio (width to height ratio)\n    fsType: new r.Bitfield(r.uint16, [// Indicates font embedding licensing rights\n    null, 'noEmbedding', 'viewOnly', 'editable', null, null, null, null, 'noSubsetting', 'bitmapOnly']),\n    ySubscriptXSize: r.int16,\n    // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize: r.int16,\n    // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset: r.int16,\n    // recommended horizontal offset for subscripts\n    ySubscriptYOffset: r.int16,\n    // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize: r.int16,\n    // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize: r.int16,\n    // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset: r.int16,\n    // recommended horizontal offset for superscripts\n    ySuperscriptYOffset: r.int16,\n    // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize: r.int16,\n    // width of the strikeout stroke\n    yStrikeoutPosition: r.int16,\n    // position of the strikeout stroke relative to the baseline\n    sFamilyClass: r.int16,\n    // classification of font-family design\n    panose: new r.Array(r.uint8, 10),\n    // describe the visual characteristics of a given typeface\n    ulCharRange: new r.Array(r.uint32, 4),\n    vendorID: new r.String(4),\n    // four character identifier for the font vendor\n    fsSelection: new r.Bitfield(r.uint16, [// bit field containing information about the font\n    'italic', 'underscore', 'negative', 'outlined', 'strikeout', 'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique']),\n    usFirstCharIndex: r.uint16,\n    // The minimum Unicode index in this font\n    usLastCharIndex: r.uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16\n  },\n  5: {\n    typoAscender: r.int16,\n    typoDescender: r.int16,\n    typoLineGap: r.int16,\n    winAscent: r.uint16,\n    winDescent: r.uint16,\n    codePageRange: new r.Array(r.uint32, 2),\n    xHeight: r.int16,\n    capHeight: r.int16,\n    defaultChar: r.uint16,\n    breakChar: r.uint16,\n    maxContent: r.uint16,\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\nvar versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\nvar post = new r.VersionedStruct(r.fixed32, {\n  header: {\n    // these fields exist at the top of all versions\n    italicAngle: r.fixed32,\n    // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition: r.int16,\n    // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,\n    // Suggested values for the underline thickness\n    isFixedPitch: r.uint32,\n    // Whether the font is monospaced\n    minMemType42: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42: r.uint32,\n    // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1: r.uint32,\n    // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1: r.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  // version 1 has no additional fields\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names: new r.Array(new r.String(r.uint8))\n  },\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets: new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n  3: {},\n  // version 3 has no additional fields\n  4: {\n    map: new r.Array(r.uint32, function (t) {\n      return t.parent.maxp.numGlyphs;\n    })\n  }\n});\n\nvar cvt = new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n\nvar fpgm = new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n\nvar loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n  }\n};\n\nloca.preEncode = function () {\n  if (this.version === 0) {\n    for (var i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n  }\n};\n\nvar prep = new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n\nvar glyf = new r.Array(new r.Buffer());\n\nfunction _createForOfIteratorHelperLoose$r(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$r(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$r(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$r(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$r(o, minLen); }\n\nfunction _arrayLikeToArray$r(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar CFFIndex = /*#__PURE__*/function () {\n  function CFFIndex(type) {\n    this.type = type;\n  }\n\n  var _proto = CFFIndex.prototype;\n\n  _proto.getCFFVersion = function getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var version = this.getCFFVersion(parent);\n    var count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    var offSize = stream.readUInt8();\n    var offsetType;\n\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset size in CFFIndex: \" + offSize + \" \" + stream.pos);\n    }\n\n    var ret = [];\n    var startPos = stream.pos + (count + 1) * offSize - 1;\n    var start = offsetType.decode(stream);\n\n    for (var i = 0; i < count; i++) {\n      var end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        var pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  };\n\n  _proto.size = function size(arr, parent) {\n    var size = 2;\n\n    if (arr.length === 0) {\n      return size;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var offset = 1;\n\n    for (var i = 0; i < arr.length; i++) {\n      var item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  };\n\n  _proto.encode = function encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n\n    if (arr.length === 0) {\n      return;\n    }\n\n    var type = this.type || new r.Buffer(); // find maximum offset to detminine offset type\n\n    var sizes = [];\n    var offset = 1;\n\n    for (var _iterator = _createForOfIteratorHelperLoose$r(arr), _step; !(_step = _iterator()).done;) {\n      var item = _step.value;\n      var s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    var offsetType;\n\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    } // write offset size\n\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (var _i = 0, _sizes = sizes; _i < _sizes.length; _i++) {\n      var size = _sizes[_i];\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$r(arr), _step2; !(_step2 = _iterator2()).done;) {\n      var _item = _step2.value;\n      type.encode(stream, _item, parent);\n    }\n\n    return;\n  };\n\n  return CFFIndex;\n}();\n\nvar FLOAT_EOF = 0xf;\nvar FLOAT_LOOKUP = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\nvar FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nvar CFFOperand = /*#__PURE__*/function () {\n  function CFFOperand() {}\n\n  CFFOperand.decode = function decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      var str = '';\n\n      while (true) {\n        var b = stream.readUInt8();\n        var n1 = b >> 4;\n\n        if (n1 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n1];\n        var n2 = b & 15;\n\n        if (n2 === FLOAT_EOF) {\n          break;\n        }\n\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  };\n\n  CFFOperand.size = function size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) {\n      // floating point\n      var str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n    } else {\n      return 5;\n    }\n  };\n\n  CFFOperand.encode = function encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    var val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      // floating point\n      stream.writeUInt8(30);\n      var str = '' + val;\n\n      for (var i = 0; i < str.length; i += 2) {\n        var c1 = str[i];\n        var n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          var c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8(FLOAT_EOF << 4);\n      }\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  };\n\n  return CFFOperand;\n}();\n\nfunction _createForOfIteratorHelperLoose$q(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$q(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$q(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$q(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$q(o, minLen); }\n\nfunction _arrayLikeToArray$q(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar CFFDict = /*#__PURE__*/function () {\n  function CFFDict(ops) {\n    if (ops === void 0) {\n      ops = [];\n    }\n\n    this.ops = ops;\n    this.fields = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose$q(ops), _step; !(_step = _iterator()).done;) {\n      var field = _step.value;\n      var key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  var _proto = CFFDict.prototype;\n\n  _proto.decodeOperands = function decodeOperands(type, stream, ret, operands) {\n    var _this = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this.decodeOperands(type[i], stream, ret, [op]);\n      });\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n\n        case 'boolean':\n          return !!operands[0];\n\n        default:\n          return operands;\n      }\n    }\n  };\n\n  _proto.encodeOperands = function encodeOperands(type, stream, ctx, operands) {\n    var _this2 = this;\n\n    if (Array.isArray(type)) {\n      return operands.map(function (op, i) {\n        return _this2.encodeOperands(type[i], stream, ctx, op)[0];\n      });\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var end = stream.pos + parent.length;\n    var ret = {};\n    var operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (var key in this.fields) {\n      var field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      var b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) {\n          b = b << 8 | stream.readUInt8();\n        }\n\n        var _field = this.fields[b];\n\n        if (!_field) {\n          throw new Error(\"Unknown operator \" + b);\n        }\n\n        var val = this.decodeOperands(_field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, _field[1], val);\n          } else {\n            ret[_field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  };\n\n  _proto.size = function size(dict, parent, includePointers) {\n    if (includePointers === void 0) {\n      includePointers = true;\n    }\n\n    var ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    var len = 0;\n\n    for (var k in this.fields) {\n      var field = this.fields[k];\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$q(operands), _step2; !(_step2 = _iterator2()).done;) {\n        var op = _step2.value;\n        len += CFFOperand.size(op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  };\n\n  _proto.encode = function encode(stream, dict, parent) {\n    var ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose$q(this.ops), _step3; !(_step3 = _iterator3()).done;) {\n      var field = _step3.value;\n      var val = dict[field[1]];\n\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      var operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose$q(operands), _step4; !(_step4 = _iterator4()).done;) {\n        var op = _step4.value;\n        CFFOperand.encode(stream, op);\n      }\n\n      var key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose$q(key), _step5; !(_step5 = _iterator5()).done;) {\n        var _op = _step5.value;\n        stream.writeUInt8(_op);\n      }\n    }\n\n    var i = 0;\n\n    while (i < ctx.pointers.length) {\n      var ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  };\n\n  return CFFDict;\n}();\n\nvar CFFPointer = /*#__PURE__*/function (_r$Pointer) {\n  _inheritsLoose(CFFPointer, _r$Pointer);\n\n  function CFFPointer(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    return _r$Pointer.call(this, null, type, options) || this;\n  }\n\n  var _proto = CFFPointer.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: function decode() {\n        return operands[0];\n      }\n    };\n    return _r$Pointer.prototype.decode.call(this, stream, parent, operands);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: function size() {\n          return 0;\n        }\n      };\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    var ptr = null;\n    this.offsetType = {\n      encode: function encode(stream, val) {\n        return ptr = val;\n      }\n    };\n\n    _r$Pointer.prototype.encode.call(this, stream, value, ctx);\n\n    return [new Ptr(ptr)];\n  };\n\n  return CFFPointer;\n}(r.Pointer);\n\nvar Ptr = /*#__PURE__*/function () {\n  function Ptr(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  var _proto2 = Ptr.prototype;\n\n  _proto2.valueOf = function valueOf() {\n    return this.val;\n  };\n\n  return Ptr;\n}();\n\nvar CFFBlendOp = /*#__PURE__*/function () {\n  function CFFBlendOp() {}\n\n  CFFBlendOp.decode = function decode(stream, parent, operands) {\n    var numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  };\n\n  return CFFBlendOp;\n}();\n\nvar CFFPrivateDict = new CFFDict([// key       name                    type                                          default\n[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'number', 0.039625], [[12, 10], 'BlueShift', 'number', 7], [[12, 11], 'BlueFuzz', 'number', 1], [10, 'StdHW', 'number', null], [11, 'StdVW', 'number', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'boolean', false], [[12, 17], 'LanguageGroup', 'number', 0], [[12, 18], 'ExpansionFactor', 'number', 0.06], [[12, 19], 'initialRandomSeed', 'number', 0], [20, 'defaultWidthX', 'number', 0], [21, 'nominalWidthX', 'number', 0], [22, 'vsindex', 'number', 0], [23, 'blend', CFFBlendOp, null], [19, 'Subrs', new CFFPointer(new CFFIndex(), {\n  type: 'local'\n}), null]]);\n\n// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nvar standardStrings = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\n\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\n// Scripts and Languages #\n//########################\n\nvar LangSysTable = new r.Struct({\n  reserved: new r.Reserved(r.uint16),\n  reqFeatureIndex: r.uint16,\n  featureCount: r.uint16,\n  featureIndexes: new r.Array(r.uint16, 'featureCount')\n});\nvar LangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  langSys: new r.Pointer(r.uint16, LangSysTable, {\n    type: 'parent'\n  })\n});\nvar Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count: r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\nvar ScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, Script, {\n    type: 'parent'\n  })\n});\nvar ScriptList = new r.Array(ScriptRecord, r.uint16); //#######################\n// Features and Lookups #\n//#######################\n\nvar Feature = new r.Struct({\n  featureParams: r.uint16,\n  // pointer\n  lookupCount: r.uint16,\n  lookupListIndexes: new r.Array(r.uint16, 'lookupCount')\n});\nvar FeatureRecord = new r.Struct({\n  tag: new r.String(4),\n  feature: new r.Pointer(r.uint16, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureList = new r.Array(FeatureRecord, r.uint16);\nvar LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures', 'ignoreMarks', 'useMarkFilteringSet'])\n});\nfunction LookupList(SubTable) {\n  var Lookup = new r.Struct({\n    lookupType: r.uint16,\n    flags: LookupFlags,\n    subTableCount: r.uint16,\n    subTables: new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet: new r.Optional(r.uint16, function (t) {\n      return t.flags.flags.useMarkFilteringSet;\n    })\n  });\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n} //#################\n// Coverage Table #\n//#################\n\nvar RangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  startCoverageIndex: r.uint16\n});\nvar Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount: r.uint16,\n    glyphs: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount: r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nvar ClassRangeRecord = new r.Struct({\n  start: r.uint16,\n  end: r.uint16,\n  class: r.uint16\n});\nvar ClassDef = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Class array\n    startGlyph: r.uint16,\n    glyphCount: r.uint16,\n    classValueArray: new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    // Class ranges\n    classRangeCount: r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n}); //###############\n// Device Table #\n//###############\n\nvar Device = new r.Struct({\n  a: r.uint16,\n  // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16,\n  // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nvar LookupRecord = new r.Struct({\n  sequenceIndex: r.uint16,\n  lookupListIndex: r.uint16\n});\nvar Rule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\nvar ClassRule = new r.Struct({\n  glyphCount: r.uint16,\n  lookupCount: r.uint16,\n  classes: new r.Array(r.uint16, function (t) {\n    return t.glyphCount - 1;\n  }),\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\nvar Context = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    ruleSetCount: r.uint16,\n    ruleSets: new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: {\n    // Class-based context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    classDef: new r.Pointer(r.uint16, ClassDef),\n    classSetCnt: r.uint16,\n    classSet: new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount: r.uint16,\n    lookupCount: r.uint16,\n    coverages: new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nvar ChainRule = new r.Struct({\n  backtrackGlyphCount: r.uint16,\n  backtrack: new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount: r.uint16,\n  input: new r.Array(r.uint16, function (t) {\n    return t.inputGlyphCount - 1;\n  }),\n  lookaheadGlyphCount: r.uint16,\n  lookahead: new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount: r.uint16,\n  lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n});\nvar ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\nvar ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Simple context glyph substitution\n    coverage: new r.Pointer(r.uint16, Coverage),\n    chainCount: r.uint16,\n    chainRuleSets: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  2: {\n    // Class-based chaining context\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef: new r.Pointer(r.uint16, ClassDef),\n    inputClassDef: new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef: new r.Pointer(r.uint16, ClassDef),\n    chainCount: r.uint16,\n    chainClassSet: new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n  3: {\n    // Coverage-based chaining context\n    backtrackGlyphCount: r.uint16,\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount: r.uint16,\n    inputCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount: r.uint16,\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\nvar _;\n/*******************\n * Variation Store *\n *******************/\n\nvar F2DOT14 = new r.Fixed(16, 'BE', 14);\nvar RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\nvar VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\nvar DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, function (t) {\n    return t.parent.shortDeltaCount;\n  }),\n  regionDeltas: new r.Array(r.int8, function (t) {\n    return t.parent.regionIndexCount - t.parent.shortDeltaCount;\n  }),\n  deltas: function deltas(t) {\n    return t.shortDeltas.concat(t.regionDeltas);\n  }\n});\nvar ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\nvar ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n/**********************\n * Feature Variations *\n **********************/\n\nvar ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: (_ = {\n    axisIndex: r.uint16\n  }, _[\"axisIndex\"] = r.uint16, _.filterRangeMinValue = F2DOT14, _.filterRangeMaxValue = F2DOT14, _)\n});\nvar ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\nvar FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {\n    type: 'parent'\n  })\n});\nvar FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\nvar FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {\n    type: 'parent'\n  }),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {\n    type: 'parent'\n  })\n});\nvar FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n\n// otherwise delegates to the provided type.\n\nvar PredefinedOp = /*#__PURE__*/function () {\n  function PredefinedOp(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  var _proto = PredefinedOp.prototype;\n\n  _proto.decode = function decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  };\n\n  _proto.size = function size(value, ctx) {\n    return this.type.size(value, ctx);\n  };\n\n  _proto.encode = function encode(stream, value, ctx) {\n    var index = this.predefinedOps.indexOf(value);\n\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  };\n\n  return PredefinedOp;\n}();\n\nvar CFFEncodingVersion = /*#__PURE__*/function (_r$Number) {\n  _inheritsLoose(CFFEncodingVersion, _r$Number);\n\n  function CFFEncodingVersion() {\n    return _r$Number.call(this, 'UInt8') || this;\n  }\n\n  var _proto2 = CFFEncodingVersion.prototype;\n\n  _proto2.decode = function decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  };\n\n  return CFFEncodingVersion;\n}(r.Number);\n\nvar Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\nvar Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\nvar CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  } // TODO: supplement?\n\n});\nvar CFFEncoding = new PredefinedOp([StandardEncoding, ExpertEncoding], new CFFPointer(CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nvar RangeArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(RangeArray, _r$Array);\n\n  function RangeArray() {\n    return _r$Array.apply(this, arguments) || this;\n  }\n\n  var _proto3 = RangeArray.prototype;\n\n  _proto3.decode = function decode(stream, parent) {\n    var length = resolveLength(this.length, stream, parent);\n    var count = 0;\n    var res = [];\n\n    while (count < length) {\n      var range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  };\n\n  return RangeArray;\n}(r.Array);\n\nvar CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  1: {\n    ranges: new RangeArray(Range1, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  },\n  2: {\n    ranges: new RangeArray(Range2, function (t) {\n      return t.parent.CharStrings.length - 1;\n    })\n  }\n});\nvar CFFCharset = new PredefinedOp([ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset], new CFFPointer(CFFCustomCharset, {\n  lazy: true\n}));\nvar FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\nvar FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\nvar FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, function (t) {\n      return t.parent.CharStrings.length;\n    })\n  },\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\nvar ptr = new CFFPointer(CFFPrivateDict);\n\nvar CFFPrivateOp = /*#__PURE__*/function () {\n  function CFFPrivateOp() {}\n\n  var _proto4 = CFFPrivateOp.prototype;\n\n  _proto4.decode = function decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  };\n\n  _proto4.size = function size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  };\n\n  _proto4.encode = function encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  };\n\n  return CFFPrivateOp;\n}();\n\nvar FontDict = new CFFDict([// key       name                   type(s)                                 default\n[18, 'Private', new CFFPrivateOp(), null], [[12, 38], 'FontName', 'sid', null], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], 'PaintType', 'number', 0]]);\nvar CFFTopDict = new CFFDict([// key       name                   type(s)                                 default\n[[12, 30], 'ROS', ['sid', 'sid', 'number'], null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'boolean', false], [[12, 2], 'ItalicAngle', 'number', 0], [[12, 3], 'UnderlinePosition', 'number', -100], [[12, 4], 'UnderlineThickness', 'number', 50], [[12, 5], 'PaintType', 'number', 0], [[12, 6], 'CharstringType', 'number', 2], [[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'number', null], [5, 'FontBBox', 'array', [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'number', 0], [14, 'XUID', 'array', null], [15, 'charset', CFFCharset, ISOAdobeCharset], [16, 'Encoding', CFFEncoding, StandardEncoding], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [18, 'Private', new CFFPrivateOp(), null], [[12, 20], 'SyntheticBase', 'number', null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], // CID font specific\n[[12, 31], 'CIDFontVersion', 'number', 0], [[12, 32], 'CIDFontRevision', 'number', 0], [[12, 33], 'CIDFontType', 'number', 0], [[12, 34], 'CIDCount', 'number', 8720], [[12, 35], 'UIDBase', 'number', null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [[12, 38], 'FontName', 'sid', null]]);\nvar VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n});\nvar CFF2TopDict = new CFFDict([[[12, 7], 'FontMatrix', 'array', [0.001, 0, 0, 0.001, 0, 0]], [17, 'CharStrings', new CFFPointer(new CFFIndex()), null], [[12, 37], 'FDSelect', new CFFPointer(FDSelect), null], [[12, 36], 'FDArray', new CFFPointer(new CFFIndex(FontDict)), null], [24, 'vstore', new CFFPointer(VariationStore), null], [25, 'maxstack', 'number', 193]]);\nvar CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize: r.uint8,\n    offSize: r.uint8,\n    nameIndex: new CFFIndex(new r.String('length')),\n    topDictIndex: new CFFIndex(CFFTopDict),\n    stringIndex: new CFFIndex(new r.String('length')),\n    globalSubrIndex: new CFFIndex()\n  },\n  2: {\n    hdrSize: r.uint8,\n    length: r.uint16,\n    topDict: CFF2TopDict,\n    globalSubrIndex: new CFFIndex()\n  }\n});\n\nvar CFFFont = /*#__PURE__*/function () {\n  function CFFFont(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  CFFFont.decode = function decode(stream) {\n    return new CFFFont(stream);\n  };\n\n  var _proto = CFFFont.prototype;\n\n  _proto.decode = function decode() {\n    this.stream.pos;\n    var top = CFFTop.decode(this.stream);\n\n    for (var key in top) {\n      var val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  };\n\n  _proto.string = function string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  };\n\n  _proto.getCharString = function getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  };\n\n  _proto.getGlyphName = function getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    } // CID-keyed fonts don't have glyph names\n\n\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    var charset = this.topDict.charset;\n\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (var i = 0; i < charset.ranges.length; i++) {\n          var range = charset.ranges[i];\n\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n\n        break;\n    }\n\n    return null;\n  };\n\n  _proto.fdForGlyph = function fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        var ranges = this.topDict.FDSelect.ranges;\n        var low = 0;\n        var high = ranges.length - 1;\n\n        while (low <= high) {\n          var mid = low + high >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n\n      default:\n        throw new Error(\"Unknown FDSelect version: \" + this.topDict.FDSelect.version);\n    }\n  };\n\n  _proto.privateDictForGlyph = function privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      var fd = this.fdForGlyph(gid);\n\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  };\n\n  _createClass(CFFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      if (this.version < 2) {\n        return this.nameIndex[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.string(this.topDict.FullName);\n    }\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.string(this.topDict.FamilyName);\n    }\n  }]);\n\n  return CFFFont;\n}();\n\nvar VerticalOrigin = new r.Struct({\n  glyphIndex: r.uint16,\n  vertOriginY: r.int16\n});\nvar VORG = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  defaultVertOriginY: r.int16,\n  numVertOriginYMetrics: r.uint16,\n  metrics: new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n\nvar BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\nvar SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\nvar EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nvar ByteAligned = function ByteAligned() {};\n\nvar BitAligned = function BitAligned() {};\n\nnew r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: BitAligned\n  },\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\nvar SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\nvar CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\nvar IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n  1: {\n    offsetArray: new r.Array(r.uint32, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n  3: {\n    offsetArray: new r.Array(r.uint16, function (t) {\n      return t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1;\n    })\n  },\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, function (t) {\n      return t.numGlyphs + 1;\n    })\n  },\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\nvar IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\nvar BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), {\n    type: 'parent'\n  }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\nvar EBLC = new r.Struct({\n  version: r.uint32,\n  // 0x00020000\n  numSizes: r.uint32,\n  sizes: new r.Array(BitmapSizeTable, 'numSizes')\n});\n\nvar ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), function (t) {\n    return t.parent.parent.maxp.numGlyphs + 1;\n  })\n}); // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n\nvar sbix = new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n\nvar LayerRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nvar BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,\n  // Glyph ID of reference glyph. This glyph is for reference only\n  // and is not rendered for color.\n  firstLayerIndex: r.uint16,\n  // Index (from beginning of the Layer Records) to the layer record.\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\nvar COLR = new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), {\n    lazy: true\n  }),\n  numLayerRecords: r.uint16\n});\n\nvar ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\nvar CPAL = new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes')\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n\nvar BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16 // X or Y value, in design units\n\n  },\n  2: {\n    // Design units plus contour point\n    coordinate: r.int16,\n    // X or Y value, in design units\n    referenceGlyph: r.uint16,\n    // GlyphID of control glyph\n    baseCoordPoint: r.uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    // X or Y value, in design units\n    deviceTable: new r.Pointer(r.uint16, Device) // Device table for X or Y value\n\n  }\n});\nvar BaseValues = new r.Struct({\n  defaultIndex: r.uint16,\n  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords: new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\nvar FeatMinMaxRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord, {\n    type: 'parent'\n  }) // May be NULL\n\n});\nvar MinMax = new r.Struct({\n  minCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  maxCoord: new r.Pointer(r.uint16, BaseCoord),\n  // May be NULL\n  featMinMaxCount: r.uint16,\n  // May be 0\n  featMinMaxRecords: new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n\n});\nvar BaseLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {\n    type: 'parent'\n  })\n});\nvar BaseScript = new r.Struct({\n  baseValues: new r.Pointer(r.uint16, BaseValues),\n  // May be NULL\n  defaultMinMax: new r.Pointer(r.uint16, MinMax),\n  // May be NULL\n  baseLangSysCount: r.uint16,\n  // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n\n});\nvar BaseScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  // 4-byte script identification tag\n  script: new r.Pointer(r.uint16, BaseScript, {\n    type: 'parent'\n  })\n});\nvar BaseScriptList = new r.Array(BaseScriptRecord, r.uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nvar BaseTagList = new r.Array(new r.String(4), r.uint16);\nvar Axis$1 = new r.Struct({\n  baseTagList: new r.Pointer(r.uint16, BaseTagList),\n  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\nvar BASE = new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis: new r.Pointer(r.uint16, Axis$1),\n    // May be NULL\n    vertAxis: new r.Pointer(r.uint16, Axis$1) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar AttachPoint = new r.Array(r.uint16, r.uint16);\nvar AttachList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  glyphCount: r.uint16,\n  attachPoints: new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\nvar CaretValue = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    coordinate: r.int16\n  },\n  2: {\n    // Contour point\n    caretValuePoint: r.uint16\n  },\n  3: {\n    // Design units plus Device table\n    coordinate: r.int16,\n    deviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\nvar LigCaretList = new r.Struct({\n  coverage: new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount: r.uint16,\n  ligGlyphs: new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\nvar MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount: r.uint16,\n  coverage: new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\nvar GDEF = new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef: new r.Pointer(r.uint16, ClassDef),\n    attachList: new r.Pointer(r.uint16, AttachList),\n    ligCaretList: new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n\nvar ValueFormat = new r.Bitfield(r.uint16, ['xPlacement', 'yPlacement', 'xAdvance', 'yAdvance', 'xPlaDevice', 'yPlaDevice', 'xAdvDevice', 'yAdvDevice']);\nvar types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance: r.int16,\n  yAdvance: r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, {\n    type: 'global',\n    relativeTo: 'rel'\n  })\n};\n\nvar ValueRecord = /*#__PURE__*/function () {\n  function ValueRecord(key) {\n    if (key === void 0) {\n      key = 'valueFormat';\n    }\n\n    this.key = key;\n  }\n\n  var _proto = ValueRecord.prototype;\n\n  _proto.buildStruct = function buildStruct(parent) {\n    var struct = parent;\n\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n    var fields = {};\n\n    fields.rel = function () {\n      return struct._startOffset;\n    };\n\n    var format = struct[this.key];\n\n    for (var key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  };\n\n  _proto.size = function size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  };\n\n  _proto.decode = function decode(stream, parent) {\n    var res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  };\n\n  return ValueRecord;\n}();\n\nvar PairValueRecord = new r.Struct({\n  secondGlyph: r.uint16,\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar PairSet = new r.Array(PairValueRecord, r.uint16);\nvar Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\nvar Anchor = new r.VersionedStruct(r.uint16, {\n  1: {\n    // Design units only\n    xCoordinate: r.int16,\n    yCoordinate: r.int16\n  },\n  2: {\n    // Design units plus contour point\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    anchorPoint: r.uint16\n  },\n  3: {\n    // Design units plus Device tables\n    xCoordinate: r.int16,\n    yCoordinate: r.int16,\n    xDeviceTable: new r.Pointer(r.uint16, Device),\n    yDeviceTable: new r.Pointer(r.uint16, Device)\n  }\n});\nvar EntryExitRecord = new r.Struct({\n  entryAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  }),\n  exitAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkRecord = new r.Struct({\n  class: r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {\n    type: 'parent'\n  })\n});\nvar MarkArray = new r.Array(MarkRecord, r.uint16);\nvar BaseRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.classCount;\n});\nvar BaseArray = new r.Array(BaseRecord, r.uint16);\nvar ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), function (t) {\n  return t.parent.parent.classCount;\n});\nvar LigatureAttach = new r.Array(ComponentRecord, r.uint16);\nvar LigatureArray = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\nvar GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Adjustment\n    1: {\n      // Single positioning value\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      value: new ValueRecord()\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat: ValueFormat,\n      valueCount: r.uint16,\n      values: new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n  2: new r.VersionedStruct(r.uint16, {\n    // Pair Adjustment Positioning\n    1: {\n      // Adjustments for glyph pairs\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      pairSetCount: r.uint16,\n      pairSets: new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n    2: {\n      // Class pair adjustment\n      coverage: new r.Pointer(r.uint16, Coverage),\n      valueFormat1: ValueFormat,\n      valueFormat2: ValueFormat,\n      classDef1: new r.Pointer(r.uint16, ClassDef),\n      classDef2: new r.Pointer(r.uint16, ClassDef),\n      class1Count: r.uint16,\n      class2Count: r.uint16,\n      classRecords: new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n  3: {\n    // Cursive Attachment Positioning\n    format: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    entryExitCount: r.uint16,\n    entryExitRecords: new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n  4: {\n    // MarkToBase Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    baseCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    baseArray: new r.Pointer(r.uint16, BaseArray)\n  },\n  5: {\n    // MarkToLigature Attachment Positioning\n    format: r.uint16,\n    markCoverage: new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    markArray: new r.Pointer(r.uint16, MarkArray),\n    ligatureArray: new r.Pointer(r.uint16, LigatureArray)\n  },\n  6: {\n    // MarkToMark Attachment Positioning\n    format: r.uint16,\n    mark1Coverage: new r.Pointer(r.uint16, Coverage),\n    mark2Coverage: new r.Pointer(r.uint16, Coverage),\n    classCount: r.uint16,\n    mark1Array: new r.Pointer(r.uint16, MarkArray),\n    mark2Array: new r.Pointer(r.uint16, BaseArray)\n  },\n  7: Context,\n  // Contextual positioning\n  8: ChainingContext,\n  // Chaining contextual positioning\n  9: {\n    // Extension Positioning\n    posFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 9\n    extension: new r.Pointer(r.uint32, undefined)\n  }\n}); // Fix circular reference\n\nGPOSLookup.versions[9].extension.type = GPOSLookup;\nvar GPOS = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n}); // export GPOSLookup for JSTF table\n\nvar Sequence = new r.Array(r.uint16, r.uint16);\nvar AlternateSet = Sequence;\nvar Ligature = new r.Struct({\n  glyph: r.uint16,\n  compCount: r.uint16,\n  components: new r.Array(r.uint16, function (t) {\n    return t.compCount - 1;\n  })\n});\nvar LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\nvar GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {\n    // Single Substitution\n    1: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID: r.int16\n    },\n    2: {\n      coverage: new r.Pointer(r.uint16, Coverage),\n      glyphCount: r.uint16,\n      substitute: new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n  2: {\n    // Multiple Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    sequences: new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n  3: {\n    // Alternate Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    alternateSet: new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n  4: {\n    // Ligature Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    count: r.uint16,\n    ligatureSets: new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n  5: Context,\n  // Contextual Substitution\n  6: ChainingContext,\n  // Chaining Contextual Substitution\n  7: {\n    // Extension Substitution\n    substFormat: r.uint16,\n    lookupType: r.uint16,\n    // cannot also be 7\n    extension: new r.Pointer(r.uint32, undefined)\n  },\n  8: {\n    // Reverse Chaining Contextual Single Substitution\n    substFormat: r.uint16,\n    coverage: new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount: r.uint16,\n    lookaheadCoverage: new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount: r.uint16,\n    substitutes: new r.Array(r.uint16, 'glyphCount')\n  }\n}); // Fix circular reference\n\nGSUBLookup.versions[7].extension.type = GSUBLookup;\nvar GSUB = new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList: new r.Pointer(r.uint16, ScriptList),\n    featureList: new r.Pointer(r.uint16, FeatureList),\n    lookupList: new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\nvar JstfGSUBModList = new r.Array(r.uint16, r.uint16);\nvar JstfPriority = new r.Struct({\n  shrinkageEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS: new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax: new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\nvar JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\nvar JstfLangSysRecord = new r.Struct({\n  tag: new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\nvar JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)),\n  // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount: r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\nvar JstfScriptRecord = new r.Struct({\n  tag: new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {\n    type: 'parent'\n  })\n});\nvar JSTF = new r.Struct({\n  version: r.uint32,\n  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList: new r.Array(JstfScriptRecord, 'scriptCount')\n});\n\nvar VariableSizeNumber = /*#__PURE__*/function () {\n  function VariableSizeNumber(size) {\n    this._size = size;\n  }\n\n  var _proto = VariableSizeNumber.prototype;\n\n  _proto.decode = function decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  };\n\n  _proto.size = function size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  };\n\n  return VariableSizeNumber;\n}();\n\nvar MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(function (t) {\n    return ((t.parent.entryFormat & 0x0030) >> 4) + 1;\n  }),\n  outerIndex: function outerIndex(t) {\n    return t.entry >> (t.parent.entryFormat & 0x000F) + 1;\n  },\n  innerIndex: function innerIndex(t) {\n    return t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1;\n  }\n});\nvar DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\nvar HVAR = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n\nvar Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\nvar SignatureBlock = new r.Struct({\n  reserved: new r.Reserved(r.uint16, 2),\n  cbSignature: r.uint32,\n  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature: new r.Buffer('cbSignature')\n});\nvar DSIG = new r.Struct({\n  ulVersion: r.uint32,\n  // Version number of the DSIG table (0x00000001)\n  usNumSigs: r.uint16,\n  // Number of signatures in the table\n  usFlag: r.uint16,\n  // Permission flags\n  signatures: new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n\nvar GaspRange = new r.Struct({\n  rangeMaxPPEM: r.uint16,\n  // Upper limit of range, in ppem\n  rangeGaspBehavior: new r.Bitfield(r.uint16, [// Flags describing desired rasterizer behavior\n  'grayscale', 'gridfit', 'symmetricSmoothing', 'symmetricGridfit' // only in version 1, for ClearType\n  ])\n});\nvar gasp = new r.Struct({\n  version: r.uint16,\n  // set to 0\n  numRanges: r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n\n});\n\nvar DeviceRecord = new r.Struct({\n  pixelSize: r.uint8,\n  maximumWidth: r.uint8,\n  widths: new r.Array(r.uint8, function (t) {\n    return t.parent.parent.maxp.numGlyphs;\n  })\n}); // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n\nvar hdmx = new r.Struct({\n  version: r.uint16,\n  numRecords: r.int16,\n  sizeDeviceRecord: r.int32,\n  records: new r.Array(DeviceRecord, 'numRecords')\n});\n\nvar KernPair = new r.Struct({\n  left: r.uint16,\n  right: r.uint16,\n  value: r.int16\n});\nvar ClassTable$1 = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: function max(t) {\n    return t.offsets.length && Math.max.apply(Math, t.offsets);\n  }\n});\nvar Kern2Array = new r.Struct({\n  off: function off(t) {\n    return t._startOffset - t.parent.parent._startOffset;\n  },\n  len: function len(t) {\n    return ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2);\n  },\n  values: new r.LazyArray(r.int16, 'len')\n});\nvar KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16,\n    pairs: new r.Array(KernPair, 'nPairs')\n  },\n  2: {\n    rowWidth: r.uint16,\n    leftTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    rightTable: new r.Pointer(r.uint16, ClassTable$1, {\n      type: 'parent'\n    }),\n    array: new r.Pointer(r.uint16, Kern2Array, {\n      type: 'parent'\n    })\n  },\n  3: {\n    glyphCount: r.uint16,\n    kernValueCount: r.uint8,\n    leftClassCount: r.uint8,\n    rightClassCount: r.uint8,\n    flags: r.uint8,\n    kernValue: new r.Array(r.int16, 'kernValueCount'),\n    leftClass: new r.Array(r.uint8, 'glyphCount'),\n    rightClass: new r.Array(r.uint8, 'glyphCount'),\n    kernIndex: new r.Array(r.uint8, function (t) {\n      return t.leftClassCount * t.rightClassCount;\n    })\n  }\n});\nvar KernTable = new r.VersionedStruct('version', {\n  0: {\n    // Microsoft uses this format\n    subVersion: r.uint16,\n    // Microsoft has an extra sub-table version number\n    length: r.uint16,\n    // Length of the subtable, in bytes\n    format: r.uint8,\n    // Format of subtable\n    coverage: new r.Bitfield(r.uint8, ['horizontal', // 1 if table has horizontal data, 0 if vertical\n    'minimum', // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n    'crossStream', // If set to 1, kerning is perpendicular to the flow of the text\n    'override' // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  },\n  1: {\n    // Apple uses this format\n    length: r.uint32,\n    coverage: new r.Bitfield(r.uint8, [null, null, null, null, null, 'variation', // Set if table has variation kerning values\n    'crossStream', // Set if table has cross-stream kerning values\n    'vertical' // Set if table has vertical kerning values\n    ]),\n    format: r.uint8,\n    tupleIndex: r.uint16,\n    subtable: KernSubtable,\n    padding: new r.Reserved(r.uint8, function (t) {\n      return t.length - t._currentOffset;\n    })\n  }\n});\nvar kern = new r.VersionedStruct(r.uint16, {\n  0: {\n    // Microsoft Version\n    nTables: r.uint16,\n    tables: new r.Array(KernTable, 'nTables')\n  },\n  1: {\n    // Apple Version\n    reserved: new r.Reserved(r.uint16),\n    // the other half of the version number\n    nTables: r.uint32,\n    tables: new r.Array(KernTable, 'nTables')\n  }\n});\n\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n\nvar LTSH = new r.Struct({\n  version: r.uint16,\n  numGlyphs: r.uint16,\n  yPels: new r.Array(r.uint8, 'numGlyphs')\n});\n\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n\nvar PCLT = new r.Struct({\n  version: r.uint16,\n  fontNumber: r.uint32,\n  pitch: r.uint16,\n  xHeight: r.uint16,\n  style: r.uint16,\n  typeFamily: r.uint16,\n  capHeight: r.uint16,\n  symbolSet: r.uint16,\n  typeface: new r.String(16),\n  characterComplement: new r.String(8),\n  fileName: new r.String(6),\n  strokeWeight: new r.String(1),\n  widthType: new r.String(1),\n  serifStyle: r.uint8,\n  reserved: new r.Reserved(r.uint8)\n});\n\n// sizes. This is needed in order to match font metrics on Windows.\n\nvar Ratio = new r.Struct({\n  bCharSet: r.uint8,\n  // Character set\n  xRatio: r.uint8,\n  // Value to use for x-Ratio\n  yStartRatio: r.uint8,\n  // Starting y-Ratio value\n  yEndRatio: r.uint8 // Ending y-Ratio value\n\n});\nvar vTable = new r.Struct({\n  yPelHeight: r.uint16,\n  // yPelHeight to which values apply\n  yMax: r.int16,\n  // Maximum value (in pels) for this yPelHeight\n  yMin: r.int16 // Minimum value (in pels) for this yPelHeight\n\n});\nvar VdmxGroup = new r.Struct({\n  recs: r.uint16,\n  // Number of height records in this group\n  startsz: r.uint8,\n  // Starting yPelHeight\n  endsz: r.uint8,\n  // Ending yPelHeight\n  entries: new r.Array(vTable, 'recs') // The VDMX records\n\n});\nvar VDMX = new r.Struct({\n  version: r.uint16,\n  // Version number (0 or 1)\n  numRecs: r.uint16,\n  // Number of VDMX groups present\n  numRatios: r.uint16,\n  // Number of aspect ratio groupings\n  ratioRanges: new r.Array(Ratio, 'numRatios'),\n  // Ratio ranges\n  offsets: new r.Array(r.uint16, 'numRatios'),\n  // Offset to the VDMX group for this ratio range\n  groups: new r.Array(VdmxGroup, 'numRecs') // The actual VDMX groupings\n\n});\n\nvar vhea = new r.Struct({\n  version: r.uint16,\n  // Version number of the Vertical Header Table\n  ascent: r.int16,\n  // The vertical typographic ascender for this font\n  descent: r.int16,\n  // The vertical typographic descender for this font\n  lineGap: r.int16,\n  // The vertical typographic line gap for this font\n  advanceHeightMax: r.int16,\n  // The maximum advance height measurement found in the font\n  minTopSideBearing: r.int16,\n  // The minimum top side bearing measurement found in the font\n  minBottomSideBearing: r.int16,\n  // The minimum bottom side bearing measurement found in the font\n  yMaxExtent: r.int16,\n  caretSlopeRise: r.int16,\n  // Caret slope (rise/run)\n  caretSlopeRun: r.int16,\n  caretOffset: r.int16,\n  // Set value equal to 0 for nonslanted fonts\n  reserved: new r.Reserved(r.int16, 4),\n  metricDataFormat: r.int16,\n  // Set to 0\n  numberOfMetrics: r.uint16 // Number of advance heights in the Vertical Metrics table\n\n});\n\nvar VmtxEntry = new r.Struct({\n  advance: r.uint16,\n  // The advance height of the glyph\n  bearing: r.int16 // The top sidebearing of the glyph\n\n}); // Vertical Metrics Table\n\nvar vmtx = new r.Struct({\n  metrics: new r.LazyArray(VmtxEntry, function (t) {\n    return t.parent.vhea.numberOfMetrics;\n  }),\n  bearings: new r.LazyArray(r.int16, function (t) {\n    return t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics;\n  })\n});\n\nvar shortFrac$1 = new r.Fixed(16, 'BE', 14);\nvar Correspondence = new r.Struct({\n  fromCoord: shortFrac$1,\n  toCoord: shortFrac$1\n});\nvar Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\nvar avar = new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n\nvar UnboundedArrayAccessor = /*#__PURE__*/function () {\n  function UnboundedArrayAccessor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  var _proto = UnboundedArrayAccessor.prototype;\n\n  _proto.getItem = function getItem(index) {\n    if (this._items[index] == null) {\n      var pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  };\n\n  _proto.inspect = function inspect() {\n    return \"[UnboundedArray \" + this.type.constructor.name + \"]\";\n  };\n\n  return UnboundedArrayAccessor;\n}();\n\nvar UnboundedArray = /*#__PURE__*/function (_r$Array) {\n  _inheritsLoose(UnboundedArray, _r$Array);\n\n  function UnboundedArray(type) {\n    return _r$Array.call(this, type, 0) || this;\n  }\n\n  var _proto2 = UnboundedArray.prototype;\n\n  _proto2.decode = function decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  };\n\n  return UnboundedArray;\n}(r.Array);\nvar LookupTable = function LookupTable(ValueType) {\n  if (ValueType === void 0) {\n    ValueType = r.uint16;\n  }\n\n  // Helper class that makes internal structures invisible to pointers\n  var Shadow = /*#__PURE__*/function () {\n    function Shadow(type) {\n      this.type = type;\n    }\n\n    var _proto3 = Shadow.prototype;\n\n    _proto3.decode = function decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    };\n\n    _proto3.size = function size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    };\n\n    _proto3.encode = function encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    };\n\n    return Shadow;\n  }();\n\n  ValueType = new Shadow(ValueType);\n  var BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n  var LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n  var LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, function (t) {\n      return t.lastGlyph - t.firstGlyph + 1;\n    }), {\n      type: 'parent'\n    })\n  });\n  var LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, function (t) {\n        return t.binarySearchHeader.nUnits;\n      })\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\nfunction StateTable(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint16, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n  return StateHeader;\n} // This is the old version of the StateTable structure\n\nfunction StateTable1(entryData, lookupType) {\n  if (entryData === void 0) {\n    entryData = {};\n  }\n\n  if (lookupType === void 0) {\n    lookupType = r.uint16;\n  }\n\n  var ClassLookupTable = new r.Struct({\n    version: function version() {\n      return 8;\n    },\n    // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n  var entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: function newState(t) {\n      return (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses;\n    },\n    flags: r.uint16\n  }, entryData);\n  var Entry = new r.Struct(entry);\n  var StateArray = new UnboundedArray(new r.Array(r.uint8, function (t) {\n    return t.nClasses;\n  }));\n  var StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n  return StateHeader1;\n}\n\nvar BslnSubtable = new r.VersionedStruct('format', {\n  0: {\n    // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n  1: {\n    // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n  2: {\n    // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n  3: {\n    // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\nvar bsln = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n\nvar Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), {\n    type: 'parent'\n  }),\n  featureFlags: new r.Bitfield(r.uint8, [null, null, null, null, null, null, 'hasDefault', 'exclusive']),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameIndex];\n  }\n});\nvar feat = new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n\nvar Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  }\n});\nvar Instance = new r.Struct({\n  nameID: r.uint16,\n  name: function name(t) {\n    return t.parent.parent.name.records.fontFeatures[t.nameID];\n  },\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, function (t) {\n    return t.parent.axisCount;\n  }),\n  postscriptNameID: new r.Optional(r.uint16, function (t) {\n    return t.parent.instanceSize - t._currentOffset > 0;\n  })\n});\nvar fvar = new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n\nvar shortFrac = new r.Fixed(16, 'BE', 14);\n\nvar Offset = /*#__PURE__*/function () {\n  function Offset() {}\n\n  Offset.decode = function decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  };\n\n  return Offset;\n}();\n\nvar gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', {\n    relativeTo: 'offsetToData',\n    allowNull: false\n  }), function (t) {\n    return t.glyphCount + 1;\n  })\n});\n\nvar ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1()\n});\nvar WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\nvar WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\nvar ActionData = new r.VersionedStruct('actionType', {\n  0: {\n    // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n  1: {\n    // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n  2: {\n    // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n  3: {},\n  // Stretch glyph action (no data, not supported by CoreText)\n  4: {\n    // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n  5: {\n    // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\nvar Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.actionLength - t._currentOffset;\n  })\n});\nvar PostcompensationAction = new r.Array(Action, r.uint32);\nvar PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\nvar JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, {\n    type: 'parent'\n  }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, {\n    type: 'parent'\n  }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, {\n    type: 'parent',\n    relativeTo: 'wdcOffset'\n  }))\n});\nvar just = new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n\nvar LigatureData = {\n  action: r.uint16\n};\nvar ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\nvar InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\nvar SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable()))\n});\nvar SubtableData = new r.VersionedStruct('type', {\n  0: {\n    // Indic Rearrangement Subtable\n    stateTable: new StateTable()\n  },\n  1: {\n    // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n  2: {\n    // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n  4: {\n    // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable()\n  },\n  5: {\n    // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\nvar Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, function (t) {\n    return t.length - t._currentOffset;\n  })\n});\nvar FeatureEntry = new r.Struct({\n  featureType: r.uint16,\n  featureSetting: r.uint16,\n  enableFlags: r.uint32,\n  disableFlags: r.uint32\n});\nvar MorxChain = new r.Struct({\n  defaultFlags: r.uint32,\n  chainLength: r.uint32,\n  nFeatureEntries: r.uint32,\n  nSubtables: r.uint32,\n  features: new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables: new r.Array(Subtable, 'nSubtables')\n});\nvar morx = new r.Struct({\n  version: r.uint16,\n  unused: new r.Reserved(r.uint16),\n  nChains: r.uint32,\n  chains: new r.Array(MorxChain, 'nChains')\n});\n\nvar OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\nvar opbd = new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n\nvar tables = {};\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = NameTable;\ntables['OS/2'] = OS2;\ntables.post = post; // TrueType Outlines\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf; // PostScript Outlines\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG; // Bitmap Glyphs\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL; // Advanced OpenType Tables\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF; // OpenType variations tables\ntables.HVAR = HVAR; // Other OpenType Tables\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx; // Apple Advanced Typography Tables\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n\nfunction _createForOfIteratorHelperLoose$p(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$p(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$p(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$p(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$p(o, minLen); }\n\nfunction _arrayLikeToArray$p(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar TableEntry = new r.Struct({\n  tag: new r.String(4),\n  checkSum: r.uint32,\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  length: r.uint32\n});\nvar Directory = new r.Struct({\n  tag: new r.String(4),\n  numTables: r.uint16,\n  searchRange: r.uint16,\n  entrySelector: r.uint16,\n  rangeShift: r.uint16,\n  tables: new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$p(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function (stream) {\n  var tables$1 = [];\n\n  for (var tag in this.tables) {\n    var table = this.tables[tag];\n\n    if (table) {\n      tables$1.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new r.VoidPointer(tables[tag], table),\n        length: tables[tag].size(table)\n      });\n    }\n  }\n\n  this.tag = 'true';\n  this.numTables = tables$1.length;\n  this.tables = tables$1;\n  var maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  var maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nfunction binarySearch(arr, cmp) {\n  var min = 0;\n  var max = arr.length - 1;\n\n  while (min <= max) {\n    var mid = min + max >> 1;\n    var res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\nfunction range(index, end) {\n  var range = [];\n\n  while (index < end) {\n    range.push(index++);\n  }\n\n  return range;\n}\n\nvar _class$4;\n\nfunction _createForOfIteratorHelperLoose$o(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$o(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$o(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$o(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$o(o, minLen); }\n\nfunction _arrayLikeToArray$o(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\ntry {\n  var iconv = require('iconv-lite');\n} catch (err) {}\n\nvar CmapProcessor = (_class$4 = /*#__PURE__*/function () {\n  function CmapProcessor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, and iconv-lite is installed,\n    // take the first table with a supported encoding.\n\n    if (!this.cmap && iconv) {\n      for (var _iterator = _createForOfIteratorHelperLoose$o(cmapTable.tables), _step; !(_step = _iterator()).done;) {\n        var cmap = _step.value;\n        var encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n\n        if (iconv.encodingExists(encoding)) {\n          this.cmap = cmap.table;\n          this.encoding = encoding;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  var _proto = CmapProcessor.prototype;\n\n  _proto.findSubtable = function findSubtable(cmapTable, pairs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose$o(pairs), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          platformID = _step2$value[0],\n          encodingID = _step2$value[1];\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$o(cmapTable.tables), _step3; !(_step3 = _iterator3()).done;) {\n        var cmap = _step3.value;\n\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.lookup = function lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      var buf = iconv.encode(String.fromCodePoint(codepoint), this.encoding);\n      codepoint = 0;\n\n      for (var i = 0; i < buf.length; i++) {\n        codepoint = codepoint << 8 | buf[i];\n      } // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n\n    } else if (variationSelector) {\n      var gid = this.getVariationSelector(codepoint, variationSelector);\n\n      if (gid) {\n        return gid;\n      }\n    }\n\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          var min = 0;\n          var max = cmap.segCount - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n\n            if (codepoint < cmap.startCode.get(mid)) {\n              max = mid - 1;\n            } else if (codepoint > cmap.endCode.get(mid)) {\n              min = mid + 1;\n            } else {\n              var rangeOffset = cmap.idRangeOffset.get(mid);\n\n              var _gid = void 0;\n\n              if (rangeOffset === 0) {\n                _gid = codepoint + cmap.idDelta.get(mid);\n              } else {\n                var index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                _gid = cmap.glyphIndexArray.get(index) || 0;\n\n                if (_gid !== 0) {\n                  _gid += cmap.idDelta.get(mid);\n                }\n              }\n\n              return _gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          var _min = 0;\n\n          var _max = cmap.nGroups - 1;\n\n          while (_min <= _max) {\n            var _mid = _min + _max >> 1;\n\n            var group = cmap.groups.get(_mid);\n\n            if (codepoint < group.startCharCode) {\n              _max = _mid - 1;\n            } else if (codepoint > group.endCharCode) {\n              _min = _mid + 1;\n            } else {\n              if (cmap.version === 12) {\n                return group.glyphID + (codepoint - group.startCharCode);\n              } else {\n                return group.glyphID;\n              }\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.getVariationSelector = function getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    var selectors = this.uvs.varSelectors.toArray();\n    var i = binarySearch(selectors, function (x) {\n      return variationSelector - x.varSelector;\n    });\n    var sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, function (x) {\n        return codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0;\n      });\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, function (x) {\n        return codepoint - x.unicodeValue;\n      });\n\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  };\n\n  _proto.getCharacterSet = function getCharacterSet() {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          var res = [];\n          var endCodes = cmap.endCode.toArray();\n\n          for (var i = 0; i < endCodes.length; i++) {\n            var tail = endCodes[i] + 1;\n            var start = cmap.startCode.get(i);\n            res.push.apply(res, range(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          var _res = [];\n\n          for (var _iterator4 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step4; !(_step4 = _iterator4()).done;) {\n            var group = _step4.value;\n\n            _res.push.apply(_res, range(group.startCharCode, group.endCharCode + 1));\n          }\n\n          return _res;\n        }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  _proto.codePointsForGlyph = function codePointsForGlyph(gid) {\n    var cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          var res = [];\n\n          for (var i = 0; i < 256; i++) {\n            if (cmap.codeMap.get(i) === gid) {\n              res.push(i);\n            }\n          }\n\n          return res;\n        }\n\n      case 4:\n        {\n          var _res2 = [];\n\n          for (var _i = 0; _i < cmap.segCount; _i++) {\n            var end = cmap.endCode.get(_i);\n            var start = cmap.startCode.get(_i);\n            var rangeOffset = cmap.idRangeOffset.get(_i);\n            var delta = cmap.idDelta.get(_i);\n\n            for (var c = start; c <= end; c++) {\n              var g = 0;\n\n              if (rangeOffset === 0) {\n                g = c + delta;\n              } else {\n                var index = rangeOffset / 2 + (c - start) - (cmap.segCount - _i);\n                g = cmap.glyphIndexArray.get(index) || 0;\n\n                if (g !== 0) {\n                  g += delta;\n                }\n              }\n\n              if (g === gid) {\n                _res2.push(c);\n              }\n            }\n          }\n\n          return _res2;\n        }\n\n      case 12:\n        {\n          var _res3 = [];\n\n          for (var _iterator5 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step5; !(_step5 = _iterator5()).done;) {\n            var group = _step5.value;\n\n            if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n              _res3.push(group.startCharCode + (gid - group.glyphID));\n            }\n          }\n\n          return _res3;\n        }\n\n      case 13:\n        {\n          var _res4 = [];\n\n          for (var _iterator6 = _createForOfIteratorHelperLoose$o(cmap.groups.toArray()), _step6; !(_step6 = _iterator6()).done;) {\n            var _group = _step6.value;\n\n            if (gid === _group.glyphID) {\n              _res4.push.apply(_res4, range(_group.startCharCode, _group.endCharCode + 1));\n            }\n          }\n\n          return _res4;\n        }\n\n      default:\n        throw new Error(\"Unknown cmap format \" + cmap.version);\n    }\n  };\n\n  return CmapProcessor;\n}(), (_applyDecoratedDescriptor(_class$4.prototype, \"getCharacterSet\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"getCharacterSet\"), _class$4.prototype), _applyDecoratedDescriptor(_class$4.prototype, \"codePointsForGlyph\", [cache], Object.getOwnPropertyDescriptor(_class$4.prototype, \"codePointsForGlyph\"), _class$4.prototype)), _class$4);\n\nfunction _createForOfIteratorHelperLoose$n(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$n(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$n(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$n(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$n(o, minLen); }\n\nfunction _arrayLikeToArray$n(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar KernProcessor = /*#__PURE__*/function () {\n  function KernProcessor(font) {\n    this.kern = font.kern;\n  }\n\n  var _proto = KernProcessor.prototype;\n\n  _proto.process = function process(glyphs, positions) {\n    for (var glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      var left = glyphs[glyphIndex].id;\n      var right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  };\n\n  _proto.getKerning = function getKerning(left, right) {\n    var res = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose$n(this.kern.tables), _step; !(_step = _iterator()).done;) {\n      var table = _step.value;\n\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning table version \" + table.version);\n      }\n\n      var val = 0;\n      var s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          var pairIdx = binarySearch(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          var leftOffset = 0,\n              rightOffset = 0;\n\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          var index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(\"Unsupported kerning sub-table format \" + table.format);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  };\n\n  return KernProcessor;\n}();\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\n\nvar UnicodeLayoutEngine = /*#__PURE__*/function () {\n  function UnicodeLayoutEngine(font) {\n    this.font = font;\n  }\n\n  var _proto = UnicodeLayoutEngine.prototype;\n\n  _proto.positionGlyphs = function positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    var clusterStart = 0;\n    var clusterEnd = 0;\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.isMark) {\n        // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  };\n\n  _proto.positionCluster = function positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    var base = glyphs[clusterStart];\n    var baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    }\n\n    var xOffset = -positions[clusterStart].xAdvance;\n    var yOffset = 0;\n    var yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (var index = clusterStart + 1; index <= clusterEnd; index++) {\n      var mark = glyphs[index];\n      var markBox = mark.cbox;\n      var position = positions[index];\n      var combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  };\n\n  _proto.getCombiningClass = function getCombiningClass(codePoint) {\n    var combiningClass = unicode.getCombiningClass(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) {\n        // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case 'CCC10': // sheva\n\n      case 'CCC11': // hataf segol\n\n      case 'CCC12': // hataf patah\n\n      case 'CCC13': // hataf qamats\n\n      case 'CCC14': // hiriq\n\n      case 'CCC15': // tsere\n\n      case 'CCC16': // segol\n\n      case 'CCC17': // patah\n\n      case 'CCC18': // qamats\n\n      case 'CCC20': // qubuts\n\n      case 'CCC22':\n        // meteg\n        return 'Below';\n\n      case 'CCC23':\n        // rafe\n        return 'Attached_Above';\n\n      case 'CCC24':\n        // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n\n      case 'CCC19':\n        // holam\n        return 'Above_Left';\n\n      case 'CCC26':\n        // point varika\n        return 'Above';\n\n      case 'CCC21':\n        // dagesh\n        break;\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n\n      case 'CCC28': // dammatan\n\n      case 'CCC30': // fatha\n\n      case 'CCC31': // damma\n\n      case 'CCC33': // shadda\n\n      case 'CCC34': // sukun\n\n      case 'CCC35': // superscript alef\n\n      case 'CCC36':\n        // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n\n      case 'CCC32':\n        // kasra\n        return 'Below';\n      // Thai\n\n      case 'CCC103':\n        // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107':\n        // mai\n        return 'Above_Right';\n      // Lao\n\n      case 'CCC118':\n        // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122':\n        // mai\n        return 'Above';\n      // Tibetan\n\n      case 'CCC129': // sign aa\n\n      case 'CCC132':\n        // sign u\n        return 'Below';\n\n      case 'CCC130':\n        // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  };\n\n  return UnicodeLayoutEngine;\n}();\n\n/**\n * Represents a glyph bounding box\n */\nvar BBox = /*#__PURE__*/function () {\n  function BBox(minX, minY, maxX, maxY) {\n    if (minX === void 0) {\n      minX = Infinity;\n    }\n\n    if (minY === void 0) {\n      minY = Infinity;\n    }\n\n    if (maxX === void 0) {\n      maxX = -Infinity;\n    }\n\n    if (maxY === void 0) {\n      maxY = -Infinity;\n    }\n\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.minY = minY;\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n\n    this.maxX = maxX;\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n\n    this.maxY = maxY;\n  }\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n\n\n  var _proto = BBox.prototype;\n\n  _proto.addPoint = function addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  };\n\n  _proto.copy = function copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  };\n\n  _createClass(BBox, [{\n    key: \"width\",\n    get: function get() {\n      return this.maxX - this.minX;\n    }\n    /**\n     * The height of the bounding box\n     * @type {number}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.maxY - this.minY;\n    }\n  }]);\n\n  return BBox;\n}();\n\nfunction _createForOfIteratorHelperLoose$m(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$m(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$m(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$m(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$m(o, minLen); }\n\nfunction _arrayLikeToArray$m(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\nvar UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\nvar OPENTYPE_SCRIPTS = {};\n\nfor (var script in UNICODE_SCRIPTS) {\n  var tag = UNICODE_SCRIPTS[script];\n\n  if (Array.isArray(tag)) {\n    for (var _iterator = _createForOfIteratorHelperLoose$m(tag), _step; !(_step = _iterator()).done;) {\n      var t = _step.value;\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\nfunction fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\nfunction forString(string) {\n  var len = string.length;\n  var idx = 0;\n\n  while (idx < len) {\n    var code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      var next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    var _script = unicode.getScript(code);\n\n    if (_script !== 'Common' && _script !== 'Inherited' && _script !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\nfunction forCodePoints(codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    var codePoint = codePoints[i];\n\n    var _script2 = unicode.getScript(codePoint);\n\n    if (_script2 !== 'Common' && _script2 !== 'Inherited' && _script2 !== 'Unknown') {\n      return UNICODE_SCRIPTS[_script2];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\nvar RTL = {\n  arab: true,\n  // Arabic\n  hebr: true,\n  // Hebrew\n  syrc: true,\n  // Syriac\n  thaa: true,\n  // Thaana\n  cprt: true,\n  // Cypriot Syllabary\n  khar: true,\n  // Kharosthi\n  phnx: true,\n  // Phoenician\n  'nko ': true,\n  // N'Ko\n  lydi: true,\n  // Lydian\n  avst: true,\n  // Avestan\n  armi: true,\n  // Imperial Aramaic\n  phli: true,\n  // Inscriptional Pahlavi\n  prti: true,\n  // Inscriptional Parthian\n  sarb: true,\n  // Old South Arabian\n  orkh: true,\n  // Old Turkic, Orkhon Runic\n  samr: true,\n  // Samaritan\n  mand: true,\n  // Mandaic, Mandaean\n  merc: true,\n  // Meroitic Cursive\n  mero: true,\n  // Meroitic Hieroglyphs\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  // Manichaean\n  mend: true,\n  // Mende Kikakui\n  nbat: true,\n  // Nabataean\n  narb: true,\n  // Old North Arabian\n  palm: true,\n  // Palmyrene\n  phlp: true // Psalter Pahlavi\n\n};\nfunction direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\nfunction _createForOfIteratorHelperLoose$l(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$l(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$l(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$l(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$l(o, minLen); }\n\nfunction _arrayLikeToArray$l(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\n\nvar GlyphRun = /*#__PURE__*/function () {\n  function GlyphRun(glyphs, features, script, language, direction$1) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n\n    this.positions = null;\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n\n    this.script = script;\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n\n    this.language = language || null;\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n\n    this.direction = direction$1 || direction(script);\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) {\n      for (var _iterator = _createForOfIteratorHelperLoose$l(features), _step; !(_step = _iterator()).done;) {\n        var tag = _step.value;\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n\n\n  _createClass(GlyphRun, [{\n    key: \"advanceWidth\",\n    get: function get() {\n      var width = 0;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$l(this.positions), _step2; !(_step2 = _iterator2()).done;) {\n        var position = _step2.value;\n        width += position.xAdvance;\n      }\n\n      return width;\n    }\n    /**\n     * The total advance height of the run.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      var height = 0;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$l(this.positions), _step3; !(_step3 = _iterator3()).done;) {\n        var position = _step3.value;\n        height += position.yAdvance;\n      }\n\n      return height;\n    }\n    /**\n     * The bounding box containing all glyphs in the run.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      var bbox = new BBox();\n      var x = 0;\n      var y = 0;\n\n      for (var index = 0; index < this.glyphs.length; index++) {\n        var glyph = this.glyphs[index];\n        var p = this.positions[index];\n        var b = glyph.bbox;\n        bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n        bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n        x += p.xAdvance;\n        y += p.yAdvance;\n      }\n\n      return bbox;\n    }\n  }]);\n\n  return GlyphRun;\n}();\n\n/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nvar GlyphPosition = function GlyphPosition(xAdvance, yAdvance, xOffset, yOffset) {\n  if (xAdvance === void 0) {\n    xAdvance = 0;\n  }\n\n  if (yAdvance === void 0) {\n    yAdvance = 0;\n  }\n\n  if (xOffset === void 0) {\n    xOffset = 0;\n  }\n\n  if (yOffset === void 0) {\n    yOffset = 0;\n  }\n\n  /**\n   * The amount to move the virtual pen in the X direction after rendering this glyph.\n   * @type {number}\n   */\n  this.xAdvance = xAdvance;\n  /**\n   * The amount to move the virtual pen in the Y direction after rendering this glyph.\n   * @type {number}\n   */\n\n  this.yAdvance = yAdvance;\n  /**\n   * The offset from the pen position in the X direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.xOffset = xOffset;\n  /**\n   * The offset from the pen position in the Y direction at which to render this glyph.\n   * @type {number}\n   */\n\n  this.yOffset = yOffset;\n};\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nvar features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nvar feature = function feature(name, selector) {\n  return [features[name].code, features[name][selector]];\n};\n\nvar OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'),\n  // ??\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'),\n  // ??\n  numr: feature('fractions', 'diagonalFractions'),\n  // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'),\n  // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'),\n  // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'),\n  // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n  init: feature('smartSwash', 'wordInitialSwashes'),\n  // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'),\n  // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'),\n  // ??\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'),\n  // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: feature('contextualAlternates', 'contextualAlternates'),\n  // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'),\n  // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'),\n  // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'),\n  // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'),\n  //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (var i = 1; i <= 99; i++) {\n  OTMapping[\"cv\" + (\"00\" + i).slice(-2)] = [features.characterAlternatives.code, i];\n} // create inverse mapping\n\n\nvar AATMapping = {};\n\nfor (var ot in OTMapping) {\n  var aat = OTMapping[ot];\n\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n} // Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\n\n\nfunction mapOTToAAT(features) {\n  var res = {};\n\n  for (var k in features) {\n    var r = void 0;\n\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\nfunction mapFeatureStrings(f) {\n  var type = f[0],\n      setting = f[1];\n\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n} // Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\n\n\nfunction mapAATToOT(features) {\n  var res = {};\n\n  if (Array.isArray(features)) {\n    for (var k = 0; k < features.length; k++) {\n      var r = void 0;\n      var f = mapFeatureStrings(features[k]);\n\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n  } else if (typeof features === 'object') {\n    for (var type in features) {\n      var _feature = features[type];\n\n      for (var setting in _feature) {\n        var _r = void 0;\n\n        var _f = mapFeatureStrings([type, setting]);\n\n        if (_feature[setting] && (_r = AATMapping[_f[0]] && AATMapping[_f[0]][_f[1]])) {\n          res[_r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n\nvar _class$3;\n\nfunction _createForOfIteratorHelperLoose$k(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$k(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$k(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$k(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$k(o, minLen); }\n\nfunction _arrayLikeToArray$k(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar AATLookupTable = (_class$3 = /*#__PURE__*/function () {\n  function AATLookupTable(table) {\n    this.table = table;\n  }\n\n  var _proto = AATLookupTable.prototype;\n\n  _proto.lookup = function lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n\n      case 4:\n        {\n          var min = 0;\n          var max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.firstGlyph) {\n              max = mid - 1;\n            } else if (glyph > seg.lastGlyph) {\n              min = mid + 1;\n            } else {\n              if (this.table.version === 2) {\n                return seg.value;\n              } else {\n                return seg.values[glyph - seg.firstGlyph];\n              }\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          // lookup single\n          var _min = 0;\n\n          var _max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (_min <= _max) {\n            var mid = _min + _max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) {\n              return null;\n            }\n\n            if (glyph < seg.glyph) {\n              _max = mid - 1;\n            } else if (glyph > seg.glyph) {\n              _min = mid + 1;\n            } else {\n              return seg.value;\n            }\n          }\n\n          return null;\n        }\n\n      case 8:\n        // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n  };\n\n  _proto.glyphsForValue = function glyphsForValue(classValue) {\n    var res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n\n      case 4:\n        {\n          for (var _iterator = _createForOfIteratorHelperLoose$k(this.table.segments), _step; !(_step = _iterator()).done;) {\n            var segment = _step.value;\n\n            if (this.table.version === 2 && segment.value === classValue) {\n              res.push.apply(res, range(segment.firstGlyph, segment.lastGlyph + 1));\n            } else {\n              for (var index = 0; index < segment.values.length; index++) {\n                if (segment.values[index] === classValue) {\n                  res.push(segment.firstGlyph + index);\n                }\n              }\n            }\n          }\n\n          break;\n        }\n\n      case 6:\n        {\n          // lookup single\n          for (var _iterator2 = _createForOfIteratorHelperLoose$k(this.table.segments), _step2; !(_step2 = _iterator2()).done;) {\n            var _segment = _step2.value;\n\n            if (_segment.value === classValue) {\n              res.push(_segment.glyph);\n            }\n          }\n\n          break;\n        }\n\n      case 8:\n        {\n          // lookup trimmed\n          for (var i = 0; i < this.table.values.length; i++) {\n            if (this.table.values[i] === classValue) {\n              res.push(this.table.firstGlyph + i);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        throw new Error(\"Unknown lookup table format: \" + this.table.version);\n    }\n\n    return res;\n  };\n\n  return AATLookupTable;\n}(), (_applyDecoratedDescriptor(_class$3.prototype, \"glyphsForValue\", [cache], Object.getOwnPropertyDescriptor(_class$3.prototype, \"glyphsForValue\"), _class$3.prototype)), _class$3);\n\nfunction _createForOfIteratorHelperLoose$j(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$j(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$j(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$j(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$j(o, minLen); }\n\nfunction _arrayLikeToArray$j(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar START_OF_TEXT_STATE = 0;\nvar END_OF_TEXT_CLASS = 0;\nvar OUT_OF_BOUNDS_CLASS = 1;\nvar DELETED_GLYPH_CLASS = 2;\nvar DONT_ADVANCE = 0x4000;\n\nvar AATStateMachine = /*#__PURE__*/function () {\n  function AATStateMachine(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  var _proto = AATStateMachine.prototype;\n\n  _proto.process = function process(glyphs, reverse, processEntry) {\n    var currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    var index = reverse ? glyphs.length - 1 : 0;\n    var dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      var glyph = null;\n      var classCode = OUT_OF_BOUNDS_CLASS;\n      var shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n\n        if (glyph.id === 0xffff) {\n          // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      var row = this.stateTable.stateArray.getItem(currentState);\n      var entryIndex = row[classCode];\n      var entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !== DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  ;\n\n  _proto.traverse = function traverse(opts, state, visited) {\n    if (state === void 0) {\n      state = 0;\n    }\n\n    if (visited === void 0) {\n      visited = new Set();\n    }\n\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n    var _this$stateTable = this.stateTable,\n        nClasses = _this$stateTable.nClasses,\n        stateArray = _this$stateTable.stateArray,\n        entryTable = _this$stateTable.entryTable;\n    var row = stateArray.getItem(state); // Skip predefined classes\n\n    for (var classCode = 4; classCode < nClasses; classCode++) {\n      var entryIndex = row[classCode];\n      var entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (var _iterator = _createForOfIteratorHelperLoose$j(this.lookupTable.glyphsForValue(classCode)), _step; !(_step = _iterator()).done;) {\n        var glyph = _step.value;\n\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  };\n\n  return AATStateMachine;\n}();\n\nvar _class$2;\n\nfunction _createForOfIteratorHelperLoose$i(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$i(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$i(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$i(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$i(o, minLen); }\n\nfunction _arrayLikeToArray$i(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar MARK_FIRST = 0x8000;\nvar MARK_LAST = 0x2000;\nvar VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nvar SET_MARK = 0x8000; // ligature entry flags\n\nvar SET_COMPONENT = 0x8000;\nvar PERFORM_ACTION = 0x2000; // ligature action masks\n\nvar LAST_MASK = 0x80000000;\nvar STORE_MASK = 0x40000000;\nvar OFFSET_MASK = 0x3FFFFFFF;\nvar REVERSE_DIRECTION = 0x400000;\nvar CURRENT_INSERT_BEFORE = 0x0800;\nvar MARKED_INSERT_BEFORE = 0x0400;\nvar CURRENT_INSERT_COUNT = 0x03E0;\nvar MARKED_INSERT_COUNT = 0x001F;\nvar AATMorxProcessor = (_class$2 = /*#__PURE__*/function () {\n  function AATMorxProcessor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  } // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n\n\n  var _proto = AATMorxProcessor.prototype;\n\n  _proto.process = function process(glyphs, features) {\n    if (features === void 0) {\n      features = {};\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose$i(this.morx.chains), _step; !(_step = _iterator()).done;) {\n      var chain = _step.value;\n      var flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$i(chain.features), _step2; !(_step2 = _iterator2()).done;) {\n        var feature = _step2.value;\n        var f = void 0;\n\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$i(chain.subtables), _step3; !(_step3 = _iterator3()).done;) {\n        var subtable = _step3.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    } // remove deleted glyphs\n\n\n    var index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  };\n\n  _proto.processSubtable = function processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  };\n\n  _proto.getStateMachine = function getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  };\n\n  _proto.getProcessor = function getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error(\"Invalid morx subtable type: \" + this.subtable.type);\n    }\n  };\n\n  _proto.processIndicRearragement = function processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  };\n\n  _proto.processContextualSubstitution = function processContextualSubstitution(glyph, entry, index) {\n    var subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      var lookup = subsitutions.getItem(entry.markIndex);\n      var lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      var _lookup = subsitutions.getItem(entry.currentIndex);\n\n      var _lookupTable = new AATLookupTable(_lookup);\n\n      glyph = this.glyphs[index];\n\n      var gid = _lookupTable.lookup(glyph.id);\n\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  };\n\n  _proto.processLigature = function processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      var _this$ligatureStack;\n\n      var actions = this.subtable.table.ligatureActions;\n      var components = this.subtable.table.components;\n      var ligatureList = this.subtable.table.ligatureList;\n      var actionIndex = entry.action;\n      var last = false;\n      var ligatureIndex = 0;\n      var codePoints = [];\n      var ligatureGlyphs = [];\n\n      while (!last) {\n        var _codePoints;\n\n        var componentGlyph = this.ligatureStack.pop();\n\n        (_codePoints = codePoints).unshift.apply(_codePoints, this.glyphs[componentGlyph].codePoints);\n\n        var action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        var store = !!(action & STORE_MASK);\n        var offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        var component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          var ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      } // Put ligature glyph indexes back on the stack\n\n\n      (_this$ligatureStack = this.ligatureStack).push.apply(_this$ligatureStack, ligatureGlyphs);\n    }\n  };\n\n  _proto.processNoncontextualSubstitutions = function processNoncontextualSubstitutions(subtable, glyphs, index) {\n    var lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      var glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        var gid = lookupTable.lookup(glyph.id);\n\n        if (gid) {\n          // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  };\n\n  _proto._insertGlyphs = function _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    var _this$glyphs;\n\n    var insertions = [];\n\n    while (count--) {\n      var gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [glyphIndex, 0].concat(insertions));\n  };\n\n  _proto.processGlyphInsertion = function processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      var count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      var isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      var _count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n\n      var _isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, _count, _isBefore);\n    }\n  };\n\n  _proto.getSupportedFeatures = function getSupportedFeatures() {\n    var features = [];\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose$i(this.morx.chains), _step4; !(_step4 = _iterator4()).done;) {\n      var chain = _step4.value;\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose$i(chain.features), _step5; !(_step5 = _iterator5()).done;) {\n        var feature = _step5.value;\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  };\n\n  _proto.generateInputs = function generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  };\n\n  _proto.generateInputCache = function generateInputCache() {\n    this.inputCache = {};\n\n    for (var _iterator6 = _createForOfIteratorHelperLoose$i(this.morx.chains), _step6; !(_step6 = _iterator6()).done;) {\n      var chain = _step6.value;\n      var flags = chain.defaultFlags;\n\n      for (var _iterator7 = _createForOfIteratorHelperLoose$i(chain.subtables), _step7; !(_step7 = _iterator7()).done;) {\n        var subtable = _step7.value;\n\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  };\n\n  _proto.generateInputsForSubtable = function generateInputsForSubtable(subtable) {\n    var _this = this;\n\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    var reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    var stateMachine = this.getStateMachine(subtable);\n    var process = this.getProcessor();\n    var input = [];\n    var stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: function enter(glyph, entry) {\n        var glyphs = _this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: _this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        var g = _this.font.getGlyph(glyph);\n\n        input.push(g);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        var count = 0;\n        var found = 0;\n\n        for (var i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          var result = input.map(function (g) {\n            return g.id;\n          });\n          var _cache = _this.inputCache[found];\n\n          if (_cache) {\n            _cache.push(result);\n          } else {\n            _this.inputCache[found] = [result];\n          }\n        }\n      },\n      exit: function exit() {\n        var _stack$pop = stack.pop();\n\n        _this.glyphs = _stack$pop.glyphs;\n        _this.ligatureStack = _stack$pop.ligatureStack;\n        input.pop();\n      }\n    });\n  };\n\n  return AATMorxProcessor;\n}(), (_applyDecoratedDescriptor(_class$2.prototype, \"getStateMachine\", [cache], Object.getOwnPropertyDescriptor(_class$2.prototype, \"getStateMachine\"), _class$2.prototype)), _class$2);\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\n\nfunction swap(glyphs, rangeA, rangeB, reverseA, reverseB) {\n  if (reverseA === void 0) {\n    reverseA = false;\n  }\n\n  if (reverseB === void 0) {\n    reverseB = false;\n  }\n\n  var end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n\n  if (reverseB) {\n    end.reverse();\n  }\n\n  var start = glyphs.splice.apply(glyphs, [rangeA[0], rangeA[1]].concat(end));\n\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice.apply(glyphs, [rangeB[0] - (rangeA[1] - 1), 0].concat(start));\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n\n  switch (verb) {\n    case 0:\n      // no change\n      return glyphs;\n\n    case 1:\n      // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(\"Unknown verb: \" + verb);\n  }\n}\n\nfunction _createForOfIteratorHelperLoose$h(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$h(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$h(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$h(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$h(o, minLen); }\n\nfunction _arrayLikeToArray$h(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar AATLayoutEngine = /*#__PURE__*/function () {\n  function AATLayoutEngine(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  var _proto = AATLayoutEngine.prototype;\n\n  _proto.substitute = function substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, mapOTToAAT(glyphRun.features));\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var glyphStrings = this.morxProcessor.generateInputs(gid);\n    var result = new Set();\n\n    for (var _iterator = _createForOfIteratorHelperLoose$h(glyphStrings), _step; !(_step = _iterator()).done;) {\n      var glyphs = _step.value;\n\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  };\n\n  _proto._addStrings = function _addStrings(glyphs, index, strings, string) {\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$h(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      var s = string + String.fromCodePoint(codePoint);\n\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  };\n\n  return AATLayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$g(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$g(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$g(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$g(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$g(o, minLen); }\n\nfunction _arrayLikeToArray$g(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\n\nvar ShapingPlan = /*#__PURE__*/function () {\n  function ShapingPlan(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n\n\n  var _proto = ShapingPlan.prototype;\n\n  _proto._addFeatures = function _addFeatures(features, global) {\n    var stageIndex = this.stages.length - 1;\n    var stage = this.stages[stageIndex];\n\n    for (var _iterator = _createForOfIteratorHelperLoose$g(features), _step; !(_step = _iterator()).done;) {\n      var feature = _step.value;\n\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n  /**\n   * Add features to the last stage\n   */\n  ;\n\n  _proto.add = function add(arg, global) {\n    if (global === void 0) {\n      global = true;\n    }\n\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n  /**\n   * Add a new stage\n   */\n  ;\n\n  _proto.addStage = function addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  };\n\n  _proto.setFeatureOverrides = function setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (var tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          var stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  ;\n\n  _proto.assignGlobalFeatures = function assignGlobalFeatures(glyphs) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose$g(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var glyph = _step2.value;\n\n      for (var feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  ;\n\n  _proto.process = function process(processor, glyphs, positions) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose$g(this.stages), _step3; !(_step3 = _iterator3()).done;) {\n      var stage = _step3.value;\n\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  };\n\n  return ShapingPlan;\n}();\n\nvar VARIATION_FEATURES = ['rvrn'];\nvar COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nvar FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nvar HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nvar DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nvar DefaultShaper = /*#__PURE__*/function () {\n  function DefaultShaper() {}\n\n  DefaultShaper.plan = function plan(_plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(_plan);\n    this.planFeatures(_plan);\n    this.planPostprocessing(_plan, features); // Assign the global features to all the glyphs\n\n    _plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n\n    this.assignFeatures(_plan, glyphs);\n  };\n\n  DefaultShaper.planPreprocessing = function planPreprocessing(plan) {\n    plan.add({\n      global: [].concat(VARIATION_FEATURES, DIRECTIONAL_FEATURES[plan.direction]),\n      local: FRACTIONAL_FEATURES\n    });\n  };\n\n  DefaultShaper.planFeatures = function planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  };\n\n  DefaultShaper.planPostprocessing = function planPostprocessing(plan, userFeatures) {\n    plan.add([].concat(COMMON_FEATURES, HORIZONTAL_FEATURES));\n    plan.setFeatureOverrides(userFeatures);\n  };\n\n  DefaultShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (var i = 0; i < glyphs.length; i++) {\n      var glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        // fraction slash\n        var start = i;\n        var end = i + 1; // Apply numerator\n\n        while (start > 0 && unicode.isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && unicode.isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  };\n\n  return DefaultShaper;\n}();\n\n_defineProperty(DefaultShaper, \"zeroMarkWidths\", 'AFTER_GPOS');\n\nvar type$2 = \"Buffer\";\nvar data$2 = [\n\t0,\n\t1,\n\t240,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t56,\n\t0,\n\t1,\n\t253,\n\t1,\n\t2,\n\t254,\n\t237,\n\t154,\n\t45,\n\t76,\n\t196,\n\t48,\n\t20,\n\t199,\n\t187,\n\t237,\n\t190,\n\t56,\n\t64,\n\t129,\n\t192,\n\t224,\n\t144,\n\t72,\n\t4,\n\t2,\n\t121,\n\t151,\n\t16,\n\t18,\n\t12,\n\t9,\n\t134,\n\t132,\n\t115,\n\t40,\n\t4,\n\t138,\n\t160,\n\t80,\n\t224,\n\t80,\n\t36,\n\t8,\n\t78,\n\t34,\n\t145,\n\t72,\n\t12,\n\t138,\n\t32,\n\t73,\n\t72,\n\t8,\n\t18,\n\t137,\n\t68,\n\t18,\n\t12,\n\t201,\n\t253,\n\t47,\n\t215,\n\t146,\n\t151,\n\t166,\n\t221,\n\t117,\n\t215,\n\t110,\n\t131,\n\t219,\n\t123,\n\t201,\n\t47,\n\t237,\n\t173,\n\t235,\n\t235,\n\t123,\n\t237,\n\t235,\n\t219,\n\t186,\n\t92,\n\t55,\n\t22,\n\t98,\n\t27,\n\t236,\n\t130,\n\t125,\n\t208,\n\t149,\n\t191,\n\t255,\n\t75,\n\t121,\n\t12,\n\t78,\n\t193,\n\t25,\n\t184,\n\t0,\n\t151,\n\t160,\n\t15,\n\t110,\n\t192,\n\t45,\n\t184,\n\t3,\n\t247,\n\t224,\n\t1,\n\t60,\n\t145,\n\t126,\n\t207,\n\t224,\n\t77,\n\t254,\n\t30,\n\t242,\n\t14,\n\t62,\n\t100,\n\t253,\n\t83,\n\t150,\n\t95,\n\t164,\n\t157,\n\t153,\n\t78,\n\t126,\n\t192,\n\t181,\n\t164,\n\t158,\n\t8,\n\t49,\n\t15,\n\t22,\n\t146,\n\t242,\n\t237,\n\t42,\n\t138,\n\t37,\n\t248,\n\t186,\n\t44,\n\t253,\n\t93,\n\t169,\n\t144,\n\t223,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t84,\n\t143,\n\t225,\n\t247,\n\t159,\n\t85,\n\t254,\n\t254,\n\t193,\n\t48,\n\t12,\n\t195,\n\t48,\n\t12,\n\t195,\n\t48,\n\t185,\n\t114,\n\t53,\n\t51,\n\t98,\n\t49,\n\t39,\n\t94,\n\t193,\n\t92,\n\t91,\n\t136,\n\t14,\n\t56,\n\t7,\n\t143,\n\t224,\n\t187,\n\t61,\n\t106,\n\t91,\n\t159,\n\t21,\n\t98,\n\t83,\n\t8,\n\t209,\n\t107,\n\t9,\n\t209,\n\t111,\n\t141,\n\t234,\n\t69,\n\t240,\n\t210,\n\t202,\n\t111,\n\t62,\n\t215,\n\t112,\n\t134,\n\t217,\n\t48,\n\t156,\n\t99,\n\t58,\n\t184,\n\t182,\n\t149,\n\t225,\n\t124,\n\t179,\n\t131,\n\t123,\n\t247,\n\t60,\n\t207,\n\t67,\n\t61,\n\t244,\n\t63,\n\t176,\n\t232,\n\t56,\n\t196,\n\t245,\n\t163,\n\t138,\n\t156,\n\t183,\n\t212,\n\t255,\n\t11,\n\t78,\n\t166,\n\t212,\n\t223,\n\t78,\n\t28,\n\t253,\n\t194,\n\t194,\n\t82,\n\t101,\n\t137,\n\t44,\n\t208,\n\t118,\n\t83,\n\t61,\n\t148,\n\t212,\n\t164,\n\t222,\n\t68,\n\t163,\n\t102,\n\t40,\n\t117,\n\t76,\n\t125,\n\t178,\n\t66,\n\t251,\n\t253,\n\t37,\n\t161,\n\t54,\n\t81,\n\t31,\n\t245,\n\t185,\n\t114,\n\t241,\n\t47,\n\t4,\n\t147,\n\t204,\n\t109,\n\t17,\n\t36,\n\t90,\n\t221,\n\t197,\n\t15,\n\t83,\n\t92,\n\t169,\n\t118,\n\t65,\n\t74,\n\t155,\n\t132,\n\t216,\n\t7,\n\t116,\n\t60,\n\t23,\n\t161,\n\t62,\n\t211,\n\t107,\n\t62,\n\t210,\n\t4,\n\t117,\n\t131,\n\t254,\n\t134,\n\t36,\n\t109,\n\t253,\n\t93,\n\t99,\n\t34,\n\t33,\n\t58,\n\t245,\n\t126,\n\t13,\n\t79,\n\t251,\n\t149,\n\t100,\n\t141,\n\t207,\n\t80,\n\t113,\n\t61,\n\t110,\n\t110,\n\t76,\n\t237,\n\t227,\n\t198,\n\t117,\n\t149,\n\t178,\n\t247,\n\t157,\n\t111,\n\t236,\n\t217,\n\t250,\n\t143,\n\t203,\n\t245,\n\t89,\n\t98,\n\t143,\n\t222,\n\t107,\n\t122,\n\t182,\n\t217,\n\t236,\n\t138,\n\t12,\n\t122,\n\t84,\n\t222,\n\t213,\n\t115,\n\t69,\n\t104,\n\t153,\n\t36,\n\t134,\n\t169,\n\t109,\n\t166,\n\t24,\n\t211,\n\t245,\n\t154,\n\t230,\n\t79,\n\t151,\n\t178,\n\t223,\n\t140,\n\t213,\n\t26,\n\t40,\n\t209,\n\t109,\n\t12,\n\t101,\n\t95,\n\t217,\n\t251,\n\t196,\n\t244,\n\t238,\n\t213,\n\t148,\n\t20,\n\t185,\n\t143,\n\t125,\n\t247,\n\t115,\n\t154,\n\t127,\n\t121,\n\t234,\n\t14,\n\t169,\n\t203,\n\t53,\n\t71,\n\t248,\n\t72,\n\t168,\n\t53,\n\t139,\n\t39,\n\t180,\n\t211,\n\t150,\n\t75,\n\t34,\n\t173,\n\t84,\n\t245,\n\t72,\n\t142,\n\t229,\n\t242,\n\t78,\n\t24,\n\t167,\n\t232,\n\t55,\n\t141,\n\t167,\n\t198,\n\t114,\n\t181,\n\t53,\n\t68,\n\t206,\n\t165,\n\t246,\n\t216,\n\t124,\n\t209,\n\t115,\n\t169,\n\t158,\n\t83,\n\t125,\n\t237,\n\t176,\n\t205,\n\t99,\n\t136,\n\t184,\n\t179,\n\t173,\n\t65,\n\t209,\n\t40,\n\t191,\n\t138,\n\t150,\n\t180,\n\t184,\n\t115,\n\t37,\n\t235,\n\t58,\n\t132,\n\t142,\n\t81,\n\t95,\n\t9,\n\t153,\n\t191,\n\t76,\n\t207,\n\t10,\n\t155,\n\t52,\n\t3,\n\t142,\n\t107,\n\t147,\n\t1\n];\nvar trieData$2 = {\n\ttype: type$2,\n\tdata: data$2\n};\n\nvar trie$2 = new UnicodeTrie(new Uint8Array(trieData$2.data));\nvar FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\nvar ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\nvar ISOL = 'isol';\nvar FINA = 'fina';\nvar FIN2 = 'fin2';\nvar FIN3 = 'fin3';\nvar MEDI = 'medi';\nvar MED2 = 'med2';\nvar INIT = 'init';\nvar NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nvar STATE_TABLE$1 = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN2, 5], [NONE, ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [INIT, FINA, 1], [INIT, FINA, 3], [INIT, FINA, 4], [INIT, FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MEDI, FINA, 1], [MEDI, FINA, 3], [MEDI, FINA, 4], [MEDI, FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [MED2, ISOL, 1], [MED2, ISOL, 2], [MED2, FIN2, 5], [MED2, ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [ISOL, ISOL, 1], [ISOL, ISOL, 2], [ISOL, FIN2, 5], [ISOL, ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[NONE, NONE, 0], [NONE, ISOL, 2], [NONE, ISOL, 1], [NONE, ISOL, 2], [NONE, FIN3, 5], [NONE, ISOL, 6]]];\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\n\nvar ArabicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(ArabicShaper, _DefaultShaper);\n\n  function ArabicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  ArabicShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n\n    for (var i = 0; i < FEATURES.length; i++) {\n      var feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  };\n\n  ArabicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    _DefaultShaper.assignFeatures.call(this, plan, glyphs);\n\n    var prev = -1;\n    var state = 0;\n    var actions = []; // Apply the state machine to map glyphs to features\n\n    for (var i = 0; i < glyphs.length; i++) {\n      var curAction = void 0,\n          prevAction = void 0;\n      var glyph = glyphs[i];\n      var type = getShapingClass(glyph.codePoints[0]);\n\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      var _STATE_TABLE$state$ty = STATE_TABLE$1[state][type];\n      prevAction = _STATE_TABLE$state$ty[0];\n      curAction = _STATE_TABLE$state$ty[1];\n      state = _STATE_TABLE$state$ty[2];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (var index = 0; index < glyphs.length; index++) {\n      var feature = void 0;\n      var glyph = glyphs[index];\n\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  };\n\n  return ArabicShaper;\n}(DefaultShaper);\n\nfunction getShapingClass(codePoint) {\n  var res = trie$2.get(codePoint);\n\n  if (res) {\n    return res - 1;\n  }\n\n  var category = unicode.getCategory(codePoint);\n\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n\nvar GlyphIterator = /*#__PURE__*/function () {\n  function GlyphIterator(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  var _proto = GlyphIterator.prototype;\n\n  _proto.reset = function reset(options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  };\n\n  _proto.shouldIgnore = function shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  };\n\n  _proto.move = function move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _proto.next = function next() {\n    return this.move(+1);\n  };\n\n  _proto.prev = function prev() {\n    return this.move(-1);\n  };\n\n  _proto.peek = function peek(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    var res = this.increment(count);\n    this.index = idx;\n    return res;\n  };\n\n  _proto.peekIndex = function peekIndex(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var idx = this.index;\n    this.increment(count);\n    var res = this.index;\n    this.index = idx;\n    return res;\n  };\n\n  _proto.increment = function increment(count) {\n    if (count === void 0) {\n      count = 1;\n    }\n\n    var dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  };\n\n  _createClass(GlyphIterator, [{\n    key: \"cur\",\n    get: function get() {\n      return this.glyphs[this.index] || null;\n    }\n  }]);\n\n  return GlyphIterator;\n}();\n\nfunction _createForOfIteratorHelperLoose$f(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$f(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$f(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$f(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$f(o, minLen); }\n\nfunction _arrayLikeToArray$f(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nvar OTProcessor = /*#__PURE__*/function () {\n  function OTProcessor(font, table) {\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  var _proto = OTProcessor.prototype;\n\n  _proto.findScript = function findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose$f(script), _step; !(_step = _iterator()).done;) {\n      var s = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$f(this.table.scriptList), _step2; !(_step2 = _iterator2()).done;) {\n        var entry = _step2.value;\n\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  _proto.selectScript = function selectScript(script, language, direction$1) {\n    var changed = false;\n    var entry;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction$1 || direction$1 !== this.direction) {\n      this.direction = direction$1 || direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$f(this.script.langSysRecords), _step3; !(_step3 = _iterator3()).done;) {\n        var lang = _step3.value;\n\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n\n      if (this.language) {\n        for (var _iterator4 = _createForOfIteratorHelperLoose$f(this.language.featureIndexes), _step4; !(_step4 = _iterator4()).done;) {\n          var featureIndex = _step4.value;\n          var record = this.table.featureList[featureIndex];\n          var substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  };\n\n  _proto.lookupsForFeatures = function lookupsForFeatures(userFeatures, exclude) {\n    if (userFeatures === void 0) {\n      userFeatures = [];\n    }\n\n    var lookups = [];\n\n    for (var _iterator5 = _createForOfIteratorHelperLoose$f(userFeatures), _step5; !(_step5 = _iterator5()).done;) {\n      var tag = _step5.value;\n      var feature = this.features[tag];\n\n      if (!feature) {\n        continue;\n      }\n\n      for (var _iterator6 = _createForOfIteratorHelperLoose$f(feature.lookupListIndexes), _step6; !(_step6 = _iterator6()).done;) {\n        var lookupIndex = _step6.value;\n\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    return lookups;\n  };\n\n  _proto.substituteFeatureForVariations = function substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    var record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    var substitutions = record.featureTableSubstitution.substitutions;\n\n    for (var _iterator7 = _createForOfIteratorHelperLoose$f(substitutions), _step7; !(_step7 = _iterator7()).done;) {\n      var substitution = _step7.value;\n\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.findVariationsIndex = function findVariationsIndex(coords) {\n    var variations = this.table.featureVariations;\n\n    if (!variations) {\n      return -1;\n    }\n\n    var records = variations.featureVariationRecords;\n\n    for (var i = 0; i < records.length; i++) {\n      var conditions = records[i].conditionSet.conditionTable;\n\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  _proto.variationConditionsMatch = function variationConditionsMatch(conditions, coords) {\n    return conditions.every(function (condition) {\n      var coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    var lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  };\n\n  _proto.applyLookups = function applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (var _iterator8 = _createForOfIteratorHelperLoose$f(lookups), _step8; !(_step8 = _iterator8()).done;) {\n      var _step8$value = _step8.value,\n          feature = _step8$value.feature,\n          lookup = _step8$value.lookup;\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (var _iterator9 = _createForOfIteratorHelperLoose$f(lookup.subTables), _step9; !(_step9 = _iterator9()).done;) {\n          var table = _step9.value;\n          var res = this.applyLookup(lookup.lookupType, table);\n\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  };\n\n  _proto.applyLookup = function applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  };\n\n  _proto.applyLookupList = function applyLookupList(lookupRecords) {\n    var options = this.glyphIterator.options;\n    var glyphIndex = this.glyphIterator.index;\n\n    for (var _iterator10 = _createForOfIteratorHelperLoose$f(lookupRecords), _step10; !(_step10 = _iterator10()).done;) {\n      var lookupRecord = _step10.value;\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      var lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (var _iterator11 = _createForOfIteratorHelperLoose$f(lookup.subTables), _step11; !(_step11 = _iterator11()).done;) {\n        var table = _step11.value;\n\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  };\n\n  _proto.coverageIndex = function coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (var _iterator12 = _createForOfIteratorHelperLoose$f(coverage.rangeRecords), _step12; !(_step12 = _iterator12()).done;) {\n          var range = _step12.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  };\n\n  _proto.match = function match(sequenceIndex, sequence, fn, matched) {\n    var pos = this.glyphIterator.index;\n    var glyph = this.glyphIterator.increment(sequenceIndex);\n    var idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  };\n\n  _proto.sequenceMatches = function sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      return component === glyph.id;\n    });\n  };\n\n  _proto.sequenceMatchIndices = function sequenceMatchIndices(sequenceIndex, sequence) {\n    var _this = this;\n\n    return this.match(sequenceIndex, sequence, function (component, glyph) {\n      // If the current feature doesn't apply to this glyph,\n      if (!(_this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  };\n\n  _proto.coverageSequenceMatches = function coverageSequenceMatches(sequenceIndex, sequence) {\n    var _this2 = this;\n\n    return this.match(sequenceIndex, sequence, function (coverage, glyph) {\n      return _this2.coverageIndex(coverage, glyph.id) >= 0;\n    });\n  };\n\n  _proto.getClassID = function getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        // Class array\n        var i = glyph - classDef.startGlyph;\n\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (var _iterator13 = _createForOfIteratorHelperLoose$f(classDef.classRangeRecord), _step13; !(_step13 = _iterator13()).done;) {\n          var range = _step13.value;\n\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  };\n\n  _proto.classSequenceMatches = function classSequenceMatches(sequenceIndex, sequence, classDef) {\n    var _this3 = this;\n\n    return this.match(sequenceIndex, sequence, function (classID, glyph) {\n      return classID === _this3.getClassID(glyph.id, classDef);\n    });\n  };\n\n  _proto.applyContext = function applyContext(table) {\n    var index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.ruleSets[index];\n\n        for (var _iterator14 = _createForOfIteratorHelperLoose$f(set), _step14; !(_step14 = _iterator14()).done;) {\n          var rule = _step14.value;\n\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n\n        for (var _iterator15 = _createForOfIteratorHelperLoose$f(set), _step15; !(_step15 = _iterator15()).done;) {\n          var _rule = _step15.value;\n\n          if (this.classSequenceMatches(1, _rule.classes, table.classDef)) {\n            return this.applyLookupList(_rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  _proto.applyChainingContext = function applyChainingContext(table) {\n    var index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n\n        if (index === -1) {\n          return false;\n        }\n\n        var set = table.chainRuleSets[index];\n\n        for (var _iterator16 = _createForOfIteratorHelperLoose$f(set), _step16; !(_step16 = _iterator16()).done;) {\n          var rule = _step16.value;\n\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        var rules = table.chainClassSet[index];\n\n        if (!rules) {\n          return false;\n        }\n\n        for (var _iterator17 = _createForOfIteratorHelperLoose$f(rules), _step17; !(_step17 = _iterator17()).done;) {\n          var _rule2 = _step17.value;\n\n          if (this.classSequenceMatches(-_rule2.backtrack.length, _rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, _rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + _rule2.input.length, _rule2.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(_rule2.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  };\n\n  return OTProcessor;\n}();\n\nvar GlyphInfo = /*#__PURE__*/function () {\n  function GlyphInfo(font, id, codePoints, features) {\n    if (codePoints === void 0) {\n      codePoints = [];\n    }\n\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n\n    if (Array.isArray(features)) {\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  var _proto = GlyphInfo.prototype;\n\n  _proto.copy = function copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  };\n\n  _createClass(GlyphInfo, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n      this.substituted = true;\n      var GDEF = this._font.GDEF;\n\n      if (GDEF && GDEF.glyphClassDef) {\n        // TODO: clean this up\n        var classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n        this.isBase = classID === 1;\n        this.isLigature = classID === 2;\n        this.isMark = classID === 3;\n        this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n      } else {\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n        this.isBase = !this.isMark;\n        this.isLigature = this.codePoints.length > 1;\n        this.markAttachmentType = 0;\n      }\n    }\n  }]);\n\n  return GlyphInfo;\n}();\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\n\nvar HangulShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(HangulShaper, _DefaultShaper);\n\n  function HangulShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  HangulShaper.planFeatures = function planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  };\n\n  HangulShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var state = 0;\n    var i = 0;\n\n    while (i < glyphs.length) {\n      var action = void 0;\n      var glyph = glyphs[i];\n      var code = glyph.codePoints[0];\n      var type = getType(code);\n      var _STATE_TABLE$state$ty = STATE_TABLE[state][type];\n      action = _STATE_TABLE$state$ty[0];\n      state = _STATE_TABLE$state$ty[1];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  };\n\n  return HangulShaper;\n}(DefaultShaper);\n\n_defineProperty(HangulShaper, \"zeroMarkWidths\", 'NONE');\nvar HANGUL_BASE = 0xac00;\nvar HANGUL_END = 0xd7a4;\nvar HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nvar L_BASE = 0x1100; // lead\n\nvar V_BASE = 0x1161; // vowel\n\nvar T_BASE = 0x11a7; // trail\n\nvar L_COUNT = 19;\nvar V_COUNT = 21;\nvar T_COUNT = 28;\nvar L_END = L_BASE + L_COUNT - 1;\nvar V_END = V_BASE + V_COUNT - 1;\nvar T_END = T_BASE + T_COUNT - 1;\nvar DOTTED_CIRCLE = 0x25cc;\n\nvar isL = function isL(code) {\n  return 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n};\n\nvar isV = function isV(code) {\n  return 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n};\n\nvar isT = function isT(code) {\n  return 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n};\n\nvar isTone = function isTone(code) {\n  return 0x302e <= code && code <= 0x302f;\n};\n\nvar isLVT = function isLVT(code) {\n  return HANGUL_BASE <= code && code <= HANGUL_END;\n};\n\nvar isLV = function isLV(code) {\n  return code - HANGUL_BASE < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\n};\n\nvar isCombiningL = function isCombiningL(code) {\n  return L_BASE <= code && code <= L_END;\n};\n\nvar isCombiningV = function isCombiningV(code) {\n  return V_BASE <= code && code <= V_END;\n};\n\nvar isCombiningT = function isCombiningT(code) {\n  return 1 <= code && code <= T_END;\n}; // Character categories\n\n\nvar X = 0; // Other character\n\nvar L = 1; // Leading consonant\n\nvar V = 2; // Medial vowel\n\nvar T = 3; // Trailing consonant\n\nvar LV = 4; // Composed <LV> syllable\n\nvar LVT = 5; // Composed <LVT> syllable\n\nvar M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction getType(code) {\n  if (isL(code)) {\n    return L;\n  }\n\n  if (isV(code)) {\n    return V;\n  }\n\n  if (isT(code)) {\n    return T;\n  }\n\n  if (isLV(code)) {\n    return LV;\n  }\n\n  if (isLVT(code)) {\n    return LVT;\n  }\n\n  if (isTone(code)) {\n    return M;\n  }\n\n  return X;\n} // State machine actions\n\n\nvar NO_ACTION = 0;\nvar DECOMPOSE = 1;\nvar COMPOSE = 2;\nvar TONE_MARK = 4;\nvar INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nvar STATE_TABLE = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 1: <L>\n[[NO_ACTION, 0], [NO_ACTION, 1], [COMPOSE, 2], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [INVALID, 0]], // State 2: <L,V> or <LV>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [COMPOSE, 3], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[NO_ACTION, 0], [NO_ACTION, 1], [NO_ACTION, 0], [NO_ACTION, 0], [DECOMPOSE, 2], [DECOMPOSE, 3], [TONE_MARK, 0]]];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyph.codePoints[0];\n  var s = code - HANGUL_BASE;\n  var t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  var l = L_BASE + s / V_COUNT | 0;\n  var v = V_BASE + s % V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== T_BASE && !font.hasGlyphForCodePoint(t)) {\n    return i;\n  } // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n\n  var ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  var vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  var insert = [ljmo, vjmo];\n\n  if (t > T_BASE) {\n    var tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice.apply(glyphs, [i, 1].concat(insert));\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n  var type = getType(code);\n  var prev = glyphs[i - 1].codePoints[0];\n  var prevType = getType(prev); // Figure out what type of syllable we're dealing with\n\n  var lv, ljmo, vjmo, tjmo;\n\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    var l = ljmo.codePoints[0];\n    var v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  var t = tjmo && tjmo.codePoints[0] || T_BASE;\n\n  if (lv != null && (t === T_BASE || isCombiningT(t))) {\n    var s = lv + (t - T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      var del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) {\n    ljmo.features.ljmo = true;\n  }\n\n  if (vjmo) {\n    vjmo.features.vjmo = true;\n  }\n\n  if (tjmo) {\n    tjmo.features.tjmo = true;\n  }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n\n    case V:\n      return 2;\n\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) {\n    return;\n  }\n\n  var prev = glyphs[i - 1].codePoints[0];\n  var len = getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  var glyph = glyphs[i];\n  var code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    var dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    var idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar stateTable$1 = [\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t4,\n\t\t5,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t11,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t17\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t28,\n\t\t29,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t5,\n\t\t7,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t13,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t41,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t43,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t45,\n\t\t46,\n\t\t47,\n\t\t48,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t0,\n\t\t51,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t52,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t53,\n\t\t54,\n\t\t55,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t60,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t4,\n\t\t5,\n\t\t7,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t13,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t63,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t41,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t63,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t2,\n\t\t3,\n\t\t4,\n\t\t5,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t11,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t0,\n\t\t2,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t65,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t69,\n\t\t0,\n\t\t70,\n\t\t70,\n\t\t0,\n\t\t71,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t73,\n\t\t19,\n\t\t74,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t77,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t79,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t79,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t19,\n\t\t20,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t25,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t81,\n\t\t82,\n\t\t83,\n\t\t84,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t86,\n\t\t0,\n\t\t0,\n\t\t87,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t88,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t19,\n\t\t74,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t89,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t77,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t89,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t94,\n\t\t29,\n\t\t95,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t98,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t100,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t102,\n\t\t103,\n\t\t104,\n\t\t105,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t107,\n\t\t0,\n\t\t0,\n\t\t108,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t109,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t28,\n\t\t29,\n\t\t95,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t110,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t98,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t110,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t7,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t13,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t115,\n\t\t116,\n\t\t117,\n\t\t118,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t119,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t122,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t124,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t124,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t125,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t126,\n\t\t126,\n\t\t8,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t47,\n\t\t48,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47,\n\t\t47,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t127,\n\t\t127,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t128,\n\t\t127,\n\t\t127,\n\t\t49,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t129,\n\t\t130,\n\t\t131,\n\t\t132,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t134,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t135,\n\t\t54,\n\t\t56,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t138,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t140,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t60,\n\t\t140,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t140,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t140,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t142,\n\t\t143,\n\t\t144,\n\t\t145,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t147,\n\t\t0,\n\t\t0,\n\t\t148,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t149,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t53,\n\t\t54,\n\t\t56,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t150,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t138,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t150,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t155,\n\t\t116,\n\t\t156,\n\t\t157,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t158,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t3,\n\t\t4,\n\t\t5,\n\t\t159,\n\t\t160,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t163,\n\t\t0,\n\t\t75,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t164,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t124,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t164,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t124,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t70,\n\t\t70,\n\t\t0,\n\t\t71,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t71,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t166,\n\t\t0,\n\t\t0,\n\t\t167,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t168,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t19,\n\t\t74,\n\t\t74,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t79,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t79,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t169,\n\t\t170,\n\t\t171,\n\t\t172,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t173,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t176,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t178,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t178,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t179,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t180,\n\t\t180,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t82,\n\t\t83,\n\t\t84,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t83,\n\t\t83,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t181,\n\t\t181,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t182,\n\t\t181,\n\t\t181,\n\t\t85,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t183,\n\t\t184,\n\t\t185,\n\t\t186,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t86,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t188,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t189,\n\t\t170,\n\t\t190,\n\t\t191,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t192,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t193,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t178,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t193,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t178,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t95,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t100,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t195,\n\t\t196,\n\t\t197,\n\t\t198,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t199,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t202,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t204,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t204,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t205,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t206,\n\t\t206,\n\t\t32,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t103,\n\t\t104,\n\t\t105,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t104,\n\t\t104,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t207,\n\t\t207,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t208,\n\t\t207,\n\t\t207,\n\t\t106,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t209,\n\t\t210,\n\t\t211,\n\t\t212,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t107,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t214,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t215,\n\t\t196,\n\t\t216,\n\t\t217,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t218,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t219,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t204,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t219,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t204,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t221,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t224,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t119,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t115,\n\t\t116,\n\t\t117,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t119,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t115,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t226,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t224,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t226,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t227,\n\t\t0,\n\t\t228,\n\t\t229,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t230,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t122,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t8,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t231,\n\t\t231,\n\t\t49,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t232,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t130,\n\t\t131,\n\t\t132,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t131,\n\t\t131,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t233,\n\t\t233,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t234,\n\t\t233,\n\t\t233,\n\t\t133,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t235,\n\t\t236,\n\t\t237,\n\t\t238,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t54,\n\t\t56,\n\t\t56,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t61,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t240,\n\t\t241,\n\t\t242,\n\t\t243,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t244,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t247,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t249,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t249,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t250,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t251,\n\t\t251,\n\t\t57,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t143,\n\t\t144,\n\t\t145,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t144,\n\t\t144,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t252,\n\t\t252,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t253,\n\t\t252,\n\t\t252,\n\t\t146,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t254,\n\t\t255,\n\t\t256,\n\t\t257,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t147,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t259,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t260,\n\t\t241,\n\t\t261,\n\t\t262,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t263,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t264,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t249,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t264,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t249,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t221,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t158,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t155,\n\t\t116,\n\t\t156,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t158,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t155,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t266,\n\t\t266,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t267,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t176,\n\t\t43,\n\t\t268,\n\t\t268,\n\t\t269,\n\t\t161,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t267,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t270,\n\t\t0,\n\t\t0,\n\t\t271,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t272,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t273,\n\t\t274,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t41,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t273,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t275,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t166,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t72,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t276,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t277,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t280,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t173,\n\t\t281,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t169,\n\t\t170,\n\t\t171,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t173,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t169,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t282,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t280,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t282,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t283,\n\t\t0,\n\t\t284,\n\t\t285,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t286,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t176,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t75,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t287,\n\t\t287,\n\t\t85,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t288,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t184,\n\t\t185,\n\t\t186,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t185,\n\t\t185,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t289,\n\t\t289,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t290,\n\t\t289,\n\t\t289,\n\t\t187,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t291,\n\t\t292,\n\t\t293,\n\t\t294,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t277,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t192,\n\t\t281,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t189,\n\t\t170,\n\t\t190,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t192,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t189,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t296,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t297,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t300,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t199,\n\t\t301,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t195,\n\t\t196,\n\t\t197,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t199,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t195,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t302,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t300,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t302,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t303,\n\t\t0,\n\t\t304,\n\t\t305,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t306,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t202,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t96,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t32,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t307,\n\t\t307,\n\t\t106,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t308,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t210,\n\t\t211,\n\t\t212,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t211,\n\t\t211,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t309,\n\t\t309,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t310,\n\t\t309,\n\t\t309,\n\t\t213,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t311,\n\t\t312,\n\t\t313,\n\t\t314,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t297,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t218,\n\t\t301,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t215,\n\t\t196,\n\t\t216,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t218,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t215,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t316,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t116,\n\t\t222,\n\t\t222,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t317,\n\t\t318,\n\t\t319,\n\t\t320,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t321,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t323,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t324,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t325,\n\t\t318,\n\t\t326,\n\t\t327,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t328,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t64,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t230,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t227,\n\t\t0,\n\t\t228,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t230,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t227,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t49,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t329,\n\t\t329,\n\t\t133,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t330,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t236,\n\t\t237,\n\t\t238,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t237,\n\t\t237,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t331,\n\t\t331,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t332,\n\t\t331,\n\t\t331,\n\t\t239,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t333,\n\t\t40,\n\t\t121,\n\t\t334,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t335,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t338,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t244,\n\t\t339,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t240,\n\t\t241,\n\t\t242,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t244,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t240,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t340,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t338,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t340,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t341,\n\t\t0,\n\t\t342,\n\t\t343,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t344,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t247,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t136,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t57,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t345,\n\t\t345,\n\t\t146,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t346,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t255,\n\t\t256,\n\t\t257,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t256,\n\t\t256,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t347,\n\t\t347,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t348,\n\t\t347,\n\t\t347,\n\t\t258,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t349,\n\t\t350,\n\t\t351,\n\t\t352,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t335,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t263,\n\t\t339,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t260,\n\t\t241,\n\t\t261,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t263,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t260,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t354,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t126,\n\t\t126,\n\t\t8,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t355,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t125,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t355,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t356,\n\t\t356,\n\t\t269,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t357,\n\t\t358,\n\t\t359,\n\t\t360,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t270,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t363,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t364,\n\t\t116,\n\t\t365,\n\t\t366,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t367,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t170,\n\t\t278,\n\t\t278,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t174,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t281,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t369,\n\t\t370,\n\t\t371,\n\t\t372,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t373,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t375,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t376,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t377,\n\t\t370,\n\t\t378,\n\t\t379,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t380,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t90,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t286,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t283,\n\t\t0,\n\t\t284,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t286,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t283,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t85,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t82,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t381,\n\t\t381,\n\t\t187,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t382,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t292,\n\t\t293,\n\t\t294,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t293,\n\t\t293,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t383,\n\t\t383,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t384,\n\t\t383,\n\t\t383,\n\t\t295,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t385,\n\t\t76,\n\t\t175,\n\t\t386,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t196,\n\t\t298,\n\t\t298,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t200,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t301,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t387,\n\t\t388,\n\t\t389,\n\t\t390,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t391,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t393,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t394,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t395,\n\t\t388,\n\t\t396,\n\t\t397,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t398,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t111,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t306,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t303,\n\t\t0,\n\t\t304,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t306,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t303,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t106,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t103,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t399,\n\t\t399,\n\t\t213,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t400,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t312,\n\t\t313,\n\t\t314,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t313,\n\t\t313,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t401,\n\t\t401,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t402,\n\t\t401,\n\t\t401,\n\t\t315,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t403,\n\t\t97,\n\t\t201,\n\t\t404,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t405,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t408,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t321,\n\t\t409,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t317,\n\t\t318,\n\t\t319,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t321,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t317,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t410,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t408,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t410,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t323,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t223,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t405,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t328,\n\t\t409,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t325,\n\t\t318,\n\t\t326,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t328,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t325,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t133,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t130,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t411,\n\t\t411,\n\t\t239,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t412,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t121,\n\t\t334,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t413,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t241,\n\t\t336,\n\t\t336,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t245,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t339,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t414,\n\t\t415,\n\t\t416,\n\t\t417,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t418,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t420,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t421,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t422,\n\t\t415,\n\t\t423,\n\t\t424,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t425,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t151,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t344,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t341,\n\t\t0,\n\t\t342,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t344,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t341,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t146,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t143,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t426,\n\t\t426,\n\t\t258,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t427,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t350,\n\t\t351,\n\t\t352,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t351,\n\t\t351,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t428,\n\t\t428,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t429,\n\t\t428,\n\t\t428,\n\t\t353,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t430,\n\t\t137,\n\t\t246,\n\t\t431,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t432,\n\t\t116,\n\t\t433,\n\t\t434,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t435,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t180,\n\t\t180,\n\t\t269,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t358,\n\t\t359,\n\t\t360,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t359,\n\t\t359,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t436,\n\t\t436,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t437,\n\t\t436,\n\t\t436,\n\t\t361,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t438,\n\t\t439,\n\t\t440,\n\t\t441,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t443,\n\t\t274,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t443,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t444,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t367,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t364,\n\t\t116,\n\t\t365,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t367,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t364,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t446,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t449,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t373,\n\t\t450,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t369,\n\t\t370,\n\t\t371,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t373,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t369,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t451,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t449,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t451,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t375,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t279,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t446,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t380,\n\t\t450,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t377,\n\t\t370,\n\t\t378,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t380,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t377,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t187,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t184,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t452,\n\t\t452,\n\t\t295,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t453,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t175,\n\t\t386,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t454,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t455,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t458,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t391,\n\t\t459,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t387,\n\t\t388,\n\t\t389,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t391,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t387,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t460,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t458,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t460,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t393,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t299,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t455,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t398,\n\t\t459,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t395,\n\t\t388,\n\t\t396,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t398,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t395,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t213,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t210,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t461,\n\t\t461,\n\t\t315,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t462,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t201,\n\t\t404,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t463,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t318,\n\t\t406,\n\t\t406,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t322,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t409,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t464,\n\t\t465,\n\t\t466,\n\t\t467,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t468,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t470,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t471,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t472,\n\t\t465,\n\t\t473,\n\t\t474,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t475,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t239,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t236,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t476,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t477,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t480,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t418,\n\t\t481,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t414,\n\t\t415,\n\t\t416,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t418,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t414,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t482,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t480,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t482,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t420,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t337,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t477,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t425,\n\t\t481,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t422,\n\t\t415,\n\t\t423,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t425,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t422,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t258,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t255,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t483,\n\t\t483,\n\t\t353,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t484,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t246,\n\t\t431,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t485,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t444,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t435,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t432,\n\t\t116,\n\t\t433,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t435,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t432,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t486,\n\t\t486,\n\t\t361,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t487,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t439,\n\t\t440,\n\t\t441,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t440,\n\t\t440,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t488,\n\t\t488,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t489,\n\t\t488,\n\t\t488,\n\t\t442,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t490,\n\t\t491,\n\t\t492,\n\t\t493,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t495,\n\t\t0,\n\t\t496,\n\t\t497,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t498,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t116,\n\t\t445,\n\t\t445,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t120,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t225,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t370,\n\t\t447,\n\t\t447,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t374,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t450,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t499,\n\t\t500,\n\t\t501,\n\t\t502,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t503,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t505,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t506,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t507,\n\t\t500,\n\t\t508,\n\t\t509,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t510,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t295,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t292,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t511,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t388,\n\t\t456,\n\t\t456,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t392,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t459,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t512,\n\t\t513,\n\t\t514,\n\t\t515,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t516,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t518,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t519,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t520,\n\t\t513,\n\t\t521,\n\t\t522,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t523,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t315,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t312,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t524,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t525,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t528,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t468,\n\t\t529,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t464,\n\t\t465,\n\t\t466,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t468,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t464,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t530,\n\t\t64,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t528,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t530,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t470,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t407,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t525,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t475,\n\t\t529,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t472,\n\t\t465,\n\t\t473,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t475,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t472,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t415,\n\t\t478,\n\t\t478,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t419,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t481,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t531,\n\t\t532,\n\t\t533,\n\t\t534,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t535,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t537,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t538,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t539,\n\t\t532,\n\t\t540,\n\t\t541,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t542,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t353,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t350,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t543,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t361,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t358,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t544,\n\t\t544,\n\t\t442,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t545,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t491,\n\t\t492,\n\t\t493,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t492,\n\t\t492,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t546,\n\t\t546,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t547,\n\t\t546,\n\t\t546,\n\t\t494,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t548,\n\t\t549,\n\t\t368,\n\t\t550,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t274,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t498,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t495,\n\t\t0,\n\t\t496,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t498,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t495,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t551,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t554,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t503,\n\t\t555,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t499,\n\t\t500,\n\t\t501,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t503,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t499,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t556,\n\t\t90,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t554,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t556,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t505,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t448,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t551,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t510,\n\t\t555,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t507,\n\t\t500,\n\t\t508,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t510,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t507,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t76,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t557,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t560,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t516,\n\t\t561,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t512,\n\t\t513,\n\t\t514,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t516,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t512,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t562,\n\t\t111,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t560,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t562,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t518,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t457,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t557,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t523,\n\t\t561,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t520,\n\t\t513,\n\t\t521,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t523,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t520,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t97,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t465,\n\t\t526,\n\t\t526,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t469,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t529,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t563,\n\t\t66,\n\t\t564,\n\t\t565,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t566,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t567,\n\t\t0,\n\t\t123,\n\t\t123,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t568,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t569,\n\t\t66,\n\t\t570,\n\t\t571,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t572,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t573,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t576,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t535,\n\t\t577,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t531,\n\t\t532,\n\t\t533,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t535,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t531,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t578,\n\t\t151,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t576,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t578,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t537,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t479,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t573,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t542,\n\t\t577,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t539,\n\t\t532,\n\t\t540,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t542,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t539,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t137,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t442,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t439,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t579,\n\t\t579,\n\t\t494,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t580,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t549,\n\t\t368,\n\t\t550,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t368,\n\t\t368,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t162,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t362,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t581,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t161,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t500,\n\t\t552,\n\t\t552,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t504,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t555,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t582,\n\t\t91,\n\t\t583,\n\t\t584,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t585,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t586,\n\t\t0,\n\t\t177,\n\t\t177,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t587,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t588,\n\t\t91,\n\t\t589,\n\t\t590,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t591,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t513,\n\t\t558,\n\t\t558,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t517,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t561,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t592,\n\t\t112,\n\t\t593,\n\t\t594,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t595,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t596,\n\t\t0,\n\t\t203,\n\t\t203,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t597,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t598,\n\t\t112,\n\t\t599,\n\t\t600,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t601,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t602,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t566,\n\t\t165,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t563,\n\t\t66,\n\t\t564,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t566,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t563,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t567,\n\t\t0,\n\t\t121,\n\t\t121,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t42,\n\t\t0,\n\t\t527,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t602,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t165,\n\t\t44,\n\t\t44,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t572,\n\t\t165,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t569,\n\t\t66,\n\t\t570,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t572,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t569,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t532,\n\t\t574,\n\t\t574,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t536,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t577,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t603,\n\t\t152,\n\t\t604,\n\t\t605,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t606,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t607,\n\t\t0,\n\t\t248,\n\t\t248,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t608,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t609,\n\t\t152,\n\t\t610,\n\t\t611,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t612,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t494,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t491,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t613,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t614,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t585,\n\t\t194,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t582,\n\t\t91,\n\t\t583,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t585,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t582,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t586,\n\t\t0,\n\t\t175,\n\t\t175,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t78,\n\t\t0,\n\t\t553,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t614,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t194,\n\t\t80,\n\t\t80,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t591,\n\t\t194,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t588,\n\t\t91,\n\t\t589,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t591,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t588,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t615,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t595,\n\t\t220,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t592,\n\t\t112,\n\t\t593,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t595,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t592,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t596,\n\t\t0,\n\t\t201,\n\t\t201,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t99,\n\t\t0,\n\t\t559,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t615,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t220,\n\t\t101,\n\t\t101,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t601,\n\t\t220,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t598,\n\t\t112,\n\t\t599,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t601,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t598,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t66,\n\t\t67,\n\t\t67,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t10,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t68,\n\t\t0,\n\t\t0,\n\t\t16,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t616,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t606,\n\t\t265,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t603,\n\t\t152,\n\t\t604,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t606,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t603,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t607,\n\t\t0,\n\t\t246,\n\t\t246,\n\t\t0,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t139,\n\t\t0,\n\t\t575,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t616,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t265,\n\t\t141,\n\t\t141,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t612,\n\t\t265,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t609,\n\t\t152,\n\t\t610,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t612,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t609,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t549,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t91,\n\t\t92,\n\t\t92,\n\t\t22,\n\t\t23,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t93,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t112,\n\t\t113,\n\t\t113,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t34,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t114,\n\t\t0,\n\t\t0,\n\t\t37,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t152,\n\t\t153,\n\t\t153,\n\t\t57,\n\t\t58,\n\t\t0,\n\t\t59,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t154,\n\t\t0,\n\t\t0,\n\t\t62,\n\t\t0\n\t]\n];\nvar accepting$1 = [\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue\n];\nvar tags$1 = [\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"consonant_syllable\",\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"consonant_syllable\"\n\t],\n\t[\n\t\t\"vowel_syllable\"\n\t],\n\t[\n\t\t\"standalone_cluster\"\n\t]\n];\nvar indicMachine = {\n\tstateTable: stateTable$1,\n\taccepting: accepting$1,\n\ttags: tags$1\n};\n\nvar categories$1 = [\n\t\"O\",\n\t\"IND\",\n\t\"S\",\n\t\"GB\",\n\t\"B\",\n\t\"FM\",\n\t\"CGJ\",\n\t\"VMAbv\",\n\t\"VMPst\",\n\t\"VAbv\",\n\t\"VPst\",\n\t\"CMBlw\",\n\t\"VPre\",\n\t\"VBlw\",\n\t\"H\",\n\t\"VMBlw\",\n\t\"CMAbv\",\n\t\"MBlw\",\n\t\"CS\",\n\t\"R\",\n\t\"SUB\",\n\t\"MPst\",\n\t\"MPre\",\n\t\"FAbv\",\n\t\"FPst\",\n\t\"FBlw\",\n\t\"null\",\n\t\"SMAbv\",\n\t\"SMBlw\",\n\t\"VMPre\",\n\t\"ZWNJ\",\n\t\"ZWJ\",\n\t\"WJ\",\n\t\"M\",\n\t\"VS\",\n\t\"N\",\n\t\"HN\",\n\t\"MAbv\"\n];\nvar decompositions$2 = {\n\t\"2507\": [\n\t\t2503,\n\t\t2494\n\t],\n\t\"2508\": [\n\t\t2503,\n\t\t2519\n\t],\n\t\"2888\": [\n\t\t2887,\n\t\t2902\n\t],\n\t\"2891\": [\n\t\t2887,\n\t\t2878\n\t],\n\t\"2892\": [\n\t\t2887,\n\t\t2903\n\t],\n\t\"3018\": [\n\t\t3014,\n\t\t3006\n\t],\n\t\"3019\": [\n\t\t3015,\n\t\t3006\n\t],\n\t\"3020\": [\n\t\t3014,\n\t\t3031\n\t],\n\t\"3144\": [\n\t\t3142,\n\t\t3158\n\t],\n\t\"3264\": [\n\t\t3263,\n\t\t3285\n\t],\n\t\"3271\": [\n\t\t3270,\n\t\t3285\n\t],\n\t\"3272\": [\n\t\t3270,\n\t\t3286\n\t],\n\t\"3274\": [\n\t\t3270,\n\t\t3266\n\t],\n\t\"3275\": [\n\t\t3270,\n\t\t3266,\n\t\t3285\n\t],\n\t\"3402\": [\n\t\t3398,\n\t\t3390\n\t],\n\t\"3403\": [\n\t\t3399,\n\t\t3390\n\t],\n\t\"3404\": [\n\t\t3398,\n\t\t3415\n\t],\n\t\"3546\": [\n\t\t3545,\n\t\t3530\n\t],\n\t\"3548\": [\n\t\t3545,\n\t\t3535\n\t],\n\t\"3549\": [\n\t\t3545,\n\t\t3535,\n\t\t3530\n\t],\n\t\"3550\": [\n\t\t3545,\n\t\t3551\n\t],\n\t\"3635\": [\n\t\t3661,\n\t\t3634\n\t],\n\t\"3763\": [\n\t\t3789,\n\t\t3762\n\t],\n\t\"3955\": [\n\t\t3953,\n\t\t3954\n\t],\n\t\"3957\": [\n\t\t3953,\n\t\t3956\n\t],\n\t\"3958\": [\n\t\t4018,\n\t\t3968\n\t],\n\t\"3959\": [\n\t\t4018,\n\t\t3953,\n\t\t3968\n\t],\n\t\"3960\": [\n\t\t4019,\n\t\t3968\n\t],\n\t\"3961\": [\n\t\t4019,\n\t\t3953,\n\t\t3968\n\t],\n\t\"3969\": [\n\t\t3953,\n\t\t3968\n\t],\n\t\"6971\": [\n\t\t6970,\n\t\t6965\n\t],\n\t\"6973\": [\n\t\t6972,\n\t\t6965\n\t],\n\t\"6976\": [\n\t\t6974,\n\t\t6965\n\t],\n\t\"6977\": [\n\t\t6975,\n\t\t6965\n\t],\n\t\"6979\": [\n\t\t6978,\n\t\t6965\n\t],\n\t\"69934\": [\n\t\t69937,\n\t\t69927\n\t],\n\t\"69935\": [\n\t\t69938,\n\t\t69927\n\t],\n\t\"70475\": [\n\t\t70471,\n\t\t70462\n\t],\n\t\"70476\": [\n\t\t70471,\n\t\t70487\n\t],\n\t\"70843\": [\n\t\t70841,\n\t\t70842\n\t],\n\t\"70844\": [\n\t\t70841,\n\t\t70832\n\t],\n\t\"70846\": [\n\t\t70841,\n\t\t70845\n\t],\n\t\"71098\": [\n\t\t71096,\n\t\t71087\n\t],\n\t\"71099\": [\n\t\t71097,\n\t\t71087\n\t]\n};\nvar stateTable = [\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t2,\n\t\t2,\n\t\t3,\n\t\t4,\n\t\t4,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t0,\n\t\t17,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t2,\n\t\t0,\n\t\t0,\n\t\t24,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t26,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t28,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t34,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t39,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t39,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t9,\n\t\t0,\n\t\t0,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t11,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t4,\n\t\t4,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t10,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t15,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t48,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t48,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t49,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t11,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t21,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t51,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t0,\n\t\t11,\n\t\t12,\n\t\t0,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t11,\n\t\t0,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t27,\n\t\t28,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t28,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t34,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t33,\n\t\t0,\n\t\t0,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t34,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t39,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t52,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t52,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t53,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t44,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t0,\n\t\t35,\n\t\t36,\n\t\t0,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t35,\n\t\t0,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t48,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t0,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t5,\n\t\t0,\n\t\t6,\n\t\t7,\n\t\t8,\n\t\t9,\n\t\t48,\n\t\t11,\n\t\t12,\n\t\t13,\n\t\t14,\n\t\t48,\n\t\t16,\n\t\t0,\n\t\t0,\n\t\t18,\n\t\t11,\n\t\t19,\n\t\t20,\n\t\t21,\n\t\t22,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t23,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t25\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t51,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t54,\n\t\t0,\n\t\t0\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t52,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t0,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t29,\n\t\t0,\n\t\t30,\n\t\t31,\n\t\t32,\n\t\t33,\n\t\t52,\n\t\t35,\n\t\t36,\n\t\t37,\n\t\t38,\n\t\t52,\n\t\t40,\n\t\t0,\n\t\t0,\n\t\t41,\n\t\t35,\n\t\t42,\n\t\t43,\n\t\t44,\n\t\t45,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t46,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t47\n\t],\n\t[\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\t50,\n\t\t0,\n\t\t51,\n\t\t0\n\t]\n];\nvar accepting = [\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\tfalse,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue,\n\ttrue\n];\nvar tags = [\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"independent_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"numeral_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"independent_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"symbol_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"virama_terminated_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"broken_cluster\"\n\t],\n\t[\n\t\t\"numeral_cluster\"\n\t],\n\t[\n\t\t\"number_joiner_terminated_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"standard_cluster\"\n\t],\n\t[\n\t\t\"numeral_cluster\"\n\t]\n];\nvar useData = {\n\tcategories: categories$1,\n\tdecompositions: decompositions$2,\n\tstateTable: stateTable,\n\taccepting: accepting,\n\ttags: tags\n};\n\n// Updated: 417af0c79c5664271a07a783574ec7fac7ebad0c\n// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nvar CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,\n  // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14,\n  // Khmer-style Virama.\n  Repha: 1 << 15,\n  // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,\n  // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n\n}; // Visual positions in a syllable from left to right.\n\nvar POSITIONS = {\n  Start: 1 << 0,\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n  Above_C: 1 << 6,\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n  End: 1 << 15\n};\nvar CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nvar JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nvar HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\nvar INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n}; // Additional decompositions that aren't in Unicode\n\nvar INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n\nvar type$1 = \"Buffer\";\nvar data$1 = [\n\t0,\n\t17,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t216,\n\t96,\n\t1,\n\t102,\n\t15,\n\t153,\n\t240,\n\t237,\n\t157,\n\t123,\n\t140,\n\t92,\n\t85,\n\t29,\n\t199,\n\t239,\n\t238,\n\t206,\n\t206,\n\t204,\n\t238,\n\t204,\n\t238,\n\t116,\n\t11,\n\t68,\n\t8,\n\t98,\n\t81,\n\t32,\n\t196,\n\t80,\n\t109,\n\t64,\n\t34,\n\t182,\n\t20,\n\t22,\n\t144,\n\t96,\n\t10,\n\t137,\n\t88,\n\t77,\n\t164,\n\t85,\n\t81,\n\t68,\n\t9,\n\t136,\n\t65,\n\t80,\n\t131,\n\t144,\n\t54,\n\t8,\n\t8,\n\t106,\n\t45,\n\t32,\n\t15,\n\t65,\n\t76,\n\t44,\n\t252,\n\t33,\n\t229,\n\t47,\n\t138,\n\t254,\n\t193,\n\t67,\n\t99,\n\t193,\n\t180,\n\t18,\n\t17,\n\t44,\n\t16,\n\t80,\n\t33,\n\t96,\n\t20,\n\t176,\n\t168,\n\t53,\n\t4,\n\t172,\n\t81,\n\t2,\n\t162,\n\t32,\n\t126,\n\t207,\n\t220,\n\t115,\n\t230,\n\t158,\n\t57,\n\t115,\n\t222,\n\t143,\n\t123,\n\t103,\n\t101,\n\t126,\n\t201,\n\t39,\n\t247,\n\t113,\n\t206,\n\t61,\n\t231,\n\t119,\n\t126,\n\t191,\n\t243,\n\t190,\n\t119,\n\t103,\n\t151,\n\t212,\n\t178,\n\t236,\n\t96,\n\t176,\n\t12,\n\t28,\n\t1,\n\t78,\n\t6,\n\t167,\n\t128,\n\t79,\n\t128,\n\t207,\n\t130,\n\t119,\n\t131,\n\t247,\n\t70,\n\t56,\n\t158,\n\t14,\n\t206,\n\t6,\n\t95,\n\t2,\n\t235,\n\t28,\n\t158,\n\t91,\n\t15,\n\t46,\n\t3,\n\t27,\n\t192,\n\t53,\n\t224,\n\t187,\n\t224,\n\t102,\n\t176,\n\t25,\n\t108,\n\t1,\n\t119,\n\t130,\n\t123,\n\t52,\n\t207,\n\t95,\n\t0,\n\t46,\n\t6,\n\t63,\n\t7,\n\t191,\n\t2,\n\t247,\n\t131,\n\t71,\n\t192,\n\t19,\n\t224,\n\t105,\n\t176,\n\t4,\n\t252,\n\t5,\n\t252,\n\t13,\n\t188,\n\t12,\n\t230,\n\t193,\n\t127,\n\t65,\n\t125,\n\t50,\n\t15,\n\t155,\n\t197,\n\t113,\n\t79,\n\t240,\n\t86,\n\t112,\n\t32,\n\t88,\n\t10,\n\t14,\n\t3,\n\t43,\n\t192,\n\t113,\n\t224,\n\t68,\n\t240,\n\t33,\n\t176,\n\t6,\n\t156,\n\t6,\n\t206,\n\t2,\n\t95,\n\t0,\n\t95,\n\t1,\n\t95,\n\t5,\n\t223,\n\t0,\n\t87,\n\t130,\n\t235,\n\t193,\n\t38,\n\t176,\n\t25,\n\t108,\n\t1,\n\t119,\n\t130,\n\t173,\n\t224,\n\t62,\n\t240,\n\t32,\n\t120,\n\t12,\n\t60,\n\t5,\n\t254,\n\t8,\n\t118,\n\t129,\n\t221,\n\t224,\n\t21,\n\t240,\n\t6,\n\t152,\n\t172,\n\t103,\n\t217,\n\t12,\n\t216,\n\t11,\n\t236,\n\t7,\n\t14,\n\t4,\n\t75,\n\t193,\n\t225,\n\t96,\n\t37,\n\t56,\n\t22,\n\t172,\n\t170,\n\t231,\n\t186,\n\t175,\n\t198,\n\t113,\n\t13,\n\t56,\n\t141,\n\t94,\n\t159,\n\t133,\n\t227,\n\t121,\n\t224,\n\t66,\n\t112,\n\t17,\n\t184,\n\t28,\n\t92,\n\t1,\n\t190,\n\t67,\n\t195,\n\t191,\n\t143,\n\t227,\n\t45,\n\t224,\n\t54,\n\t112,\n\t7,\n\t216,\n\t90,\n\t207,\n\t203,\n\t125,\n\t31,\n\t61,\n\t218,\n\t242,\n\t32,\n\t141,\n\t255,\n\t24,\n\t142,\n\t191,\n\t4,\n\t79,\n\t209,\n\t235,\n\t199,\n\t233,\n\t241,\n\t58,\n\t240,\n\t12,\n\t206,\n\t31,\n\t226,\n\t158,\n\t217,\n\t229,\n\t152,\n\t135,\n\t13,\n\t207,\n\t112,\n\t105,\n\t238,\n\t198,\n\t249,\n\t43,\n\t224,\n\t13,\n\t208,\n\t104,\n\t100,\n\t89,\n\t7,\n\t188,\n\t5,\n\t44,\n\t1,\n\t7,\n\t131,\n\t101,\n\t224,\n\t136,\n\t70,\n\t127,\n\t124,\n\t114,\n\t156,\n\t167,\n\t247,\n\t30,\n\t6,\n\t31,\n\t192,\n\t249,\n\t201,\n\t224,\n\t20,\n\t240,\n\t169,\n\t70,\n\t110,\n\t175,\n\t51,\n\t113,\n\t60,\n\t151,\n\t198,\n\t185,\n\t128,\n\t222,\n\t187,\n\t24,\n\t199,\n\t111,\n\t130,\n\t171,\n\t27,\n\t121,\n\t125,\n\t154,\n\t167,\n\t220,\n\t136,\n\t235,\n\t77,\n\t96,\n\t51,\n\t184,\n\t13,\n\t220,\n\t1,\n\t182,\n\t210,\n\t103,\n\t238,\n\t163,\n\t199,\n\t29,\n\t56,\n\t254,\n\t134,\n\t166,\n\t247,\n\t84,\n\t131,\n\t218,\n\t10,\n\t199,\n\t63,\n\t55,\n\t244,\n\t101,\n\t125,\n\t209,\n\t16,\n\t206,\n\t219,\n\t248,\n\t37,\n\t196,\n\t221,\n\t65,\n\t239,\n\t221,\n\t13,\n\t94,\n\t195,\n\t117,\n\t173,\n\t153,\n\t101,\n\t237,\n\t102,\n\t17,\n\t119,\n\t15,\n\t156,\n\t239,\n\t75,\n\t175,\n\t79,\n\t2,\n\t7,\n\t52,\n\t7,\n\t211,\n\t59,\n\t68,\n\t114,\n\t47,\n\t148,\n\t195,\n\t154,\n\t121,\n\t219,\n\t115,\n\t121,\n\t102,\n\t69,\n\t2,\n\t61,\n\t82,\n\t115,\n\t52,\n\t116,\n\t62,\n\t94,\n\t162,\n\t247,\n\t243,\n\t224,\n\t90,\n\t73,\n\t252,\n\t19,\n\t105,\n\t92,\n\t214,\n\t22,\n\t87,\n\t227,\n\t122,\n\t45,\n\t248,\n\t52,\n\t133,\n\t143,\n\t123,\n\t36,\n\t173,\n\t111,\n\t159,\n\t227,\n\t238,\n\t175,\n\t208,\n\t232,\n\t66,\n\t234,\n\t246,\n\t23,\n\t185,\n\t184,\n\t223,\n\t166,\n\t199,\n\t13,\n\t66,\n\t188,\n\t11,\n\t155,\n\t121,\n\t255,\n\t203,\n\t235,\n\t186,\n\t142,\n\t62,\n\t247,\n\t181,\n\t166,\n\t92,\n\t111,\n\t134,\n\t46,\n\t108,\n\t196,\n\t136,\n\t17,\n\t126,\n\t60,\n\t60,\n\t4,\n\t58,\n\t140,\n\t24,\n\t49,\n\t98,\n\t196,\n\t136,\n\t17,\n\t35,\n\t70,\n\t140,\n\t88,\n\t120,\n\t28,\n\t57,\n\t4,\n\t58,\n\t136,\n\t60,\n\t71,\n\t215,\n\t186,\n\t223,\n\t114,\n\t88,\n\t223,\n\t175,\n\t84,\n\t220,\n\t95,\n\t174,\n\t121,\n\t230,\n\t90,\n\t164,\n\t127,\n\t61,\n\t216,\n\t4,\n\t54,\n\t131,\n\t45,\n\t224,\n\t78,\n\t112,\n\t15,\n\t216,\n\t14,\n\t30,\n\t0,\n\t143,\n\t130,\n\t39,\n\t193,\n\t179,\n\t96,\n\t87,\n\t51,\n\t223,\n\t91,\n\t218,\n\t141,\n\t227,\n\t63,\n\t193,\n\t127,\n\t192,\n\t196,\n\t84,\n\t150,\n\t181,\n\t192,\n\t28,\n\t216,\n\t7,\n\t188,\n\t125,\n\t42,\n\t223,\n\t207,\n\t121,\n\t39,\n\t142,\n\t135,\n\t130,\n\t229,\n\t224,\n\t88,\n\t112,\n\t6,\n\t45,\n\t203,\n\t102,\n\t46,\n\t255,\n\t85,\n\t184,\n\t191,\n\t122,\n\t170,\n\t122,\n\t123,\n\t143,\n\t24,\n\t49,\n\t98,\n\t196,\n\t155,\n\t9,\n\t178,\n\t111,\n\t185,\n\t22,\n\t125,\n\t239,\n\t251,\n\t106,\n\t197,\n\t62,\n\t125,\n\t85,\n\t84,\n\t109,\n\t139,\n\t17,\n\t35,\n\t70,\n\t196,\n\t225,\n\t4,\n\t110,\n\t206,\n\t74,\n\t222,\n\t115,\n\t206,\n\t131,\n\t211,\n\t208,\n\t207,\n\t156,\n\t5,\n\t206,\n\t19,\n\t230,\n\t122,\n\t23,\n\t58,\n\t206,\n\t253,\n\t78,\n\t162,\n\t199,\n\t121,\n\t154,\n\t199,\n\t81,\n\t224,\n\t146,\n\t169,\n\t226,\n\t125,\n\t234,\n\t6,\n\t156,\n\t95,\n\t45,\n\t164,\n\t121,\n\t195,\n\t84,\n\t241,\n\t94,\n\t135,\n\t135,\n\t188,\n\t151,\n\t185,\n\t9,\n\t97,\n\t183,\n\t14,\n\t193,\n\t252,\n\t243,\n\t181,\n\t69,\n\t57,\n\t43,\n\t231,\n\t96,\n\t35,\n\t240,\n\t147,\n\t69,\n\t102,\n\t54,\n\t32,\n\t222,\n\t3,\n\t138,\n\t184,\n\t47,\n\t224,\n\t254,\n\t254,\n\t139,\n\t179,\n\t108,\n\t13,\n\t184,\n\t6,\n\t60,\n\t186,\n\t184,\n\t63,\n\t252,\n\t247,\n\t8,\n\t111,\n\t238,\n\t145,\n\t101,\n\t123,\n\t131,\n\t53,\n\t224,\n\t146,\n\t233,\n\t44,\n\t219,\n\t6,\n\t178,\n\t86,\n\t150,\n\t29,\n\t3,\n\t46,\n\t33,\n\t71,\n\t114,\n\t143,\n\t30,\n\t119,\n\t210,\n\t35,\n\t207,\n\t59,\n\t218,\n\t89,\n\t246,\n\t189,\n\t177,\n\t156,\n\t211,\n\t113,\n\t254,\n\t131,\n\t246,\n\t96,\n\t156,\n\t157,\n\t184,\n\t55,\n\t62,\n\t83,\n\t92,\n\t31,\n\t135,\n\t243,\n\t75,\n\t193,\n\t118,\n\t48,\n\t54,\n\t139,\n\t117,\n\t1,\n\t184,\n\t116,\n\t182,\n\t72,\n\t39,\n\t22,\n\t219,\n\t105,\n\t154,\n\t175,\n\t226,\n\t184,\n\t188,\n\t147,\n\t159,\n\t31,\n\t223,\n\t233,\n\t143,\n\t179,\n\t174,\n\t147,\n\t235,\n\t244,\n\t211,\n\t206,\n\t160,\n\t222,\n\t35,\n\t70,\n\t140,\n\t24,\n\t49,\n\t162,\n\t28,\n\t254,\n\t93,\n\t113,\n\t31,\n\t28,\n\t123,\n\t252,\n\t113,\n\t97,\n\t197,\n\t162,\n\t234,\n\t243,\n\t159,\n\t175,\n\t189,\n\t185,\n\t185,\n\t28,\n\t220,\n\t142,\n\t121,\n\t224,\n\t93,\n\t83,\n\t131,\n\t235,\n\t81,\n\t242,\n\t157,\n\t207,\n\t189,\n\t184,\n\t191,\n\t141,\n\t155,\n\t39,\n\t222,\n\t143,\n\t243,\n\t71,\n\t166,\n\t242,\n\t249,\n\t232,\n\t14,\n\t73,\n\t122,\n\t236,\n\t251,\n\t187,\n\t39,\n\t232,\n\t250,\n\t154,\n\t156,\n\t63,\n\t61,\n\t149,\n\t127,\n\t83,\n\t71,\n\t210,\n\t219,\n\t73,\n\t211,\n\t122,\n\t94,\n\t146,\n\t223,\n\t18,\n\t154,\n\t230,\n\t63,\n\t16,\n\t246,\n\t50,\n\t247,\n\t60,\n\t219,\n\t55,\n\t125,\n\t125,\n\t202,\n\t111,\n\t253,\n\t76,\n\t190,\n\t153,\n\t34,\n\t223,\n\t76,\n\t28,\n\t37,\n\t209,\n\t119,\n\t18,\n\t109,\n\t160,\n\t9,\n\t22,\n\t77,\n\t23,\n\t115,\n\t227,\n\t189,\n\t167,\n\t243,\n\t176,\n\t253,\n\t113,\n\t60,\n\t24,\n\t44,\n\t155,\n\t238,\n\t207,\n\t239,\n\t136,\n\t233,\n\t98,\n\t30,\n\t62,\n\t143,\n\t243,\n\t19,\n\t192,\n\t7,\n\t167,\n\t139,\n\t252,\n\t88,\n\t188,\n\t143,\n\t210,\n\t123,\n\t159,\n\t156,\n\t206,\n\t191,\n\t251,\n\t58,\n\t3,\n\t199,\n\t207,\n\t131,\n\t47,\n\t79,\n\t15,\n\t234,\n\t191,\n\t126,\n\t186,\n\t184,\n\t94,\n\t70,\n\t211,\n\t190,\n\t140,\n\t62,\n\t191,\n\t113,\n\t218,\n\t236,\n\t199,\n\t121,\n\t170,\n\t187,\n\t204,\n\t62,\n\t196,\n\t126,\n\t15,\n\t73,\n\t194,\n\t136,\n\t93,\n\t174,\n\t67,\n\t218,\n\t55,\n\t130,\n\t155,\n\t193,\n\t45,\n\t224,\n\t54,\n\t240,\n\t35,\n\t240,\n\t99,\n\t112,\n\t47,\n\t248,\n\t5,\n\t120,\n\t8,\n\t252,\n\t22,\n\t252,\n\t14,\n\t236,\n\t4,\n\t187,\n\t192,\n\t110,\n\t240,\n\t10,\n\t120,\n\t3,\n\t212,\n\t90,\n\t69,\n\t154,\n\t109,\n\t156,\n\t239,\n\t9,\n\t246,\n\t5,\n\t7,\n\t128,\n\t67,\n\t192,\n\t161,\n\t96,\n\t57,\n\t56,\n\t182,\n\t53,\n\t168,\n\t195,\n\t189,\n\t208,\n\t97,\n\t21,\n\t238,\n\t175,\n\t166,\n\t97,\n\t107,\n\t113,\n\t60,\n\t21,\n\t156,\n\t33,\n\t137,\n\t203,\n\t226,\n\t159,\n\t131,\n\t176,\n\t243,\n\t91,\n\t197,\n\t245,\n\t69,\n\t56,\n\t255,\n\t58,\n\t184,\n\t10,\n\t252,\n\t12,\n\t215,\n\t55,\n\t224,\n\t120,\n\t19,\n\t13,\n\t191,\n\t21,\n\t199,\n\t219,\n\t21,\n\t105,\n\t17,\n\t72,\n\t252,\n\t187,\n\t90,\n\t131,\n\t54,\n\t35,\n\t156,\n\t42,\n\t169,\n\t111,\n\t221,\n\t60,\n\t17,\n\t127,\n\t59,\n\t120,\n\t16,\n\t60,\n\t6,\n\t30,\n\t7,\n\t127,\n\t104,\n\t229,\n\t123,\n\t255,\n\t127,\n\t194,\n\t241,\n\t133,\n\t86,\n\t254,\n\t252,\n\t238,\n\t186,\n\t217,\n\t103,\n\t47,\n\t33,\n\t238,\n\t171,\n\t96,\n\t12,\n\t235,\n\t133,\n\t58,\n\t104,\n\t129,\n\t185,\n\t118,\n\t17,\n\t190,\n\t15,\n\t206,\n\t247,\n\t3,\n\t7,\n\t129,\n\t119,\n\t129,\n\t247,\n\t180,\n\t139,\n\t178,\n\t153,\n\t56,\n\t178,\n\t173,\n\t14,\n\t35,\n\t250,\n\t189,\n\t191,\n\t93,\n\t254,\n\t122,\n\t79,\n\t172,\n\t135,\n\t124,\n\t216,\n\t73,\n\t26,\n\t125,\n\t142,\n\t182,\n\t40,\n\t175,\n\t15,\n\t101,\n\t151,\n\t95,\n\t198,\n\t71,\n\t52,\n\t126,\n\t42,\n\t139,\n\t88,\n\t101,\n\t33,\n\t223,\n\t242,\n\t86,\n\t149,\n\t63,\n\t105,\n\t111,\n\t164,\n\t15,\n\t252,\n\t56,\n\t103,\n\t79,\n\t50,\n\t78,\n\t125,\n\t134,\n\t171,\n\t87,\n\t103,\n\t226,\n\t252,\n\t156,\n\t118,\n\t241,\n\t189,\n\t108,\n\t42,\n\t59,\n\t174,\n\t107,\n\t202,\n\t239,\n\t159,\n\t79,\n\t117,\n\t89,\n\t207,\n\t233,\n\t120,\n\t116,\n\t68,\n\t251,\n\t47,\n\t68,\n\t116,\n\t239,\n\t105,\n\t99,\n\t176,\n\t204,\n\t179,\n\t78,\n\t150,\n\t137,\n\t169,\n\t12,\n\t108,\n\t108,\n\t191,\n\t12,\n\t245,\n\t102,\n\t163,\n\t99,\n\t191,\n\t61,\n\t12,\n\t239,\n\t57,\n\t92,\n\t202,\n\t127,\n\t13,\n\t202,\n\t119,\n\t67,\n\t59,\n\t93,\n\t159,\n\t239,\n\t106,\n\t127,\n\t246,\n\t189,\n\t237,\n\t149,\n\t138,\n\t240,\n\t245,\n\t220,\n\t220,\n\t111,\n\t147,\n\t164,\n\t47,\n\t231,\n\t191,\n\t195,\n\t39,\n\t115,\n\t46,\n\t217,\n\t188,\n\t128,\n\t133,\n\t223,\n\t77,\n\t143,\n\t228,\n\t239,\n\t154,\n\t54,\n\t35,\n\t173,\n\t45,\n\t212,\n\t215,\n\t119,\n\t224,\n\t248,\n\t67,\n\t176,\n\t213,\n\t193,\n\t247,\n\t47,\n\t90,\n\t252,\n\t125,\n\t205,\n\t49,\n\t9,\n\t254,\n\t142,\n\t98,\n\t27,\n\t116,\n\t124,\n\t96,\n\t8,\n\t198,\n\t52,\n\t91,\n\t30,\n\t133,\n\t174,\n\t79,\n\t26,\n\t230,\n\t74,\n\t207,\n\t182,\n\t251,\n\t199,\n\t21,\n\t219,\n\t58,\n\t181,\n\t204,\n\t114,\n\t238,\n\t94,\n\t37,\n\t42,\n\t63,\n\t254,\n\t181,\n\t221,\n\t31,\n\t254,\n\t247,\n\t18,\n\t124,\n\t250,\n\t47,\n\t90,\n\t191,\n\t95,\n\t231,\n\t242,\n\t34,\n\t239,\n\t48,\n\t100,\n\t107,\n\t77,\n\t6,\n\t105,\n\t35,\n\t147,\n\t51,\n\t89,\n\t54,\n\t3,\n\t246,\n\t2,\n\t251,\n\t129,\n\t131,\n\t102,\n\t242,\n\t176,\n\t165,\n\t51,\n\t118,\n\t229,\n\t231,\n\t255,\n\t174,\n\t137,\n\t180,\n\t215,\n\t141,\n\t224,\n\t240,\n\t153,\n\t188,\n\t237,\n\t63,\n\t199,\n\t181,\n\t35,\n\t118,\n\t126,\n\t21,\n\t157,\n\t131,\n\t175,\n\t68,\n\t156,\n\t227,\n\t103,\n\t242,\n\t62,\n\t246,\n\t196,\n\t25,\n\t121,\n\t251,\n\t87,\n\t217,\n\t55,\n\t53,\n\t68,\n\t247,\n\t15,\n\t207,\n\t244,\n\t223,\n\t227,\n\t251,\n\t34,\n\t210,\n\t15,\n\t173,\n\t228,\n\t202,\n\t190,\n\t145,\n\t246,\n\t99,\n\t100,\n\t189,\n\t248,\n\t49,\n\t206,\n\t110,\n\t151,\n\t115,\n\t207,\n\t156,\n\t78,\n\t211,\n\t59,\n\t27,\n\t199,\n\t43,\n\t106,\n\t131,\n\t105,\n\t159,\n\t139,\n\t251,\n\t231,\n\t91,\n\t216,\n\t124,\n\t152,\n\t168,\n\t202,\n\t63,\n\t169,\n\t89,\n\t219,\n\t252,\n\t255,\n\t46,\n\t31,\n\t207,\n\t235,\n\t154,\n\t113,\n\t113,\n\t71,\n\t73,\n\t58,\n\t12,\n\t43,\n\t191,\n\t174,\n\t56,\n\t255,\n\t71,\n\t20,\n\t251,\n\t40,\n\t101,\n\t18,\n\t90,\n\t6,\n\t221,\n\t248,\n\t179,\n\t16,\n\t184,\n\t72,\n\t24,\n\t7,\n\t92,\n\t236,\n\t147,\n\t106,\n\t173,\n\t188,\n\t144,\n\t252,\n\t191,\n\t144,\n\t33,\n\t117,\n\t247,\n\t109,\n\t181,\n\t177,\n\t46,\n\t157,\n\t44,\n\t91,\n\t112,\n\t144,\n\t253,\n\t101,\n\t254,\n\t220,\n\t134,\n\t170,\n\t117,\n\t30,\n\t86,\n\t222,\n\t236,\n\t82,\n\t181,\n\t253,\n\t163,\n\t213,\n\t77,\n\t250,\n\t123,\n\t22,\n\t11,\n\t66,\n\t215,\n\t33,\n\t134,\n\t137,\n\t41,\n\t220,\n\t20,\n\t175,\n\t195,\n\t133,\n\t155,\n\t226,\n\t249,\n\t234,\n\t89,\n\t181,\n\t173,\n\t22,\n\t90,\n\t57,\n\t108,\n\t124,\n\t54,\n\t76,\n\t200,\n\t244,\n\t93,\n\t72,\n\t250,\n\t235,\n\t202,\n\t164,\n\t146,\n\t42,\n\t117,\n\t241,\n\t213,\n\t185,\n\t42,\n\t253,\n\t135,\n\t189,\n\t78,\n\t84,\n\t105,\n\t147,\n\t178,\n\t235,\n\t142,\n\t173,\n\t84,\n\t173,\n\t247,\n\t66,\n\t245,\n\t127,\n\t140,\n\t180,\n\t170,\n\t176,\n\t63,\n\t175,\n\t183,\n\t107,\n\t254,\n\t41,\n\t36,\n\t85,\n\t25,\n\t23,\n\t74,\n\t89,\n\t102,\n\t155,\n\t253,\n\t212,\n\t198,\n\t35,\n\t48,\n\t22,\n\t145,\n\t69,\n\t118,\n\t241,\n\t166,\n\t26,\n\t57,\n\t205,\n\t9,\n\t148,\n\t99,\n\t113,\n\t126,\n\t62,\n\t222,\n\t40,\n\t238,\n\t187,\n\t208,\n\t172,\n\t21,\n\t207,\n\t118,\n\t109,\n\t52,\n\t77,\n\t161,\n\t54,\n\t226,\n\t227,\n\t26,\n\t117,\n\t163,\n\t54,\n\t153,\n\t226,\n\t210,\n\t35,\n\t184,\n\t174,\n\t211,\n\t189,\n\t109,\n\t221,\n\t234,\n\t247,\n\t111,\n\t166,\n\t75,\n\t139,\n\t194,\n\t68,\n\t117,\n\t237,\n\t234,\n\t195,\n\t238,\n\t179,\n\t26,\n\t255,\n\t178,\n\t112,\n\t94,\n\t100,\n\t105,\n\t16,\n\t97,\n\t254,\n\t109,\n\t83,\n\t255,\n\t182,\n\t37,\n\t254,\n\t99,\n\t50,\n\t78,\n\t227,\n\t48,\n\t105,\n\t211,\n\t248,\n\t196,\n\t191,\n\t98,\n\t126,\n\t50,\n\t105,\n\t55,\n\t6,\n\t239,\n\t13,\n\t148,\n\t73,\n\t240,\n\t111,\n\t47,\n\t158,\n\t165,\n\t127,\n\t89,\n\t253,\n\t118,\n\t105,\n\t175,\n\t228,\n\t200,\n\t231,\n\t101,\n\t235,\n\t223,\n\t129,\n\t178,\n\t148,\n\t236,\n\t95,\n\t49,\n\t174,\n\t120,\n\t78,\n\t132,\n\t248,\n\t151,\n\t217,\n\t158,\n\t249,\n\t151,\n\t33,\n\t243,\n\t79,\n\t91,\n\t225,\n\t95,\n\t94,\n\t72,\n\t219,\n\t213,\n\t137,\n\t170,\n\t60,\n\t218,\n\t103,\n\t44,\n\t253,\n\t219,\n\t235,\n\t87,\n\t199,\n\t10,\n\t63,\n\t215,\n\t230,\n\t220,\n\t198,\n\t0,\n\t215,\n\t246,\n\t203,\n\t124,\n\t170,\n\t188,\n\t46,\n\t201,\n\t191,\n\t182,\n\t237,\n\t87,\n\t132,\n\t213,\n\t109,\n\t214,\n\t166,\n\t152,\n\t143,\n\t101,\n\t254,\n\t13,\n\t29,\n\t75,\n\t153,\n\t77,\n\t196,\n\t186,\n\t228,\n\t218,\n\t63,\n\t107,\n\t243,\n\t24,\n\t227,\n\t198,\n\t16,\n\t80,\n\t159,\n\t40,\n\t32,\n\t210,\n\t88,\n\t32,\n\t253,\n\t179,\n\t171,\n\t127,\n\t39,\n\t45,\n\t250,\n\t231,\n\t73,\n\t139,\n\t246,\n\t43,\n\t147,\n\t73,\n\t69,\n\t159,\n\t16,\n\t187,\n\t127,\n\t238,\n\t100,\n\t69,\n\t187,\n\t13,\n\t153,\n\t199,\n\t177,\n\t126,\n\t187,\n\t155,\n\t183,\n\t69,\n\t255,\n\t172,\n\t107,\n\t203,\n\t170,\n\t177,\n\t146,\n\t157,\n\t139,\n\t247,\n\t100,\n\t241,\n\t196,\n\t123,\n\t202,\n\t251,\n\t150,\n\t243,\n\t47,\n\t81,\n\t248,\n\t182,\n\t44,\n\t235,\n\t191,\n\t217,\n\t216,\n\t60,\n\t46,\n\t180,\n\t109,\n\t66,\n\t221,\n\t178,\n\t125,\n\t203,\n\t252,\n\t175,\n\t146,\n\t20,\n\t239,\n\t69,\n\t100,\n\t34,\n\t206,\n\t167,\n\t109,\n\t230,\n\t212,\n\t93,\n\t253,\n\t12,\n\t254,\n\t142,\n\t217,\n\t158,\n\t93,\n\t253,\n\t73,\n\t218,\n\t51,\n\t249,\n\t125,\n\t104,\n\t17,\n\t190,\n\t77,\n\t241,\n\t247,\n\t197,\n\t235,\n\t186,\n\t161,\n\t61,\n\t243,\n\t207,\n\t233,\n\t234,\n\t20,\n\t111,\n\t23,\n\t254,\n\t25,\n\t23,\n\t255,\n\t234,\n\t196,\n\t103,\n\t189,\n\t164,\n\t157,\n\t155,\n\t15,\n\t129,\n\t127,\n\t85,\n\t113,\n\t153,\n\t176,\n\t254,\n\t218,\n\t198,\n\t191,\n\t252,\n\t53,\n\t59,\n\t183,\n\t241,\n\t175,\n\t216,\n\t247,\n\t202,\n\t164,\n\t167,\n\t107,\n\t4,\n\t255,\n\t118,\n\t58,\n\t57,\n\t62,\n\t34,\n\t250,\n\t151,\n\t215,\n\t169,\n\t44,\n\t255,\n\t106,\n\t177,\n\t108,\n\t191,\n\t4,\n\t102,\n\t119,\n\t54,\n\t30,\n\t171,\n\t32,\n\t98,\n\t234,\n\t143,\n\t187,\n\t54,\n\t85,\n\t248,\n\t141,\n\t209,\n\t110,\n\t232,\n\t219,\n\t14,\n\t111,\n\t147,\n\t208,\n\t249,\n\t150,\n\t9,\n\t83,\n\t191,\n\t230,\n\t58,\n\t159,\n\t182,\n\t157,\n\t115,\n\t203,\n\t236,\n\t18,\n\t3,\n\t171,\n\t52,\n\t37,\n\t107,\n\t105,\n\t219,\n\t62,\n\t94,\n\t214,\n\t134,\n\t85,\n\t251,\n\t35,\n\t44,\n\t140,\n\t29,\n\t217,\n\t94,\n\t137,\n\t108,\n\t191,\n\t69,\n\t37,\n\t174,\n\t253,\n\t53,\n\t191,\n\t127,\n\t226,\n\t42,\n\t177,\n\t125,\n\t225,\n\t11,\n\t91,\n\t183,\n\t219,\n\t34,\n\t10,\n\t121,\n\t158,\n\t111,\n\t167,\n\t227,\n\t141,\n\t254,\n\t125,\n\t42,\n\t114,\n\t228,\n\t215,\n\t22,\n\t132,\n\t110,\n\t251,\n\t111,\n\t22,\n\t113,\n\t98,\n\t172,\n\t107,\n\t196,\n\t58,\n\t169,\n\t178,\n\t113,\n\t10,\n\t219,\n\t155,\n\t242,\n\t12,\n\t177,\n\t119,\n\t119,\n\t63,\n\t111,\n\t46,\n\t135,\n\t137,\n\t204,\n\t222,\n\t204,\n\t23,\n\t68,\n\t68,\n\t123,\n\t215,\n\t179,\n\t162,\n\t95,\n\t201,\n\t28,\n\t236,\n\t173,\n\t170,\n\t171,\n\t41,\n\t246,\n\t167,\n\t121,\n\t154,\n\t20,\n\t101,\n\t63,\n\t106,\n\t187,\n\t143,\n\t229,\n\t80,\n\t175,\n\t248,\n\t250,\n\t218,\n\t161,\n\t54,\n\t20,\n\t243,\n\t37,\n\t38,\n\t153,\n\t176,\n\t240,\n\t113,\n\t138,\n\t58,\n\t166,\n\t235,\n\t39,\n\t51,\n\t143,\n\t58,\n\t197,\n\t218,\n\t32,\n\t107,\n\t135,\n\t100,\n\t60,\n\t38,\n\t245,\n\t164,\n\t174,\n\t210,\n\t125,\n\t206,\n\t158,\n\t110,\n\t249,\n\t29,\n\t226,\n\t167,\n\t128,\n\t181,\n\t7,\n\t29,\n\t252,\n\t222,\n\t183,\n\t108,\n\t29,\n\t229,\n\t83,\n\t119,\n\t101,\n\t82,\n\t117,\n\t31,\n\t223,\n\t197,\n\t114,\n\t190,\n\t160,\n\t170,\n\t43,\n\t178,\n\t113,\n\t148,\n\t212,\n\t157,\n\t238,\n\t92,\n\t157,\n\t172,\n\t57,\n\t102,\n\t251,\n\t251,\n\t170,\n\t30,\n\t36,\n\t111,\n\t151,\n\t125,\n\t13,\n\t174,\n\t159,\n\t231,\n\t247,\n\t58,\n\t100,\n\t101,\n\t24,\n\t232,\n\t39,\n\t117,\n\t117,\n\t118,\n\t44,\n\t143,\n\t211,\n\t154,\n\t200,\n\t97,\n\t113,\n\t216,\n\t179,\n\t236,\n\t62,\n\t15,\n\t159,\n\t150,\n\t49,\n\t47,\n\t27,\n\t230,\n\t6,\n\t109,\n\t41,\n\t203,\n\t151,\n\t208,\n\t164,\n\t249,\n\t119,\n\t245,\n\t176,\n\t180,\n\t31,\n\t123,\n\t86,\n\t124,\n\t175,\n\t99,\n\t170,\n\t227,\n\t50,\n\t233,\n\t8,\n\t231,\n\t161,\n\t200,\n\t210,\n\t177,\n\t73,\n\t63,\n\t11,\n\t124,\n\t62,\n\t52,\n\t255,\n\t212,\n\t229,\n\t243,\n\t73,\n\t183,\n\t12,\n\t120,\n\t73,\n\t157,\n\t135,\n\t111,\n\t120,\n\t170,\n\t242,\n\t138,\n\t226,\n\t179,\n\t110,\n\t238,\n\t62,\n\t39,\n\t220,\n\t179,\n\t89,\n\t131,\n\t196,\n\t202,\n\t95,\n\t6,\n\t159,\n\t191,\n\t77,\n\t185,\n\t83,\n\t229,\n\t239,\n\t42,\n\t49,\n\t236,\n\t79,\n\t196,\n\t59,\n\t255,\n\t178,\n\t198,\n\t104,\n\t155,\n\t125,\n\t148,\n\t8,\n\t123,\n\t2,\n\t204,\n\t247,\n\t186,\n\t253,\n\t23,\n\t17,\n\t126,\n\t173,\n\t209,\n\t219,\n\t131,\n\t161,\n\t99,\n\t127,\n\t247,\n\t124,\n\t38,\n\t135,\n\t221,\n\t151,\n\t165,\n\t65,\n\t230,\n\t8,\n\t166,\n\t253,\n\t24,\n\t2,\n\t219,\n\t27,\n\t234,\n\t217,\n\t63,\n\t112,\n\t31,\n\t53,\n\t180,\n\t15,\n\t40,\n\t171,\n\t255,\n\t142,\n\t145,\n\t127,\n\t108,\n\t253,\n\t9,\n\t93,\n\t251,\n\t150,\n\t213,\n\t6,\n\t36,\n\t237,\n\t216,\n\t101,\n\t141,\n\t204,\n\t175,\n\t147,\n\t153,\n\t176,\n\t251,\n\t221,\n\t247,\n\t30,\n\t154,\n\t53,\n\t131,\n\t110,\n\t143,\n\t67,\n\t102,\n\t79,\n\t235,\n\t53,\n\t102,\n\t76,\n\t155,\n\t120,\n\t236,\n\t253,\n\t185,\n\t142,\n\t119,\n\t3,\n\t246,\n\t243,\n\t240,\n\t25,\n\t47,\n\t170,\n\t245,\n\t4,\n\t191,\n\t87,\n\t164,\n\t90,\n\t99,\n\t200,\n\t252,\n\t43,\n\t194,\n\t230,\n\t189,\n\t74,\n\t253,\n\t29,\n\t246,\n\t2,\n\t164,\n\t126,\n\t78,\n\t88,\n\t191,\n\t101,\n\t101,\n\t143,\n\t146,\n\t191,\n\t170,\n\t94,\n\t176,\n\t112,\n\t137,\n\t29,\n\t187,\n\t107,\n\t127,\n\t217,\n\t58,\n\t122,\n\t214,\n\t111,\n\t127,\n\t65,\n\t181,\n\t47,\n\t72,\n\t218,\n\t225,\n\t192,\n\t30,\n\t213,\n\t68,\n\t255,\n\t179,\n\t124,\n\t221,\n\t9,\n\t237,\n\t255,\n\t67,\n\t159,\n\t231,\n\t223,\n\t189,\n\t176,\n\t49,\n\t207,\n\t123,\n\t252,\n\t77,\n\t80,\n\t135,\n\t68,\n\t219,\n\t153,\n\t252,\n\t33,\n\t222,\n\t111,\n\t213,\n\t244,\n\t233,\n\t251,\n\t218,\n\t211,\n\t103,\n\t172,\n\t33,\n\t117,\n\t176,\n\t153,\n\t21,\n\t123,\n\t81,\n\t50,\n\t92,\n\t199,\n\t65,\n\t107,\n\t191,\n\t165,\n\t28,\n\t203,\n\t36,\n\t227,\n\t140,\n\t204,\n\t23,\n\t164,\n\t173,\n\t245,\n\t237,\n\t157,\n\t140,\n\t217,\n\t219,\n\t155,\n\t204,\n\t155,\n\t164,\n\t121,\n\t42,\n\t250,\n\t6,\n\t219,\n\t122,\n\t99,\n\t26,\n\t31,\n\t69,\n\t25,\n\t152,\n\t63,\n\t40,\n\t108,\n\t161,\n\t171,\n\t147,\n\t186,\n\t254,\n\t158,\n\t223,\n\t183,\n\t108,\n\t78,\n\t232,\n\t243,\n\t118,\n\t25,\n\t167,\n\t251,\n\t234,\n\t56,\n\t167,\n\t111,\n\t232,\n\t252,\n\t201,\n\t52,\n\t222,\n\t166,\n\t76,\n\t155,\n\t8,\n\t255,\n\t157,\n\t87,\n\t71,\n\t184,\n\t182,\n\t102,\n\t177,\n\t128,\n\t228,\n\t30,\n\t179,\n\t23,\n\t9,\n\t227,\n\t207,\n\t25,\n\t170,\n\t62,\n\t54,\n\t134,\n\t125,\n\t109,\n\t237,\n\t100,\n\t218,\n\t243,\n\t213,\n\t233,\n\t99,\n\t171,\n\t111,\n\t102,\n\t56,\n\t234,\n\t158,\n\t9,\n\t241,\n\t127,\n\t138,\n\t180,\n\t109,\n\t243,\n\t179,\n\t205,\n\t195,\n\t75,\n\t151,\n\t73,\n\t80,\n\t47,\n\t174,\n\t99,\n\t140,\n\t53,\n\t62,\n\t122,\n\t244,\n\t202,\n\t109,\n\t177,\n\t134,\n\t149,\n\t210,\n\t200,\n\t156,\n\t255,\n\t6,\n\t216,\n\t215,\n\t119,\n\t188,\n\t132,\n\t250,\n\t219,\n\t244,\n\t173,\n\t178,\n\t73,\n\t66,\n\t116,\n\t143,\n\t161,\n\t191,\n\t46,\n\t237,\n\t20,\n\t226,\n\t170,\n\t83,\n\t173,\n\t29,\n\t183,\n\t140,\n\t202,\n\t122,\n\t155,\n\t152,\n\t84,\n\t249,\n\t132,\n\t218,\n\t88,\n\t39,\n\t161,\n\t245,\n\t162,\n\t44,\n\t155,\n\t250,\n\t234,\n\t80,\n\t117,\n\t120,\n\t108,\n\t91,\n\t248,\n\t218,\n\t72,\n\t39,\n\t101,\n\t215,\n\t199,\n\t212,\n\t245,\n\t35,\n\t212,\n\t62,\n\t195,\n\t84,\n\t127,\n\t93,\n\t242,\n\t72,\n\t81,\n\t55,\n\t92,\n\t197,\n\t70,\n\t95,\n\t254,\n\t253,\n\t53,\n\t191,\n\t254,\n\t172,\n\t75,\n\t214,\n\t225,\n\t252,\n\t223,\n\t233,\n\t164,\n\t220,\n\t127,\n\t146,\n\t189,\n\t27,\n\t82,\n\t217,\n\t48,\n\t212,\n\t247,\n\t73,\n\t215,\n\t217,\n\t58,\n\t76,\n\t235,\n\t253,\n\t113,\n\t205,\n\t154,\n\t89,\n\t182,\n\t134,\n\t29,\n\t43,\n\t190,\n\t183,\n\t118,\n\t169,\n\t115,\n\t209,\n\t254,\n\t174,\n\t53,\n\t225,\n\t94,\n\t133,\n\t203,\n\t62,\n\t31,\n\t249,\n\t219,\n\t24,\n\t254,\n\t251,\n\t50,\n\t149,\n\t244,\n\t234,\n\t127,\n\t232,\n\t126,\n\t156,\n\t207,\n\t250,\n\t213,\n\t102,\n\t77,\n\t75,\n\t209,\n\t181,\n\t91,\n\t151,\n\t253,\n\t200,\n\t210,\n\t235,\n\t179,\n\t132,\n\t230,\n\t68,\n\t65,\n\t175,\n\t28,\n\t137,\n\t251,\n\t15,\n\t221,\n\t62,\n\t142,\n\t235,\n\t251,\n\t215,\n\t14,\n\t215,\n\t94,\n\t180,\n\t123,\n\t120,\n\t42,\n\t187,\n\t68,\n\t182,\n\t185,\n\t110,\n\t207,\n\t140,\n\t223,\n\t203,\n\t234,\n\t123,\n\t63,\n\t81,\n\t243,\n\t31,\n\t215,\n\t66,\n\t218,\n\t139,\n\t206,\n\t223,\n\t172,\n\t159,\n\t183,\n\t42,\n\t119,\n\t64,\n\t125,\n\t207,\n\t50,\n\t77,\n\t253,\n\t76,\n\t221,\n\t62,\n\t44,\n\t234,\n\t169,\n\t184,\n\t255,\n\t40,\n\t123,\n\t255,\n\t97,\n\t146,\n\t144,\n\t111,\n\t20,\n\t51,\n\t15,\n\t255,\n\t14,\n\t244,\n\t75,\n\t129,\n\t182,\n\t25,\n\t72,\n\t67,\n\t177,\n\t175,\n\t66,\n\t194,\n\t90,\n\t244,\n\t93,\n\t141,\n\t248,\n\t125,\n\t92,\n\t108,\n\t223,\n\t168,\n\t222,\n\t13,\n\t138,\n\t247,\n\t217,\n\t119,\n\t186,\n\t236,\n\t152,\n\t90,\n\t116,\n\t243,\n\t57,\n\t155,\n\t178,\n\t202,\n\t202,\n\t36,\n\t75,\n\t147,\n\t125,\n\t83,\n\t25,\n\t162,\n\t151,\n\t105,\n\t110,\n\t236,\n\t18,\n\t174,\n\t19,\n\t111,\n\t223,\n\t243,\n\t118,\n\t179,\n\t237,\n\t15,\n\t12,\n\t109,\n\t202,\n\t52,\n\t30,\n\t145,\n\t50,\n\t177,\n\t111,\n\t36,\n\t123,\n\t250,\n\t7,\n\t206,\n\t71,\n\t92,\n\t230,\n\t192,\n\t161,\n\t107,\n\t29,\n\t223,\n\t57,\n\t183,\n\t139,\n\t238,\n\t174,\n\t101,\n\t140,\n\t173,\n\t191,\n\t238,\n\t126,\n\t166,\n\t136,\n\t91,\n\t166,\n\t142,\n\t190,\n\t182,\n\t150,\n\t73,\n\t21,\n\t249,\n\t134,\n\t150,\n\t183,\n\t12,\n\t127,\n\t135,\n\t60,\n\t111,\n\t83,\n\t222,\n\t216,\n\t229,\n\t8,\n\t177,\n\t165,\n\t201,\n\t174,\n\t41,\n\t194,\n\t77,\n\t246,\n\t177,\n\t181,\n\t147,\n\t173,\n\t248,\n\t214,\n\t39,\n\t83,\n\t120,\n\t72,\n\t125,\n\t9,\n\t77,\n\t219,\n\t70,\n\t127,\n\t215,\n\t231,\n\t109,\n\t236,\n\t150,\n\t170,\n\t46,\n\t198,\n\t200,\n\t207,\n\t39,\n\t13,\n\t89,\n\t153,\n\t171,\n\t148,\n\t216,\n\t54,\n\t13,\n\t205,\n\t191,\n\t44,\n\t157,\n\t83,\n\t249,\n\t62,\n\t150,\n\t174,\n\t182,\n\t18,\n\t154,\n\t94,\n\t10,\n\t187,\n\t184,\n\t164,\n\t239,\n\t34,\n\t49,\n\t218,\n\t138,\n\t73,\n\t15,\n\t157,\n\t111,\n\t83,\n\t213,\n\t31,\n\t85,\n\t25,\n\t171,\n\t168,\n\t191,\n\t46,\n\t254,\n\t137,\n\t89,\n\t143,\n\t67,\n\t242,\n\t8,\n\t181,\n\t121,\n\t138,\n\t188,\n\t92,\n\t116,\n\t170,\n\t34,\n\t255,\n\t170,\n\t202,\n\t111,\n\t202,\n\t147,\n\t172,\n\t123,\n\t39,\n\t133,\n\t111,\n\t99,\n\t201,\n\t145,\n\t255,\n\t157,\n\t42,\n\t94,\n\t88,\n\t60,\n\t241,\n\t119,\n\t222,\n\t250,\n\t246,\n\t228,\n\t52,\n\t215,\n\t169,\n\t96,\n\t82,\n\t231,\n\t246,\n\t164,\n\t7,\n\t202,\n\t62,\n\t27,\n\t182,\n\t22,\n\t151,\n\t217,\n\t47,\n\t102,\n\t27,\n\t246,\n\t201,\n\t203,\n\t54,\n\t95,\n\t223,\n\t52,\n\t135,\n\t169,\n\t93,\n\t165,\n\t44,\n\t143,\n\t139,\n\t205,\n\t92,\n\t37,\n\t212,\n\t103,\n\t190,\n\t105,\n\t199,\n\t202,\n\t35,\n\t52,\n\t255,\n\t20,\n\t62,\n\t240,\n\t45,\n\t107,\n\t104,\n\t58,\n\t125,\n\t191,\n\t133,\n\t213,\n\t201,\n\t25,\n\t186,\n\t119,\n\t172,\n\t134,\n\t253,\n\t111,\n\t25,\n\t117,\n\t195,\n\t123,\n\t36,\n\t81,\n\t172,\n\t223,\n\t219,\n\t4,\n\t244,\n\t181,\n\t38,\n\t233,\n\t126,\n\t151,\n\t238,\n\t243,\n\t91,\n\t206,\n\t145,\n\t237,\n\t107,\n\t250,\n\t221,\n\t101,\n\t242,\n\t14,\n\t155,\n\t127,\n\t71,\n\t26,\n\t218,\n\t70,\n\t59,\n\t194,\n\t249,\n\t48,\n\t183,\n\t59,\n\t173,\n\t127,\n\t74,\n\t168,\n\t255,\n\t166,\n\t182,\n\t160,\n\t243,\n\t29,\n\t251,\n\t219,\n\t36,\n\t34,\n\t190,\n\t127,\n\t151,\n\t194,\n\t231,\n\t107,\n\t35,\n\t101,\n\t246,\n\t19,\n\t98,\n\t157,\n\t180,\n\t145,\n\t40,\n\t191,\n\t157,\n\t158,\n\t208,\n\t191,\n\t174,\n\t191,\n\t129,\n\t78,\n\t222,\n\t159,\n\t235,\n\t190,\n\t203,\n\t32,\n\t176,\n\t191,\n\t5,\n\t225,\n\t223,\n\t243,\n\t244,\n\t252,\n\t229,\n\t89,\n\t47,\n\t120,\n\t155,\n\t199,\n\t234,\n\t75,\n\t125,\n\t250,\n\t212,\n\t88,\n\t190,\n\t234,\n\t166,\n\t149,\n\t96,\n\t124,\n\t34,\n\t245,\n\t140,\n\t248,\n\t136,\n\t125,\n\t159,\n\t161,\n\t178,\n\t35,\n\t251,\n\t142,\n\t92,\n\t167,\n\t63,\n\t211,\n\t81,\n\t166,\n\t171,\n\t175,\n\t254,\n\t62,\n\t207,\n\t235,\n\t218,\n\t90,\n\t213,\n\t109,\n\t200,\n\t5,\n\t246,\n\t119,\n\t82,\n\t198,\n\t241,\n\t111,\n\t66,\n\t221,\n\t255,\n\t133,\n\t214,\n\t105,\n\t223,\n\t223,\n\t175,\n\t228,\n\t227,\n\t13,\n\t216,\n\t62,\n\t178,\n\t239,\n\t249,\n\t112,\n\t85,\n\t92,\n\t34,\n\t108,\n\t221,\n\t202,\n\t254,\n\t159,\n\t131,\n\t10,\n\t38,\n\t226,\n\t239,\n\t253,\n\t243,\n\t125,\n\t26,\n\t19,\n\t93,\n\t93,\n\t83,\n\t249,\n\t164,\n\t147,\n\t13,\n\t246,\n\t241,\n\t98,\n\t222,\n\t186,\n\t111,\n\t223,\n\t250,\n\t252,\n\t99,\n\t8,\n\t55,\n\t73,\n\t138,\n\t122,\n\t235,\n\t51,\n\t78,\n\t176,\n\t239,\n\t16,\n\t25,\n\t204,\n\t79,\n\t166,\n\t121,\n\t145,\n\t75,\n\t253,\n\t102,\n\t190,\n\t98,\n\t99,\n\t142,\n\t237,\n\t239,\n\t237,\n\t166,\n\t236,\n\t35,\n\t108,\n\t108,\n\t165,\n\t10,\n\t239,\n\t179,\n\t87,\n\t77,\n\t110,\n\t51,\n\t163,\n\t255,\n\t3,\n\t251,\n\t135,\n\t84,\n\t101,\n\t103,\n\t34,\n\t134,\n\t203,\n\t202,\n\t28,\n\t115,\n\t141,\n\t60,\n\t80,\n\t191,\n\t4,\n\t159,\n\t139,\n\t250,\n\t197,\n\t240,\n\t191,\n\t43,\n\t124,\n\t249,\n\t217,\n\t124,\n\t201,\n\t119,\n\t173,\n\t147,\n\t242,\n\t251,\n\t153,\n\t24,\n\t107,\n\t49,\n\t163,\n\t254,\n\t142,\n\t227,\n\t169,\n\t237,\n\t152,\n\t218,\n\t170,\n\t21,\n\t191,\n\t227,\n\t166,\n\t205,\n\t191,\n\t132,\n\t117,\n\t120,\n\t172,\n\t242,\n\t135,\n\t210,\n\t203,\n\t211,\n\t226,\n\t155,\n\t45,\n\t83,\n\t187,\n\t118,\n\t181,\n\t159,\n\t110,\n\t253,\n\t151,\n\t106,\n\t108,\n\t146,\n\t245,\n\t51,\n\t3,\n\t250,\n\t59,\n\t206,\n\t133,\n\t202,\n\t222,\n\t35,\n\t97,\n\t162,\n\t43,\n\t27,\n\t63,\n\t102,\n\t140,\n\t75,\n\t124,\n\t148,\n\t82,\n\t248,\n\t62,\n\t213,\n\t68,\n\t234,\n\t250,\n\t45,\n\t27,\n\t99,\n\t250,\n\t126,\n\t151,\n\t95,\n\t252,\n\t102,\n\t81,\n\t177,\n\t238,\n\t236,\n\t221,\n\t183,\n\t248,\n\t6,\n\t212,\n\t165,\n\t252,\n\t50,\n\t27,\n\t40,\n\t199,\n\t45,\n\t199,\n\t239,\n\t153,\n\t251,\n\t202,\n\t58,\n\t43,\n\t172,\n\t253,\n\t20,\n\t243,\n\t176,\n\t42,\n\t196,\n\t102,\n\t94,\n\t38,\n\t141,\n\t151,\n\t176,\n\t190,\n\t232,\n\t214,\n\t17,\n\t166,\n\t57,\n\t91,\n\t168,\n\t109,\n\t99,\n\t239,\n\t103,\n\t248,\n\t246,\n\t171,\n\t46,\n\t99,\n\t134,\n\t235,\n\t119,\n\t246,\n\t166,\n\t111,\n\t134,\n\t85,\n\t115,\n\t196,\n\t208,\n\t250,\n\t196,\n\t135,\n\t247,\n\t206,\n\t75,\n\t172,\n\t71,\n\t188,\n\t136,\n\t245,\n\t137,\n\t157,\n\t243,\n\t235,\n\t37,\n\t22,\n\t214,\n\t109,\n\t191,\n\t157,\n\t194,\n\t126,\n\t49,\n\t234,\n\t143,\n\t171,\n\t253,\n\t164,\n\t182,\n\t75,\n\t188,\n\t55,\n\t169,\n\t107,\n\t127,\n\t252,\n\t185,\n\t216,\n\t207,\n\t105,\n\t237,\n\t19,\n\t75,\n\t199,\n\t214,\n\t224,\n\t220,\n\t200,\n\t166,\n\t173,\n\t199,\n\t90,\n\t199,\n\t248,\n\t72,\n\t140,\n\t60,\n\t67,\n\t117,\n\t73,\n\t145,\n\t191,\n\t139,\n\t62,\n\t190,\n\t246,\n\t141,\n\t53,\n\t70,\n\t134,\n\t250,\n\t59,\n\t180,\n\t62,\n\t196,\n\t182,\n\t117,\n\t140,\n\t122,\n\t27,\n\t43,\n\t173,\n\t84,\n\t250,\n\t149,\n\t149,\n\t190,\n\t141,\n\t132,\n\t166,\n\t229,\n\t170,\n\t207,\n\t48,\n\t250,\n\t62,\n\t134,\n\t190,\n\t166,\n\t248,\n\t101,\n\t139,\n\t76,\n\t39,\n\t241,\n\t154,\n\t191,\n\t239,\n\t99,\n\t51,\n\t155,\n\t103,\n\t125,\n\t210,\n\t142,\n\t85,\n\t55,\n\t92,\n\t125,\n\t100,\n\t171,\n\t179,\n\t109,\n\t56,\n\t47,\n\t169,\n\t108,\n\t20,\n\t34,\n\t41,\n\t252,\n\t21,\n\t42,\n\t101,\n\t212,\n\t37,\n\t215,\n\t188,\n\t84,\n\t113,\n\t83,\n\t72,\n\t168,\n\t205,\n\t83,\n\t216,\n\t36,\n\t52,\n\t109,\n\t23,\n\t123,\n\t133,\n\t166,\n\t25,\n\t250,\n\t92,\n\t12,\n\t137,\n\t81,\n\t71,\n\t67,\n\t237,\n\t40,\n\t211,\n\t39,\n\t203,\n\t250,\n\t159,\n\t215,\n\t213,\n\t109,\n\t83,\n\t155,\n\t144,\n\t165,\n\t169,\n\t211,\n\t77,\n\t101,\n\t115,\n\t213,\n\t81,\n\t150,\n\t167,\n\t78,\n\t127,\n\t155,\n\t244,\n\t100,\n\t207,\n\t155,\n\t202,\n\t103,\n\t91,\n\t126,\n\t157,\n\t77,\n\t124,\n\t109,\n\t27,\n\t171,\n\t110,\n\t216,\n\t228,\n\t147,\n\t50,\n\t127,\n\t23,\n\t137,\n\t145,\n\t78,\n\t168,\n\t254,\n\t41,\n\t202,\n\t31,\n\t195,\n\t182,\n\t101,\n\t248,\n\t34,\n\t117,\n\t190,\n\t161,\n\t254,\n\t13,\n\t213,\n\t39,\n\t180,\n\t28,\n\t85,\n\t181,\n\t139,\n\t208,\n\t252,\n\t109,\n\t234,\n\t185,\n\t107,\n\t62,\n\t166,\n\t184,\n\t41,\n\t244,\n\t54,\n\t229,\n\t173,\n\t179,\n\t151,\n\t143,\n\t196,\n\t240,\n\t103,\n\t76,\n\t255,\n\t135,\n\t202,\n\t255,\n\t0\n];\nvar trieData$1 = {\n\ttype: type$1,\n\tdata: data$1\n};\n\nfunction _createForOfIteratorHelperLoose$e(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$e(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$e(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$e(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$e(o, minLen); }\n\nfunction _arrayLikeToArray$e(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar decompositions$1 = useData.decompositions;\nvar trie$1 = new UnicodeTrie(new Uint8Array(trieData$1.data));\nvar stateMachine$1 = new StateMachine(indicMachine);\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\n\nvar IndicShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(IndicShaper, _DefaultShaper);\n\n  function IndicShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  IndicShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables$1);\n    plan.addStage(['locl', 'ccmp']);\n    plan.addStage(initialReordering);\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n    plan.addStage(finalReordering);\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2'; // TODO: turn off kern (Khmer) and liga features.\n  };\n\n  IndicShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n      var d = INDIC_DECOMPOSITIONS[codepoint] || decompositions$1[codepoint];\n\n      if (d) {\n        var decomposed = d.map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return IndicShaper;\n}(DefaultShaper);\n\n_defineProperty(IndicShaper, \"zeroMarkWidths\", 'NONE');\n\nfunction indicCategory(glyph) {\n  return trie$1.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie$1.get(glyph.codePoints[0]) & 0xff);\n}\n\nvar IndicInfo = function IndicInfo(category, position, syllableType, syllable) {\n  this.category = category;\n  this.position = position;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables$1(font, glyphs) {\n  var syllable = 0;\n  var last = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose$e(stateMachine$1.match(glyphs.map(indicCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n\n    if (start > last) {\n      ++syllable;\n\n      for (var _i = last; _i < start; _i++) {\n        glyphs[_i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable; // Create shaper info\n\n    for (var _i2 = start; _i2 <= end; _i2++) {\n      glyphs[_i2].shaperInfo = new IndicInfo(1 << indicCategory(glyphs[_i2]), indicPosition(glyphs[_i2]), tags[0], syllable);\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (var i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose$e(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var _glyph$features;\n\n    var glyph = _step2.value;\n    glyph.features = (_glyph$features = {}, _glyph$features[feature] = true, _glyph$features);\n  }\n\n  var GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  var glyphs = [virama, consonant, virama];\n\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  var virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    var info = new GlyphInfo(font, virama, [indicConfig.virama]);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    var _glyphs$start$shaperI = glyphs[start].shaperInfo;\n        _glyphs$start$shaperI.category;\n        var syllableType = _glyphs$start$shaperI.syllableType;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(1 << indicCategory(g), indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      var _i3 = start;\n\n      while (_i3 < end && glyphs[_i3].shaperInfo.category === CATEGORIES.Repha) {\n        _i3++;\n      }\n\n      glyphs.splice(_i3++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    var base = end;\n    var limit = start;\n    var hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2]) || indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      var _g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if (wouldSubstitute(_g.slice(0, 2), 'rphf') || indicConfig.rephMode === 'Explicit' && wouldSubstitute(_g, 'rphf')) {\n        limit += 2;\n\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last':\n        {\n          // starting from the end of the syllable, move backwards\n          var _i4 = end;\n          var seenBelow = false;\n\n          do {\n            var _info = glyphs[--_i4].shaperInfo; // until a consonant is found\n\n            if (isConsonant(glyphs[_i4])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (_info.position !== POSITIONS.Below_C && (_info.position !== POSITIONS.Post_C || seenBelow)) {\n                base = _i4;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (_info.position === POSITIONS.Below_C) {\n                seenBelow = true;\n              }\n\n              base = _i4;\n            } else if (start < _i4 && _info.category === CATEGORIES.ZWJ && glyphs[_i4 - 1].shaperInfo.category === CATEGORIES.H) {\n              // A ZWJ after a Halant stops the base search, and requests an explicit\n              // half form.\n              // A ZWJ before a Halant, requests a subjoined form instead, and hence\n              // search continues.  This is particularly important for Bengali\n              // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n              break;\n            }\n          } while (_i4 > limit);\n\n          break;\n        }\n\n      case 'First':\n        {\n          // The first consonant is always the base.\n          base = start; // Mark all subsequent consonants as below.\n\n          for (var _i5 = base + 1; _i5 < end; _i5++) {\n            if (isConsonant(glyphs[_i5])) {\n              glyphs[_i5].shaperInfo.position = POSITIONS.Below_C;\n            }\n          }\n        }\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    } // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n\n    for (var _i6 = start; _i6 < base; _i6++) {\n      var _info2 = glyphs[_i6].shaperInfo;\n      _info2.position = Math.min(POSITIONS.Pre_C, _info2.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    } // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n\n    for (var _i7 = base + 1; _i7 < end; _i7++) {\n      if (glyphs[_i7].shaperInfo.category === CATEGORIES.M) {\n        for (var j = _i7 + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n\n        break;\n      }\n    } // Handle beginning Ra\n\n\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    } // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n\n    if (plan.isOldSpec) {\n      var disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n\n      for (var _i8 = base + 1; _i8 < end; _i8++) {\n        if (glyphs[_i8].shaperInfo.category === CATEGORIES.H) {\n          var _j = void 0;\n\n          for (_j = end - 1; _j > _i8; _j--) {\n            if (isConsonant(glyphs[_j]) || disallowDoubleHalants && glyphs[_j].shaperInfo.category === CATEGORIES.H) {\n              break;\n            }\n          }\n\n          if (glyphs[_j].shaperInfo.category !== CATEGORIES.H && _j > _i8) {\n            // Move Halant to after last consonant.\n            var t = glyphs[_i8];\n            glyphs.splice.apply(glyphs, [_i8, 0].concat(glyphs.splice(_i8 + 1, _j - _i8)));\n            glyphs[_j] = t;\n          }\n\n          break;\n        }\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    var lastPos = POSITIONS.Start;\n\n    for (var _i9 = start; _i9 < end; _i9++) {\n      var _info3 = glyphs[_i9].shaperInfo;\n\n      if (_info3.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & _info3.category)) {\n        _info3.position = lastPos;\n\n        if (_info3.category === CATEGORIES.H && _info3.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (var _j2 = _i9; _j2 > start; _j2--) {\n            if (glyphs[_j2 - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              _info3.position = glyphs[_j2 - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (_info3.position !== POSITIONS.SMVD) {\n        lastPos = _info3.position;\n      }\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    var last = base;\n\n    for (var _i10 = base + 1; _i10 < end; _i10++) {\n      if (isConsonant(glyphs[_i10])) {\n        for (var _j3 = last + 1; _j3 < _i10; _j3++) {\n          if (glyphs[_j3].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[_j3].shaperInfo.position = glyphs[_i10].shaperInfo.position;\n          }\n        }\n\n        last = _i10;\n      } else if (glyphs[_i10].shaperInfo.category === CATEGORIES.M) {\n        last = _i10;\n      }\n    }\n\n    var arr = glyphs.slice(start, end);\n    arr.sort(function (a, b) {\n      return a.shaperInfo.position - b.shaperInfo.position;\n    });\n    glyphs.splice.apply(glyphs, [start, arr.length].concat(arr)); // Find base again\n\n    for (var _i11 = start; _i11 < end; _i11++) {\n      if (glyphs[_i11].shaperInfo.position === POSITIONS.Base_C) {\n        base = _i11;\n        break;\n      }\n    } // Setup features now\n    // Reph\n\n\n    for (var _i12 = start; _i12 < end && glyphs[_i12].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; _i12++) {\n      glyphs[_i12].features.rphf = true;\n    } // Pre-base\n\n\n    var blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n\n    for (var _i13 = start; _i13 < base; _i13++) {\n      glyphs[_i13].features.half = true;\n\n      if (blwf) {\n        glyphs[_i13].features.blwf = true;\n      }\n    } // Post-base\n\n\n    for (var _i14 = base + 1; _i14 < end; _i14++) {\n      glyphs[_i14].features.abvf = true;\n      glyphs[_i14].features.pstf = true;\n      glyphs[_i14].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (var _i15 = start; _i15 + 1 < base; _i15++) {\n        if (glyphs[_i15].shaperInfo.category === CATEGORIES.Ra && glyphs[_i15 + 1].shaperInfo.category === CATEGORIES.H && (_i15 + 1 === base || glyphs[_i15 + 2].shaperInfo.category === CATEGORIES.ZWJ)) {\n          glyphs[_i15].features.blwf = true;\n          glyphs[_i15 + 1].features.blwf = true;\n        }\n      }\n    }\n\n    var prefLen = 2;\n\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (var _i16 = base + 1; _i16 + prefLen - 1 < end; _i16++) {\n        var _g2 = [glyphs[_i16].copy(), glyphs[_i16 + 1].copy()];\n\n        if (wouldSubstitute(_g2, 'pref')) {\n          for (var _j4 = 0; _j4 < prefLen; _j4++) {\n            glyphs[_i16++].features.pref = true;\n          } // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) {\n            for (; _i16 < end; _i16++) {\n              glyphs[_i16].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply ZWJ/ZWNJ effects\n\n\n    for (var _i17 = start + 1; _i17 < end; _i17++) {\n      if (isJoiner(glyphs[_i17])) {\n        var nonJoiner = glyphs[_i17].shaperInfo.category === CATEGORIES.ZWNJ;\n        var _j5 = _i17;\n\n        do {\n          _j5--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n          // A ZWNJ disables HALF.\n\n          if (nonJoiner) {\n            delete glyphs[_j5].features.half;\n          }\n        } while (_j5 > start && !isConsonant(glyphs[_j5]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  var indicConfig = plan.indicConfig;\n  var features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (var start = 0, end = nextSyllable$1(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable$1(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    var tryPref = !!features.pref; // Find base again\n\n    var base = start;\n\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (var i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n\n              break;\n            }\n          }\n        } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n        if (plan.unicodeScript === 'Malayalam') {\n          for (var _i18 = base + 1; _i18 < end; _i18++) {\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 === end || !isHalantOrCoeng(glyphs[_i18])) {\n              break;\n            }\n\n            _i18++; // Skip halant.\n\n            while (_i18 < end && isJoiner(glyphs[_i18])) {\n              _i18++;\n            }\n\n            if (_i18 < end && isConsonant(glyphs[_i18]) && glyphs[_i18].shaperInfo.position === POSITIONS.Below_C) {\n              base = _i18;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    } // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n\n    if (start + 1 < end && start < base) {\n      // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      var newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        } // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (var _i19 = newPos; _i19 > start; _i19--) {\n          if (glyphs[_i19 - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            var oldPos = _i19 - 1;\n\n            if (oldPos < base && base <= newPos) {\n              // Shouldn't actually happen.\n              base--;\n            }\n\n            var tmp = glyphs[oldPos];\n            glyphs.splice.apply(glyphs, [oldPos, 0].concat(glyphs.splice(oldPos + 1, newPos - oldPos)));\n            glyphs[newPos] = tmp;\n            newPos--;\n          }\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph && glyphs[start].shaperInfo.category === CATEGORIES.Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      var newRephPos = void 0;\n      var rephPos = indicConfig.rephPos;\n      var found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        } // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (var _i20 = base + 1; _i20 < newRephPos; _i20++) {\n            if (glyphs[_i20].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      var reph = glyphs[start];\n      glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, newRephPos - start)));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (var _i21 = base + 1; _i21 < end; _i21++) {\n        if (glyphs[_i21].features.pref) {\n          // 1. Only reorder a glyph produced by substitution during application\n          //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n          //    the feature generally but block it in certain contexts.)\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[_i21].isLigated && !glyphs[_i21].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            var _newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (_newPos > start && !(glyphs[_newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                _newPos--;\n              } // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n\n\n              if (_newPos > start && glyphs[_newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                var _oldPos2 = _i21;\n\n                for (var j = base + 1; j < _oldPos2; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    _newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (_newPos > start && isHalantOrCoeng(glyphs[_newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (_newPos < end && isJoiner(glyphs[_newPos])) {\n                _newPos++;\n              }\n            }\n\n            var _oldPos = _i21;\n            var _tmp = glyphs[_oldPos];\n            glyphs.splice.apply(glyphs, [_newPos + 1, 0].concat(glyphs.splice(_newPos, _oldPos - _newPos)));\n            glyphs[_newPos] = _tmp;\n\n            if (_newPos <= base && base < _oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(unicode.getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable$1(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {\n  }\n\n  return start;\n}\n\nvar type = \"Buffer\";\nvar data = [\n\t0,\n\t2,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t0,\n\t186,\n\t16,\n\t1,\n\t5,\n\t14,\n\t250,\n\t241,\n\t237,\n\t156,\n\t123,\n\t140,\n\t95,\n\t69,\n\t21,\n\t199,\n\t103,\n\t119,\n\t187,\n\t251,\n\t123,\n\t109,\n\t119,\n\t187,\n\t22,\n\t90,\n\t160,\n\t188,\n\t31,\n\t166,\n\t165,\n\t8,\n\t69,\n\t154,\n\t24,\n\t164,\n\t49,\n\t16,\n\t32,\n\t209,\n\t148,\n\t38,\n\t106,\n\t67,\n\t20,\n\t249,\n\t195,\n\t214,\n\t7,\n\t54,\n\t98,\n\t176,\n\t65,\n\t141,\n\t141,\n\t74,\n\t104,\n\t136,\n\t134,\n\t2,\n\t18,\n\t9,\n\t134,\n\t80,\n\t99,\n\t132,\n\t26,\n\t163,\n\t149,\n\t52,\n\t245,\n\t25,\n\t80,\n\t99,\n\t64,\n\t249,\n\t3,\n\t72,\n\t5,\n\t77,\n\t138,\n\t68,\n\t65,\n\t5,\n\t21,\n\t35,\n\t1,\n\t81,\n\t132,\n\t72,\n\t72,\n\t197,\n\t196,\n\t248,\n\t29,\n\t239,\n\t156,\n\t252,\n\t206,\n\t206,\n\t158,\n\t121,\n\t222,\n\t215,\n\t22,\n\t126,\n\t39,\n\t249,\n\t100,\n\t238,\n\t99,\n\t158,\n\t231,\n\t204,\n\t204,\n\t157,\n\t153,\n\t59,\n\t247,\n\t174,\n\t154,\n\t80,\n\t234,\n\t20,\n\t176,\n\t22,\n\t156,\n\t3,\n\t46,\n\t4,\n\t27,\n\t193,\n\t102,\n\t112,\n\t185,\n\t185,\n\t118,\n\t94,\n\t5,\n\t238,\n\t22,\n\t176,\n\t13,\n\t108,\n\t7,\n\t59,\n\t60,\n\t254,\n\t118,\n\t130,\n\t93,\n\t194,\n\t245,\n\t27,\n\t193,\n\t173,\n\t96,\n\t55,\n\t216,\n\t3,\n\t190,\n\t13,\n\t190,\n\t7,\n\t238,\n\t1,\n\t247,\n\t25,\n\t30,\n\t100,\n\t254,\n\t127,\n\t1,\n\t30,\n\t5,\n\t191,\n\t3,\n\t79,\n\t11,\n\t241,\n\t61,\n\t5,\n\t158,\n\t1,\n\t171,\n\t192,\n\t11,\n\t38,\n\t111,\n\t171,\n\t204,\n\t253,\n\t85,\n\t140,\n\t87,\n\t192,\n\t33,\n\t160,\n\t150,\n\t40,\n\t213,\n\t5,\n\t203,\n\t192,\n\t10,\n\t112,\n\t60,\n\t120,\n\t35,\n\t56,\n\t19,\n\t172,\n\t7,\n\t27,\n\t192,\n\t69,\n\t224,\n\t18,\n\t240,\n\t110,\n\t240,\n\t62,\n\t240,\n\t1,\n\t240,\n\t81,\n\t176,\n\t29,\n\t236,\n\t0,\n\t59,\n\t193,\n\t46,\n\t112,\n\t11,\n\t216,\n\t13,\n\t238,\n\t4,\n\t123,\n\t193,\n\t126,\n\t112,\n\t55,\n\t184,\n\t23,\n\t60,\n\t0,\n\t30,\n\t6,\n\t191,\n\t6,\n\t191,\n\t7,\n\t127,\n\t1,\n\t207,\n\t130,\n\t23,\n\t193,\n\t33,\n\t160,\n\t38,\n\t149,\n\t234,\n\t128,\n\t89,\n\t176,\n\t18,\n\t156,\n\t0,\n\t78,\n\t5,\n\t103,\n\t76,\n\t22,\n\t121,\n\t95,\n\t15,\n\t247,\n\t60,\n\t112,\n\t161,\n\t57,\n\t223,\n\t8,\n\t119,\n\t51,\n\t184,\n\t28,\n\t108,\n\t1,\n\t219,\n\t192,\n\t199,\n\t193,\n\t167,\n\t205,\n\t253,\n\t107,\n\t225,\n\t126,\n\t1,\n\t220,\n\t12,\n\t110,\n\t3,\n\t95,\n\t155,\n\t28,\n\t150,\n\t253,\n\t155,\n\t147,\n\t243,\n\t117,\n\t81,\n\t150,\n\t253,\n\t136,\n\t239,\n\t251,\n\t21,\n\t199,\n\t201,\n\t249,\n\t177,\n\t21,\n\t247,\n\t125,\n\t56,\n\t127,\n\t16,\n\t252,\n\t10,\n\t252,\n\t6,\n\t60,\n\t53,\n\t89,\n\t148,\n\t247,\n\t25,\n\t240,\n\t2,\n\t120,\n\t5,\n\t252,\n\t55,\n\t144,\n\t159,\n\t169,\n\t41,\n\t165,\n\t102,\n\t192,\n\t10,\n\t176,\n\t106,\n\t170,\n\t8,\n\t127,\n\t10,\n\t220,\n\t53,\n\t224,\n\t108,\n\t112,\n\t174,\n\t185,\n\t118,\n\t1,\n\t220,\n\t119,\n\t128,\n\t119,\n\t129,\n\t203,\n\t166,\n\t10,\n\t221,\n\t106,\n\t182,\n\t226,\n\t248,\n\t67,\n\t224,\n\t99,\n\t224,\n\t147,\n\t224,\n\t115,\n\t224,\n\t243,\n\t38,\n\t204,\n\t77,\n\t198,\n\t253,\n\t50,\n\t220,\n\t175,\n\t130,\n\t27,\n\t88,\n\t186,\n\t223,\n\t192,\n\t249,\n\t190,\n\t41,\n\t127,\n\t222,\n\t126,\n\t16,\n\t184,\n\t31,\n\t195,\n\t79,\n\t16,\n\t199,\n\t253,\n\t224,\n\t0,\n\t56,\n\t8,\n\t158,\n\t48,\n\t229,\n\t210,\n\t247,\n\t158,\n\t132,\n\t251,\n\t87,\n\t240,\n\t15,\n\t240,\n\t178,\n\t185,\n\t246,\n\t42,\n\t220,\n\t241,\n\t14,\n\t234,\n\t32,\n\t88,\n\t218,\n\t9,\n\t199,\n\t127,\n\t36,\n\t252,\n\t28,\n\t215,\n\t41,\n\t226,\n\t60,\n\t17,\n\t238,\n\t106,\n\t112,\n\t22,\n\t88,\n\t15,\n\t214,\n\t153,\n\t180,\n\t54,\n\t224,\n\t248,\n\t12,\n\t19,\n\t215,\n\t219,\n\t140,\n\t95,\n\t205,\n\t197,\n\t236,\n\t152,\n\t179,\n\t9,\n\t215,\n\t47,\n\t5,\n\t151,\n\t89,\n\t247,\n\t183,\n\t58,\n\t252,\n\t19,\n\t31,\n\t49,\n\t105,\n\t159,\n\t205,\n\t244,\n\t230,\n\t243,\n\t207,\n\t253,\n\t229,\n\t162,\n\t227,\n\t248,\n\t48,\n\t210,\n\t188,\n\t10,\n\t92,\n\t13,\n\t118,\n\t116,\n\t226,\n\t227,\n\t223,\n\t105,\n\t233,\n\t247,\n\t76,\n\t193,\n\t207,\n\t46,\n\t248,\n\t185,\n\t5,\n\t236,\n\t238,\n\t20,\n\t245,\n\t109,\n\t15,\n\t139,\n\t127,\n\t169,\n\t71,\n\t31,\n\t123,\n\t113,\n\t111,\n\t63,\n\t184,\n\t27,\n\t220,\n\t235,\n\t176,\n\t163,\n\t212,\n\t254,\n\t31,\n\t232,\n\t12,\n\t203,\n\t245,\n\t8,\n\t142,\n\t31,\n\t3,\n\t127,\n\t0,\n\t79,\n\t155,\n\t180,\n\t244,\n\t241,\n\t223,\n\t204,\n\t241,\n\t99,\n\t1,\n\t123,\n\t84,\n\t161,\n\t223,\n\t17,\n\t35,\n\t94,\n\t143,\n\t140,\n\t218,\n\t207,\n\t136,\n\t17,\n\t35,\n\t70,\n\t140,\n\t24,\n\t49,\n\t98,\n\t196,\n\t136,\n\t215,\n\t2,\n\t235,\n\t58,\n\t195,\n\t53,\n\t129,\n\t27,\n\t34,\n\t252,\n\t255,\n\t147,\n\t205,\n\t93,\n\t255,\n\t101,\n\t205,\n\t99,\n\t191,\n\t24,\n\t17,\n\t254,\n\t63,\n\t8,\n\t51,\n\t209,\n\t45,\n\t214,\n\t97,\n\t6,\n\t112,\n\t151,\n\t131,\n\t21,\n\t224,\n\t56,\n\t112,\n\t154,\n\t185,\n\t254,\n\t38,\n\t184,\n\t235,\n\t187,\n\t133,\n\t255,\n\t13,\n\t112,\n\t207,\n\t7,\n\t111,\n\t7,\n\t239,\n\t52,\n\t247,\n\t223,\n\t11,\n\t119,\n\t11,\n\t216,\n\t102,\n\t206,\n\t183,\n\t195,\n\t221,\n\t1,\n\t118,\n\t118,\n\t221,\n\t233,\n\t106,\n\t127,\n\t187,\n\t60,\n\t247,\n\t71,\n\t140,\n\t24,\n\t49,\n\t98,\n\t68,\n\t189,\n\t156,\n\t211,\n\t50,\n\t109,\n\t151,\n\t127,\n\t196,\n\t136,\n\t17,\n\t245,\n\t80,\n\t119,\n\t251,\n\t254,\n\t18,\n\t198,\n\t143,\n\t183,\n\t119,\n\t139,\n\t247,\n\t66,\n\t119,\n\t192,\n\t253,\n\t150,\n\t48,\n\t158,\n\t252,\n\t78,\n\t183,\n\t120,\n\t183,\n\t175,\n\t143,\n\t239,\n\t177,\n\t238,\n\t223,\n\t183,\n\t8,\n\t198,\n\t159,\n\t127,\n\t159,\n\t46,\n\t152,\n\t94,\n\t170,\n\t212,\n\t37,\n\t224,\n\t145,\n\t233,\n\t48,\n\t59,\n\t225,\n\t239,\n\t231,\n\t150,\n\t95,\n\t53,\n\t51,\n\t60,\n\t94,\n\t141,\n\t227,\n\t45,\n\t96,\n\t15,\n\t120,\n\t28,\n\t28,\n\t50,\n\t247,\n\t86,\n\t207,\n\t98,\n\t140,\n\t62,\n\t59,\n\t244,\n\t183,\n\t3,\n\t199,\n\t123,\n\t160,\n\t131,\n\t63,\n\t129,\n\t19,\n\t123,\n\t8,\n\t3,\n\t246,\n\t244,\n\t138,\n\t177,\n\t252,\n\t29,\n\t83,\n\t133,\n\t251,\n\t176,\n\t57,\n\t231,\n\t12,\n\t250,\n\t240,\n\t55,\n\t54,\n\t100,\n\t99,\n\t127,\n\t161,\n\t159,\n\t155,\n\t112,\n\t109,\n\t31,\n\t187,\n\t254,\n\t60,\n\t142,\n\t215,\n\t14,\n\t148,\n\t186,\n\t18,\n\t236,\n\t3,\n\t207,\n\t131,\n\t181,\n\t211,\n\t237,\n\t63,\n\t127,\n\t218,\n\t38,\n\t212,\n\t94,\n\t30,\n\t132,\n\t238,\n\t14,\n\t152,\n\t122,\n\t122,\n\t16,\n\t238,\n\t227,\n\t198,\n\t94,\n\t122,\n\t158,\n\t248,\n\t108,\n\t55,\n\t253,\n\t121,\n\t186,\n\t223,\n\t184,\n\t103,\n\t70,\n\t250,\n\t231,\n\t188,\n\t152,\n\t145,\n\t158,\n\t212,\n\t39,\n\t72,\n\t225,\n\t95,\n\t70,\n\t220,\n\t175,\n\t118,\n\t231,\n\t251,\n\t163,\n\t252,\n\t238,\n\t247,\n\t164,\n\t55,\n\t142,\n\t250,\n\t217,\n\t3,\n\t115,\n\t189,\n\t97,\n\t217,\n\t180,\n\t191,\n\t163,\n\t112,\n\t126,\n\t108,\n\t175,\n\t56,\n\t63,\n\t185,\n\t55,\n\t244,\n\t127,\n\t122,\n\t111,\n\t126,\n\t62,\n\t98,\n\t251,\n\t171,\n\t88,\n\t91,\n\t186,\n\t202,\n\t247,\n\t230,\n\t158,\n\t124,\n\t239,\n\t173,\n\t184,\n\t190,\n\t1,\n\t92,\n\t4,\n\t54,\n\t130,\n\t205,\n\t224,\n\t61,\n\t224,\n\t73,\n\t115,\n\t255,\n\t253,\n\t56,\n\t190,\n\t2,\n\t92,\n\t5,\n\t174,\n\t54,\n\t247,\n\t63,\n\t3,\n\t174,\n\t3,\n\t55,\n\t130,\n\t91,\n\t193,\n\t237,\n\t44,\n\t238,\n\t59,\n\t113,\n\t188,\n\t23,\n\t236,\n\t3,\n\t63,\n\t4,\n\t63,\n\t5,\n\t247,\n\t131,\n\t3,\n\t224,\n\t160,\n\t144,\n\t7,\n\t61,\n\t15,\n\t127,\n\t2,\n\t215,\n\t255,\n\t108,\n\t238,\n\t233,\n\t253,\n\t52,\n\t207,\n\t225,\n\t248,\n\t37,\n\t193,\n\t47,\n\t249,\n\t255,\n\t55,\n\t238,\n\t141,\n\t245,\n\t135,\n\t231,\n\t61,\n\t28,\n\t207,\n\t129,\n\t163,\n\t251,\n\t197,\n\t249,\n\t73,\n\t253,\n\t98,\n\t111,\n\t137,\n\t190,\n\t191,\n\t6,\n\t199,\n\t103,\n\t247,\n\t221,\n\t58,\n\t211,\n\t254,\n\t207,\n\t237,\n\t203,\n\t58,\n\t115,\n\t233,\n\t253,\n\t2,\n\t248,\n\t191,\n\t24,\n\t108,\n\t2,\n\t151,\n\t130,\n\t203,\n\t192,\n\t86,\n\t147,\n\t246,\n\t182,\n\t126,\n\t209,\n\t102,\n\t98,\n\t237,\n\t182,\n\t29,\n\t254,\n\t63,\n\t5,\n\t174,\n\t1,\n\t215,\n\t129,\n\t235,\n\t193,\n\t205,\n\t44,\n\t63,\n\t183,\n\t225,\n\t248,\n\t43,\n\t224,\n\t235,\n\t224,\n\t46,\n\t240,\n\t93,\n\t86,\n\t182,\n\t16,\n\t63,\n\t242,\n\t148,\n\t251,\n\t81,\n\t228,\n\t241,\n\t103,\n\t253,\n\t118,\n\t158,\n\t57,\n\t46,\n\t93,\n\t63,\n\t20,\n\t200,\n\t207,\n\t98,\n\t234,\n\t43,\n\t171,\n\t212,\n\t65,\n\t27,\n\t233,\n\t255,\n\t178,\n\t63,\n\t63,\n\t222,\n\t131,\n\t70,\n\t247,\n\t191,\n\t133,\n\t251,\n\t199,\n\t126,\n\t185,\n\t124,\n\t198,\n\t150,\n\t227,\n\t105,\n\t79,\n\t187,\n\t179,\n\t211,\n\t191,\n\t171,\n\t226,\n\t242,\n\t47,\n\t198,\n\t250,\n\t85,\n\t133,\n\t253,\n\t203,\n\t212,\n\t147,\n\t182,\n\t203,\n\t151,\n\t90,\n\t254,\n\t231,\n\t250,\n\t205,\n\t230,\n\t219,\n\t183,\n\t143,\n\t106,\n\t175,\n\t89,\n\t55,\n\t127,\n\t169,\n\t95,\n\t184,\n\t135,\n\t224,\n\t42,\n\t140,\n\t49,\n\t167,\n\t6,\n\t197,\n\t249,\n\t244,\n\t96,\n\t232,\n\t247,\n\t136,\n\t129,\n\t92,\n\t54,\n\t186,\n\t191,\n\t166,\n\t35,\n\t151,\n\t171,\n\t238,\n\t250,\n\t31,\n\t34,\n\t180,\n\t151,\n\t44,\n\t102,\n\t175,\n\t217,\n\t202,\n\t65,\n\t225,\n\t30,\n\t15,\n\t247,\n\t180,\n\t193,\n\t225,\n\t81,\n\t239,\n\t108,\n\t253,\n\t135,\n\t238,\n\t159,\n\t46,\n\t216,\n\t55,\n\t20,\n\t239,\n\t67,\n\t194,\n\t216,\n\t118,\n\t177,\n\t17,\n\t219,\n\t239,\n\t220,\n\t208,\n\t96,\n\t94,\n\t206,\n\t26,\n\t204,\n\t191,\n\t118,\n\t77,\n\t70,\n\t254,\n\t207,\n\t153,\n\t136,\n\t171,\n\t135,\n\t186,\n\t14,\n\t191,\n\t133,\n\t181,\n\t99,\n\t189,\n\t191,\n\t115,\n\t3,\n\t206,\n\t207,\n\t31,\n\t20,\n\t237,\n\t127,\n\t29,\n\t219,\n\t111,\n\t121,\n\t177,\n\t241,\n\t55,\n\t48,\n\t249,\n\t219,\n\t4,\n\t247,\n\t210,\n\t65,\n\t177,\n\t239,\n\t246,\n\t114,\n\t184,\n\t31,\n\t20,\n\t234,\n\t136,\n\t175,\n\t237,\n\t172,\n\t142,\n\t216,\n\t203,\n\t153,\n\t139,\n\t206,\n\t251,\n\t149,\n\t131,\n\t249,\n\t215,\n\t248,\n\t222,\n\t213,\n\t231,\n\t80,\n\t55,\n\t175,\n\t232,\n\t12,\n\t203,\n\t254,\n\t9,\n\t227,\n\t126,\n\t22,\n\t238,\n\t93,\n\t157,\n\t97,\n\t254,\n\t79,\n\t101,\n\t97,\n\t174,\n\t53,\n\t126,\n\t174,\n\t135,\n\t123,\n\t179,\n\t16,\n\t247,\n\t173,\n\t184,\n\t182,\n\t59,\n\t177,\n\t157,\n\t180,\n\t205,\n\t49,\n\t19,\n\t99,\n\t106,\n\t49,\n\t200,\n\t24,\n\t99,\n\t220,\n\t58,\n\t231,\n\t126,\n\t200,\n\t157,\n\t96,\n\t247,\n\t151,\n\t68,\n\t98,\n\t199,\n\t167,\n\t28,\n\t215,\n\t234,\n\t150,\n\t197,\n\t161,\n\t241,\n\t145,\n\t144,\n\t80,\n\t93,\n\t26,\n\t23,\n\t32,\n\t91,\n\t141,\n\t11,\n\t225,\n\t198,\n\t45,\n\t119,\n\t210,\n\t64,\n\t18,\n\t83,\n\t183,\n\t234,\n\t174,\n\t11,\n\t19,\n\t53,\n\t199,\n\t95,\n\t181,\n\t76,\n\t181,\n\t157,\n\t129,\n\t18,\n\t18,\n\t99,\n\t203,\n\t215,\n\t83,\n\t219,\n\t151,\n\t218,\n\t204,\n\t235,\n\t73,\n\t198,\n\t28,\n\t44,\n\t6,\n\t177,\n\t243,\n\t193,\n\t251,\n\t188,\n\t195,\n\t93,\n\t164,\n\t49,\n\t131,\n\t125,\n\t124,\n\t184,\n\t72,\n\t110,\n\t157,\n\t145,\n\t198,\n\t82,\n\t57,\n\t246,\n\t181,\n\t245,\n\t119,\n\t56,\n\t233,\n\t176,\n\t169,\n\t118,\n\t23,\n\t27,\n\t119,\n\t138,\n\t238,\n\t171,\n\t110,\n\t135,\n\t220,\n\t246,\n\t174,\n\t126,\n\t41,\n\t196,\n\t107,\n\t93,\n\t92,\n\t243,\n\t14,\n\t126,\n\t191,\n\t10,\n\t187,\n\t228,\n\t234,\n\t159,\n\t242,\n\t212,\n\t97,\n\t96,\n\t26,\n\t27,\n\t61,\n\t255,\n\t169,\n\t154,\n\t30,\n\t48,\n\t75,\n\t130,\n\t255,\n\t63,\n\t215,\n\t199,\n\t211,\n\t198,\n\t93,\n\t106,\n\t209,\n\t179,\n\t232,\n\t91,\n\t204,\n\t176,\n\t176,\n\t84,\n\t198,\n\t89,\n\t166,\n\t179,\n\t30,\n\t139,\n\t43,\n\t54,\n\t127,\n\t228,\n\t63,\n\t103,\n\t158,\n\t168,\n\t74,\n\t232,\n\t101,\n\t130,\n\t217,\n\t166,\n\t27,\n\t25,\n\t151,\n\t178,\n\t252,\n\t217,\n\t231,\n\t169,\n\t132,\n\t194,\n\t42,\n\t53,\n\t63,\n\t29,\n\t201,\n\t63,\n\t73,\n\t140,\n\t125,\n\t73,\n\t166,\n\t13,\n\t246,\n\t185,\n\t182,\n\t111,\n\t76,\n\t31,\n\t210,\n\t23,\n\t174,\n\t185,\n\t202,\n\t100,\n\t167,\n\t157,\n\t170,\n\t163,\n\t80,\n\t123,\n\t166,\n\t251,\n\t84,\n\t39,\n\t248,\n\t220,\n\t142,\n\t183,\n\t63,\n\t95,\n\t218,\n\t190,\n\t178,\n\t228,\n\t228,\n\t57,\n\t213,\n\t190,\n\t161,\n\t99,\n\t45,\n\t3,\n\t227,\n\t74,\n\t246,\n\t181,\n\t133,\n\t218,\n\t175,\n\t125,\n\t62,\n\t99,\n\t249,\n\t155,\n\t85,\n\t126,\n\t137,\n\t169,\n\t143,\n\t161,\n\t48,\n\t46,\n\t180,\n\t93,\n\t150,\n\t169,\n\t162,\n\t29,\n\t210,\n\t252,\n\t119,\n\t78,\n\t165,\n\t61,\n\t195,\n\t98,\n\t237,\n\t235,\n\t179,\n\t73,\n\t74,\n\t158,\n\t171,\n\t178,\n\t111,\n\t110,\n\t251,\n\t37,\n\t155,\n\t242,\n\t62,\n\t90,\n\t169,\n\t249,\n\t253,\n\t115,\n\t85,\n\t82,\n\t182,\n\t253,\n\t210,\n\t88,\n\t54,\n\t148,\n\t6,\n\t127,\n\t78,\n\t46,\n\t99,\n\t40,\n\t117,\n\t248,\n\t244,\n\t207,\n\t169,\n\t246,\n\t165,\n\t103,\n\t107,\n\t78,\n\t255,\n\t28,\n\t18,\n\t187,\n\t237,\n\t219,\n\t58,\n\t176,\n\t243,\n\t153,\n\t107,\n\t223,\n\t113,\n\t53,\n\t191,\n\t124,\n\t185,\n\t162,\n\t109,\n\t28,\n\t122,\n\t150,\n\t75,\n\t229,\n\t112,\n\t233,\n\t92,\n\t242,\n\t171,\n\t4,\n\t255,\n\t46,\n\t127,\n\t174,\n\t116,\n\t164,\n\t235,\n\t177,\n\t117,\n\t136,\n\t11,\n\t181,\n\t85,\n\t62,\n\t190,\n\t226,\n\t50,\n\t173,\n\t230,\n\t219,\n\t159,\n\t159,\n\t199,\n\t182,\n\t111,\n\t233,\n\t249,\n\t236,\n\t146,\n\t156,\n\t114,\n\t72,\n\t107,\n\t176,\n\t161,\n\t181,\n\t9,\n\t222,\n\t150,\n\t187,\n\t230,\n\t60,\n\t181,\n\t253,\n\t165,\n\t228,\n\t55,\n\t167,\n\t61,\n\t167,\n\t234,\n\t65,\n\t159,\n\t251,\n\t198,\n\t203,\n\t74,\n\t45,\n\t236,\n\t171,\n\t249,\n\t121,\n\t200,\n\t158,\n\t52,\n\t158,\n\t150,\n\t244,\n\t96,\n\t75,\n\t217,\n\t246,\n\t236,\n\t147,\n\t208,\n\t51,\n\t153,\n\t250,\n\t2,\n\t110,\n\t227,\n\t152,\n\t177,\n\t188,\n\t84,\n\t174,\n\t166,\n\t236,\n\t235,\n\t242,\n\t75,\n\t98,\n\t247,\n\t215,\n\t117,\n\t216,\n\t87,\n\t106,\n\t255,\n\t182,\n\t216,\n\t121,\n\t45,\n\t99,\n\t223,\n\t55,\n\t24,\n\t114,\n\t132,\n\t143,\n\t181,\n\t82,\n\t158,\n\t199,\n\t85,\n\t183,\n\t191,\n\t28,\n\t200,\n\t30,\n\t100,\n\t79,\n\t27,\n\t174,\n\t211,\n\t80,\n\t255,\n\t187,\n\t92,\n\t201,\n\t125,\n\t28,\n\t159,\n\t255,\n\t199,\n\t216,\n\t180,\n\t206,\n\t246,\n\t74,\n\t98,\n\t175,\n\t149,\n\t72,\n\t235,\n\t38,\n\t41,\n\t246,\n\t204,\n\t201,\n\t91,\n\t213,\n\t182,\n\t140,\n\t141,\n\t83,\n\t169,\n\t249,\n\t121,\n\t137,\n\t205,\n\t175,\n\t212,\n\t102,\n\t121,\n\t93,\n\t161,\n\t186,\n\t68,\n\t54,\n\t91,\n\t202,\n\t252,\n\t76,\n\t59,\n\t240,\n\t213,\n\t135,\n\t84,\n\t157,\n\t82,\n\t62,\n\t114,\n\t214,\n\t250,\n\t218,\n\t104,\n\t123,\n\t62,\n\t219,\n\t244,\n\t216,\n\t53,\n\t123,\n\t237,\n\t73,\n\t26,\n\t23,\n\t147,\n\t140,\n\t43,\n\t127,\n\t220,\n\t58,\n\t124,\n\t71,\n\t45,\n\t156,\n\t91,\n\t116,\n\t204,\n\t189,\n\t178,\n\t251,\n\t17,\n\t108,\n\t125,\n\t42,\n\t203,\n\t205,\n\t173,\n\t179,\n\t57,\n\t58,\n\t140,\n\t137,\n\t155,\n\t252,\n\t196,\n\t234,\n\t91,\n\t159,\n\t207,\n\t177,\n\t176,\n\t190,\n\t114,\n\t145,\n\t216,\n\t250,\n\t86,\n\t204,\n\t77,\n\t41,\n\t191,\n\t203,\n\t191,\n\t22,\n\t251,\n\t157,\n\t127,\n\t46,\n\t227,\n\t204,\n\t181,\n\t199,\n\t172,\n\t174,\n\t49,\n\t109,\n\t213,\n\t246,\n\t211,\n\t113,\n\t78,\n\t90,\n\t46,\n\t205,\n\t123,\n\t37,\n\t137,\n\t181,\n\t113,\n\t157,\n\t216,\n\t194,\n\t215,\n\t140,\n\t93,\n\t107,\n\t200,\n\t54,\n\t52,\n\t134,\n\t224,\n\t231,\n\t29,\n\t53,\n\t92,\n\t3,\n\t246,\n\t149,\n\t247,\n\t136,\n\t4,\n\t84,\n\t162,\n\t255,\n\t58,\n\t208,\n\t18,\n\t154,\n\t43,\n\t77,\n\t122,\n\t238,\n\t241,\n\t240,\n\t174,\n\t122,\n\t44,\n\t181,\n\t9,\n\t73,\n\t234,\n\t174,\n\t27,\n\t41,\n\t72,\n\t207,\n\t82,\n\t205,\n\t180,\n\t146,\n\t235,\n\t139,\n\t94,\n\t167,\n\t212,\n\t117,\n\t102,\n\t198,\n\t92,\n\t59,\n\t18,\n\t172,\n\t80,\n\t69,\n\t31,\n\t53,\n\t151,\n\t152,\n\t182,\n\t189,\n\t47,\n\t141,\n\t142,\n\t67,\n\t121,\n\t117,\n\t189,\n\t215,\n\t152,\n\t83,\n\t243,\n\t243,\n\t209,\n\t87,\n\t195,\n\t49,\n\t149,\n\t29,\n\t71,\n\t87,\n\t128,\n\t199,\n\t101,\n\t151,\n\t61,\n\t71,\n\t183,\n\t115,\n\t106,\n\t56,\n\t22,\n\t161,\n\t120,\n\t164,\n\t116,\n\t187,\n\t70,\n\t175,\n\t75,\n\t132,\n\t124,\n\t248,\n\t160,\n\t176,\n\t100,\n\t191,\n\t54,\n\t246,\n\t35,\n\t72,\n\t117,\n\t188,\n\t237,\n\t119,\n\t163,\n\t161,\n\t118,\n\t94,\n\t133,\n\t158,\n\t248,\n\t94,\n\t183,\n\t42,\n\t165,\n\t14,\n\t29,\n\t229,\n\t62,\n\t95,\n\t236,\n\t107,\n\t188,\n\t127,\n\t168,\n\t59,\n\t125,\n\t9,\n\t158,\n\t126,\n\t138,\n\t142,\n\t170,\n\t78,\n\t63,\n\t85,\n\t170,\n\t208,\n\t191,\n\t106,\n\t56,\n\t253,\n\t80,\n\t222,\n\t180,\n\t240,\n\t231,\n\t134,\n\t52,\n\t118,\n\t117,\n\t205,\n\t193,\n\t8,\n\t26,\n\t127,\n\t244,\n\t213,\n\t112,\n\t236,\n\t161,\n\t159,\n\t193,\n\t43,\n\t85,\n\t49,\n\t254,\n\t154,\n\t100,\n\t208,\n\t26,\n\t142,\n\t62,\n\t182,\n\t219,\n\t136,\n\t253,\n\t28,\n\t38,\n\t91,\n\t165,\n\t150,\n\t191,\n\t46,\n\t241,\n\t245,\n\t129,\n\t77,\n\t244,\n\t139,\n\t250,\n\t185,\n\t90,\n\t117,\n\t29,\n\t72,\n\t209,\n\t41,\n\t175,\n\t27,\n\t246,\n\t120,\n\t131,\n\t176,\n\t199,\n\t106,\n\t92,\n\t142,\n\t50,\n\t204,\n\t178,\n\t99,\n\t155,\n\t163,\n\t77,\n\t60,\n\t147,\n\t66,\n\t120,\n\t187,\n\t175,\n\t79,\n\t221,\n\t223,\n\t80,\n\t117,\n\t187,\n\t41,\n\t91,\n\t247,\n\t114,\n\t211,\n\t205,\n\t13,\n\t111,\n\t195,\n\t215,\n\t169,\n\t202,\n\t230,\n\t143,\n\t75,\n\t236,\n\t115,\n\t187,\n\t110,\n\t234,\n\t172,\n\t3,\n\t212,\n\t14,\n\t104,\n\t45,\n\t138,\n\t247,\n\t83,\n\t117,\n\t214,\n\t75,\n\t26,\n\t163,\n\t235,\n\t246,\n\t181,\n\t210,\n\t112,\n\t140,\n\t146,\n\t231,\n\t73,\n\t51,\n\t44,\n\t111,\n\t174,\n\t246,\n\t202,\n\t231,\n\t152,\n\t212,\n\t174,\n\t165,\n\t62,\n\t94,\n\t90,\n\t255,\n\t33,\n\t168,\n\t189,\n\t242,\n\t54,\n\t59,\n\t153,\n\t80,\n\t38,\n\t151,\n\t148,\n\t13,\n\t31,\n\t26,\n\t183,\n\t214,\n\t61,\n\t166,\n\t229,\n\t58,\n\t210,\n\t118,\n\t106,\n\t122,\n\t207,\n\t154,\n\t126,\n\t246,\n\t74,\n\t115,\n\t66,\n\t123,\n\t93,\n\t65,\n\t178,\n\t53,\n\t61,\n\t167,\n\t235,\n\t232,\n\t143,\n\t66,\n\t235,\n\t72,\n\t49,\n\t172,\n\t2,\n\t199,\n\t26,\n\t215,\n\t69,\n\t234,\n\t220,\n\t161,\n\t45,\n\t59,\n\t113,\n\t120,\n\t27,\n\t150,\n\t250,\n\t24,\n\t106,\n\t203,\n\t51,\n\t204,\n\t95,\n\t221,\n\t245,\n\t198,\n\t94,\n\t171,\n\t39,\n\t151,\n\t250,\n\t159,\n\t152,\n\t119,\n\t110,\n\t90,\n\t108,\n\t91,\n\t187,\n\t202,\n\t110,\n\t247,\n\t65,\n\t124,\n\t189,\n\t96,\n\t165,\n\t135,\n\t227,\n\t12,\n\t186,\n\t239,\n\t161,\n\t189,\n\t93,\n\t174,\n\t180,\n\t83,\n\t250,\n\t103,\n\t46,\n\t49,\n\t253,\n\t78,\n\t172,\n\t148,\n\t157,\n\t91,\n\t243,\n\t254,\n\t69,\n\t251,\n\t159,\n\t117,\n\t64,\n\t126,\n\t164,\n\t235,\n\t93,\n\t79,\n\t56,\n\t105,\n\t47,\n\t155,\n\t116,\n\t141,\n\t242,\n\t171,\n\t227,\n\t163,\n\t247,\n\t161,\n\t180,\n\t31,\n\t65,\n\t211,\n\t198,\n\t183,\n\t88,\n\t210,\n\t248,\n\t49,\n\t36,\n\t199,\n\t131,\n\t19,\n\t216,\n\t249,\n\t132,\n\t131,\n\t88,\n\t251,\n\t216,\n\t235,\n\t97,\n\t169,\n\t246,\n\t77,\n\t89,\n\t127,\n\t137,\n\t185,\n\t158,\n\t26,\n\t183,\n\t253,\n\t172,\n\t76,\n\t9,\n\t167,\n\t229,\n\t196,\n\t136,\n\t50,\n\t166,\n\t72,\n\t142,\n\t77,\n\t41,\n\t156,\n\t61,\n\t62,\n\t105,\n\t66,\n\t58,\n\t97,\n\t47,\n\t94,\n\t145,\n\t214,\n\t172,\n\t165,\n\t107,\n\t41,\n\t241,\n\t197,\n\t132,\n\t11,\n\t173,\n\t157,\n\t75,\n\t174,\n\t148,\n\t78,\n\t74,\n\t190,\n\t202,\n\t150,\n\t163,\n\t202,\n\t245,\n\t210,\n\t148,\n\t252,\n\t248,\n\t198,\n\t20,\n\t33,\n\t155,\n\t249,\n\t236,\n\t235,\n\t10,\n\t87,\n\t5,\n\t82,\n\t57,\n\t235,\n\t72,\n\t199,\n\t55,\n\t214,\n\t138,\n\t145,\n\t212,\n\t248,\n\t234,\n\t202,\n\t111,\n\t89,\n\t63,\n\t117,\n\t234,\n\t179,\n\t141,\n\t116,\n\t115,\n\t108,\n\t25,\n\t35,\n\t109,\n\t151,\n\t161,\n\t233,\n\t242,\n\t134,\n\t164,\n\t77,\n\t91,\n\t164,\n\t164,\n\t95,\n\t103,\n\t221,\n\t77,\n\t201,\n\t199,\n\t68,\n\t205,\n\t121,\n\t246,\n\t233,\n\t221,\n\t30,\n\t35,\n\t150,\n\t213,\n\t95,\n\t21,\n\t250,\n\t111,\n\t66,\n\t66,\n\t105,\n\t53,\n\t161,\n\t255,\n\t166,\n\t236,\n\t156,\n\t163,\n\t239,\n\t170,\n\t109,\n\t147,\n\t243,\n\t238,\n\t193,\n\t53,\n\t47,\n\t112,\n\t197,\n\t25,\n\t90,\n\t47,\n\t115,\n\t133,\n\t207,\n\t45,\n\t67,\n\t206,\n\t220,\n\t66,\n\t242,\n\t175,\n\t50,\n\t226,\n\t74,\n\t153,\n\t143,\n\t133,\n\t164,\n\t201,\n\t126,\n\t167,\n\t137,\n\t250,\n\t222,\n\t180,\n\t62,\n\t36,\n\t225,\n\t246,\n\t201,\n\t205,\n\t91,\n\t110,\n\t185,\n\t234,\n\t234,\n\t67,\n\t67,\n\t229,\n\t173,\n\t202,\n\t14,\n\t174,\n\t120,\n\t154,\n\t174,\n\t7,\n\t177,\n\t210,\n\t84,\n\t251,\n\t41,\n\t91,\n\t214,\n\t182,\n\t242,\n\t80,\n\t214,\n\t38,\n\t139,\n\t161,\n\t111,\n\t168,\n\t178,\n\t191,\n\t181,\n\t227,\n\t77,\n\t245,\n\t75,\n\t235,\n\t184,\n\t246,\n\t190,\n\t48,\n\t233,\n\t189,\n\t71,\n\t204,\n\t183,\n\t85,\n\t101,\n\t224,\n\t107,\n\t220,\n\t180,\n\t198,\n\t158,\n\t171,\n\t251,\n\t216,\n\t112,\n\t85,\n\t151,\n\t33,\n\t245,\n\t121,\n\t42,\n\t237,\n\t215,\n\t107,\n\t18,\n\t189,\n\t231,\n\t81,\n\t250,\n\t118,\n\t197,\n\t133,\n\t174,\n\t23,\n\t49,\n\t107,\n\t122,\n\t84,\n\t254,\n\t156,\n\t247,\n\t11,\n\t92,\n\t92,\n\t239,\n\t91,\n\t83,\n\t113,\n\t165,\n\t227,\n\t26,\n\t59,\n\t73,\n\t109,\n\t130,\n\t35,\n\t237,\n\t65,\n\t230,\n\t239,\n\t12,\n\t82,\n\t203,\n\t31,\n\t131,\n\t253,\n\t222,\n\t210,\n\t126,\n\t151,\n\t201,\n\t223,\n\t3,\n\t233,\n\t125,\n\t36,\n\t41,\n\t223,\n\t107,\n\t82,\n\t217,\n\t219,\n\t124,\n\t87,\n\t107,\n\t67,\n\t239,\n\t224,\n\t92,\n\t123,\n\t122,\n\t233,\n\t61,\n\t173,\n\t222,\n\t11,\n\t160,\n\t235,\n\t241,\n\t73,\n\t106,\n\t248,\n\t175,\n\t137,\n\t220,\n\t113,\n\t111,\n\t110,\n\t125,\n\t245,\n\t217,\n\t155,\n\t246,\n\t69,\n\t212,\n\t173,\n\t175,\n\t216,\n\t52,\n\t164,\n\t253,\n\t15,\n\t252,\n\t29,\n\t56,\n\t93,\n\t179,\n\t247,\n\t67,\n\t199,\n\t8,\n\t79,\n\t103,\n\t101,\n\t68,\n\t94,\n\t168,\n\t174,\n\t74,\n\t225,\n\t99,\n\t244,\n\t111,\n\t219,\n\t177,\n\t106,\n\t29,\n\t242,\n\t245,\n\t12,\n\t254,\n\t60,\n\t209,\n\t247,\n\t232,\n\t253,\n\t94,\n\t149,\n\t237,\n\t164,\n\t199,\n\t92,\n\t178,\n\t131,\n\t109,\n\t55,\n\t87,\n\t56,\n\t234,\n\t231,\n\t200,\n\t109,\n\t82,\n\t114,\n\t244,\n\t175,\n\t235,\n\t26,\n\t175,\n\t123,\n\t125,\n\t37,\n\t63,\n\t55,\n\t105,\n\t143,\n\t126,\n\t140,\n\t240,\n\t248,\n\t165,\n\t111,\n\t226,\n\t249,\n\t190,\n\t189,\n\t49,\n\t19,\n\t119,\n\t93,\n\t223,\n\t73,\n\t214,\n\t33,\n\t246,\n\t120,\n\t230,\n\t228,\n\t146,\n\t196,\n\t174,\n\t49,\n\t248,\n\t36,\n\t102,\n\t77,\n\t66,\n\t186,\n\t23,\n\t242,\n\t235,\n\t74,\n\t199,\n\t231,\n\t143,\n\t230,\n\t142,\n\t117,\n\t140,\n\t175,\n\t165,\n\t124,\n\t140,\n\t43,\n\t191,\n\t206,\n\t164,\n\t117,\n\t163,\n\t148,\n\t52,\n\t236,\n\t107,\n\t74,\n\t201,\n\t186,\n\t110,\n\t74,\n\t236,\n\t250,\n\t103,\n\t143,\n\t177,\n\t125,\n\t115,\n\t237,\n\t42,\n\t210,\n\t171,\n\t107,\n\t238,\n\t148,\n\t35,\n\t139,\n\t101,\n\t253,\n\t160,\n\t204,\n\t28,\n\t86,\n\t178,\n\t95,\n\t153,\n\t185,\n\t112,\n\t83,\n\t101,\n\t118,\n\t73,\n\t93,\n\t235,\n\t18,\n\t77,\n\t216,\n\t184,\n\t238,\n\t58,\n\t93,\n\t119,\n\t252,\n\t49,\n\t250,\n\t208,\n\t207,\n\t78,\n\t251,\n\t27,\n\t108,\n\t223,\n\t183,\n\t32,\n\t228,\n\t143,\n\t246,\n\t106,\n\t133,\n\t198,\n\t107,\n\t246,\n\t121,\n\t93,\n\t144,\n\t232,\n\t57,\n\t202,\n\t64,\n\t45,\n\t220,\n\t107,\n\t167,\n\t37,\n\t180,\n\t119,\n\t52,\n\t102,\n\t44,\n\t81,\n\t245,\n\t154,\n\t125,\n\t221,\n\t237,\n\t179,\n\t206,\n\t119,\n\t11,\n\t135,\n\t75,\n\t30,\n\t154,\n\t78,\n\t51,\n\t165,\n\t156,\n\t124,\n\t206,\n\t66,\n\t251,\n\t20,\n\t155,\n\t104,\n\t47,\n\t246,\n\t28,\n\t198,\n\t181,\n\t31,\n\t219,\n\t245,\n\t189,\n\t119,\n\t104,\n\t94,\n\t111,\n\t203,\n\t41,\n\t37,\n\t105,\n\t98,\n\t30,\n\t112,\n\t170,\n\t106,\n\t255,\n\t95,\n\t174,\n\t210,\n\t127,\n\t1,\n\t237,\n\t61,\n\t207,\n\t90,\n\t247,\n\t186,\n\t127,\n\t147,\n\t198,\n\t237,\n\t210,\n\t26,\n\t91,\n\t91,\n\t72,\n\t245,\n\t74,\n\t250,\n\t246,\n\t155,\n\t238,\n\t209,\n\t119,\n\t223,\n\t42,\n\t33,\n\t13,\n\t105,\n\t189,\n\t33,\n\t118,\n\t239,\n\t119,\n\t74,\n\t58,\n\t49,\n\t216,\n\t54,\n\t105,\n\t58,\n\t125,\n\t223,\n\t63,\n\t37,\n\t125,\n\t237,\n\t88,\n\t135,\n\t93,\n\t110,\n\t80,\n\t106,\n\t161,\n\t78,\n\t105,\n\t239,\n\t58,\n\t217,\n\t42,\n\t119,\n\t125,\n\t78,\n\t154,\n\t99,\n\t86,\n\t173,\n\t3,\n\t74,\n\t43,\n\t86,\n\t170,\n\t76,\n\t51,\n\t215,\n\t102,\n\t246,\n\t123,\n\t22,\n\t251,\n\t191,\n\t8,\n\t218,\n\t70,\n\t244,\n\t191,\n\t76,\n\t87,\n\t127,\n\t75,\n\t239,\n\t0,\n\t98,\n\t242,\n\t40,\n\t249,\n\t43,\n\t171,\n\t139,\n\t148,\n\t240,\n\t190,\n\t246,\n\t81,\n\t117,\n\t93,\n\t72,\n\t65,\n\t235,\n\t208,\n\t215,\n\t255,\n\t18,\n\t3,\n\t229,\n\t30,\n\t31,\n\t151,\n\t173,\n\t163,\n\t185,\n\t255,\n\t95,\n\t83,\n\t158,\n\t243,\n\t170,\n\t109,\n\t105,\n\t167,\n\t229,\n\t242,\n\t67,\n\t227,\n\t112,\n\t94,\n\t207,\n\t237,\n\t111,\n\t119,\n\t120,\n\t63,\n\t93,\n\t230,\n\t127,\n\t168,\n\t74,\n\t249,\n\t251,\n\t124,\n\t87,\n\t187,\n\t35,\n\t241,\n\t189,\n\t171,\n\t82,\n\t1,\n\t127,\n\t41,\n\t82,\n\t71,\n\t189,\n\t77,\n\t233,\n\t247,\n\t237,\n\t247,\n\t134,\n\t84,\n\t215,\n\t200,\n\t78,\n\t92,\n\t164,\n\t126,\n\t38,\n\t165,\n\t14,\n\t241,\n\t254,\n\t62,\n\t229,\n\t219,\n\t203,\n\t178,\n\t101,\n\t165,\n\t49,\n\t6,\n\t255,\n\t86,\n\t139,\n\t254,\n\t9,\n\t64,\n\t229,\n\t165,\n\t49,\n\t148,\n\t157,\n\t215,\n\t144,\n\t148,\n\t109,\n\t223,\n\t117,\n\t149,\n\t157,\n\t68,\n\t250,\n\t15,\n\t130,\n\t93,\n\t230,\n\t152,\n\t57,\n\t108,\n\t46,\n\t118,\n\t158,\n\t203,\n\t254,\n\t23,\n\t222,\n\t213,\n\t110,\n\t83,\n\t234,\n\t58,\n\t47,\n\t127,\n\t207,\n\t202,\n\t111,\n\t170,\n\t148,\n\t181,\n\t127,\n\t142,\n\t78,\n\t171,\n\t148,\n\t20,\n\t93,\n\t243,\n\t127,\n\t120,\n\t133,\n\t158,\n\t137,\n\t118,\n\t123,\n\t170,\n\t34,\n\t253,\n\t178,\n\t144,\n\t232,\n\t119,\n\t165,\n\t250,\n\t189,\n\t233,\n\t105,\n\t42,\n\t252,\n\t79,\n\t42,\n\t187,\n\t108,\n\t101,\n\t243,\n\t207,\n\t237,\n\t56,\n\t158,\n\t17,\n\t222,\n\t215,\n\t230,\n\t165,\n\t177,\n\t162,\n\t221,\n\t206,\n\t83,\n\t243,\n\t159,\n\t91,\n\t206,\n\t170,\n\t251,\n\t49,\n\t187,\n\t13,\n\t211,\n\t120,\n\t136,\n\t230,\n\t43,\n\t84,\n\t54,\n\t62,\n\t94,\n\t104,\n\t66,\n\t150,\n\t168,\n\t133,\n\t255,\n\t40,\n\t144,\n\t144,\n\t254,\n\t33,\n\t86,\n\t53,\n\t147,\n\t38,\n\t29,\n\t123,\n\t60,\n\t162,\n\t245,\n\t164,\n\t231,\n\t114,\n\t115,\n\t22,\n\t174,\n\t111,\n\t62,\n\t233,\n\t122,\n\t204,\n\t56,\n\t203,\n\t87,\n\t126,\n\t169,\n\t95,\n\t182,\n\t243,\n\t188,\n\t220,\n\t193,\n\t209,\n\t137,\n\t80,\n\t57,\n\t151,\n\t169,\n\t133,\n\t107,\n\t81,\n\t75,\n\t148,\n\t251,\n\t121,\n\t228,\n\t170,\n\t243,\n\t77,\n\t244,\n\t71,\n\t190,\n\t255,\n\t30,\n\t240,\n\t181,\n\t119,\n\t187,\n\t77,\n\t243,\n\t118,\n\t109,\n\t247,\n\t41,\n\t109,\n\t172,\n\t55,\n\t112,\n\t73,\n\t29,\n\t23,\n\t198,\n\t198,\n\t93,\n\t230,\n\t95,\n\t140,\n\t190,\n\t251,\n\t212,\n\t215,\n\t243,\n\t61,\n\t141,\n\t41,\n\t227,\n\t248,\n\t216,\n\t122,\n\t20,\n\t242,\n\t91,\n\t6,\n\t87,\n\t127,\n\t195,\n\t165,\n\t199,\n\t92,\n\t126,\n\t76,\n\t101,\n\t229,\n\t235,\n\t57,\n\t244,\n\t191,\n\t235,\n\t152,\n\t61,\n\t69,\n\t57,\n\t117,\n\t36,\n\t38,\n\t188,\n\t114,\n\t28,\n\t215,\n\t217,\n\t22,\n\t125,\n\t255,\n\t121,\n\t87,\n\t74,\n\t30,\n\t63,\n\t86,\n\t165,\n\t159,\n\t16,\n\t19,\n\t106,\n\t225,\n\t191,\n\t54,\n\t98,\n\t218,\n\t122,\n\t155,\n\t239,\n\t80,\n\t171,\n\t24,\n\t171,\n\t214,\n\t53,\n\t254,\n\t173,\n\t243,\n\t221,\n\t79,\n\t91,\n\t239,\n\t177,\n\t104,\n\t76,\n\t233,\n\t179,\n\t219,\n\t152,\n\t227,\n\t122,\n\t19,\n\t82,\n\t231,\n\t60,\n\t38,\n\t86,\n\t236,\n\t189,\n\t42,\n\t169,\n\t123,\n\t48,\n\t154,\n\t218,\n\t159,\n\t208,\n\t196,\n\t30,\n\t149,\n\t152,\n\t248,\n\t155,\n\t42,\n\t243,\n\t98,\n\t220,\n\t239,\n\t33,\n\t137,\n\t148,\n\t70,\n\t91,\n\t237,\n\t169,\n\t170,\n\t114,\n\t199,\n\t232,\n\t51,\n\t69,\n\t247,\n\t116,\n\t92,\n\t247,\n\t218,\n\t133,\n\t84,\n\t142,\n\t170,\n\t227,\n\t40,\n\t27,\n\t231,\n\t98,\n\t108,\n\t23,\n\t101,\n\t227,\n\t168,\n\t178,\n\t125,\n\t214,\n\t213,\n\t214,\n\t171,\n\t212,\n\t91,\n\t217,\n\t188,\n\t248,\n\t164,\n\t238,\n\t116,\n\t203,\n\t228,\n\t205,\n\t151,\n\t191,\n\t166,\n\t164,\n\t201,\n\t250,\n\t149,\n\t147,\n\t126,\n\t85,\n\t249,\n\t207,\n\t13,\n\t95,\n\t85,\n\t250,\n\t49,\n\t233,\n\t148,\n\t213,\n\t115,\n\t200,\n\t111,\n\t29,\n\t249,\n\t78,\n\t73,\n\t191,\n\t142,\n\t184,\n\t109,\n\t73,\n\t177,\n\t157,\n\t36,\n\t185,\n\t245,\n\t192,\n\t37,\n\t255,\n\t3\n];\nvar trieData = {\n\ttype: type,\n\tdata: data\n};\n\nfunction _createForOfIteratorHelperLoose$d(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$d(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$d(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$d(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$d(o, minLen); }\n\nfunction _arrayLikeToArray$d(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar categories = useData.categories,\n    decompositions = useData.decompositions;\nvar trie = new UnicodeTrie(new Uint8Array(trieData.data));\nvar stateMachine = new StateMachine(useData);\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\n\nvar UniversalShaper = /*#__PURE__*/function (_DefaultShaper) {\n  _inheritsLoose(UniversalShaper, _DefaultShaper);\n\n  function UniversalShaper() {\n    return _DefaultShaper.apply(this, arguments) || this;\n  }\n\n  UniversalShaper.planFeatures = function planFeatures(plan) {\n    plan.addStage(setupSyllables); // Default glyph pre-processing group\n\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']); // Reordering group\n\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref); // Orthographic unit shaping group\n\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  };\n\n  UniversalShaper.assignFeatures = function assignFeatures(plan, glyphs) {\n    var _loop = function _loop(i) {\n      var codepoint = glyphs[i].codePoints[0];\n\n      if (decompositions[codepoint]) {\n        var decomposed = decompositions[codepoint].map(function (c) {\n          var g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice.apply(glyphs, [i, 1].concat(decomposed));\n      }\n    };\n\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (var i = glyphs.length - 1; i >= 0; i--) {\n      _loop(i);\n    }\n  };\n\n  return UniversalShaper;\n}(DefaultShaper);\n\n_defineProperty(UniversalShaper, \"zeroMarkWidths\", 'BEFORE_GPOS');\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nvar USEInfo = function USEInfo(category, syllableType, syllable) {\n  this.category = category;\n  this.syllableType = syllableType;\n  this.syllable = syllable;\n};\n\nfunction setupSyllables(font, glyphs) {\n  var syllable = 0;\n\n  for (var _iterator = _createForOfIteratorHelperLoose$d(stateMachine.match(glyphs.map(useCategory))), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        start = _step$value[0],\n        end = _step$value[1],\n        tags = _step$value[2];\n    ++syllable; // Create shaper info\n\n    for (var i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    } // Assign rphf feature\n\n\n    var limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n\n    for (var _i = start; _i < start + limit; _i++) {\n      glyphs[_i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (var _iterator2 = _createForOfIteratorHelperLoose$d(glyphs), _step2; !(_step2 = _iterator2()).done;) {\n    var glyph = _step2.value;\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (var _iterator3 = _createForOfIteratorHelperLoose$d(glyphs), _step3; !(_step3 = _iterator3()).done;) {\n    var glyph = _step3.value;\n\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (var _iterator4 = _createForOfIteratorHelperLoose$d(glyphs), _step4; !(_step4 = _iterator4()).done;) {\n    var glyph = _step4.value;\n\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  var dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (var start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    var i = void 0,\n        j = void 0;\n    var info = glyphs[start].shaperInfo;\n    var type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    } // Insert a dotted circle glyph in broken clusters.\n\n\n    if (type === 'broken_cluster' && dottedCircle) {\n      var g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++) {\n      }\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice.apply(glyphs, [start, 0].concat(glyphs.splice(start + 1, i - start), [glyphs[i]]));\n          break;\n        }\n      }\n    } // Move things back.\n\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice.apply(glyphs, [j, 1, glyphs[i]].concat(glyphs.splice(j, i - j)));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  var syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable) {\n  }\n\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n\nfunction _createForOfIteratorHelperLoose$c(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$c(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$c(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$c(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$c(o, minLen); }\n\nfunction _arrayLikeToArray$c(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar SHAPERS = {\n  arab: ArabicShaper,\n  // Arabic\n  mong: ArabicShaper,\n  // Mongolian\n  syrc: ArabicShaper,\n  // Syriac\n  'nko ': ArabicShaper,\n  // N'Ko\n  phag: ArabicShaper,\n  // Phags Pa\n  mand: ArabicShaper,\n  // Mandaic\n  mani: ArabicShaper,\n  // Manichaean\n  phlp: ArabicShaper,\n  // Psalter Pahlavi\n  hang: HangulShaper,\n  // Hangul\n  bng2: IndicShaper,\n  // Bengali\n  beng: IndicShaper,\n  // Bengali\n  dev2: IndicShaper,\n  // Devanagari\n  deva: IndicShaper,\n  // Devanagari\n  gjr2: IndicShaper,\n  // Gujarati\n  gujr: IndicShaper,\n  // Gujarati\n  guru: IndicShaper,\n  // Gurmukhi\n  gur2: IndicShaper,\n  // Gurmukhi\n  knda: IndicShaper,\n  // Kannada\n  knd2: IndicShaper,\n  // Kannada\n  mlm2: IndicShaper,\n  // Malayalam\n  mlym: IndicShaper,\n  // Malayalam\n  ory2: IndicShaper,\n  // Oriya\n  orya: IndicShaper,\n  // Oriya\n  taml: IndicShaper,\n  // Tamil\n  tml2: IndicShaper,\n  // Tamil\n  telu: IndicShaper,\n  // Telugu\n  tel2: IndicShaper,\n  // Telugu\n  khmr: IndicShaper,\n  // Khmer\n  bali: UniversalShaper,\n  // Balinese\n  batk: UniversalShaper,\n  // Batak\n  brah: UniversalShaper,\n  // Brahmi\n  bugi: UniversalShaper,\n  // Buginese\n  buhd: UniversalShaper,\n  // Buhid\n  cakm: UniversalShaper,\n  // Chakma\n  cham: UniversalShaper,\n  // Cham\n  dupl: UniversalShaper,\n  // Duployan\n  egyp: UniversalShaper,\n  // Egyptian Hieroglyphs\n  gran: UniversalShaper,\n  // Grantha\n  hano: UniversalShaper,\n  // Hanunoo\n  java: UniversalShaper,\n  // Javanese\n  kthi: UniversalShaper,\n  // Kaithi\n  kali: UniversalShaper,\n  // Kayah Li\n  khar: UniversalShaper,\n  // Kharoshthi\n  khoj: UniversalShaper,\n  // Khojki\n  sind: UniversalShaper,\n  // Khudawadi\n  lepc: UniversalShaper,\n  // Lepcha\n  limb: UniversalShaper,\n  // Limbu\n  mahj: UniversalShaper,\n  // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper,\n  // Meitei Mayek\n  modi: UniversalShaper,\n  // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper,\n  // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper,\n  // Rejang\n  saur: UniversalShaper,\n  // Saurashtra\n  shrd: UniversalShaper,\n  // Sharada\n  sidd: UniversalShaper,\n  // Siddham\n  sinh: UniversalShaper,\n  // Sinhala\n  sund: UniversalShaper,\n  // Sundanese\n  sylo: UniversalShaper,\n  // Syloti Nagri\n  tglg: UniversalShaper,\n  // Tagalog\n  tagb: UniversalShaper,\n  // Tagbanwa\n  tale: UniversalShaper,\n  // Tai Le\n  lana: UniversalShaper,\n  // Tai Tham\n  tavt: UniversalShaper,\n  // Tai Viet\n  takr: UniversalShaper,\n  // Takri\n  tibt: UniversalShaper,\n  // Tibetan\n  tfng: UniversalShaper,\n  // Tifinagh\n  tirh: UniversalShaper,\n  // Tirhuta\n  latn: DefaultShaper,\n  // Latin\n  DFLT: DefaultShaper // Default\n\n};\nfunction choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose$c(script), _step; !(_step = _iterator()).done;) {\n    var s = _step.value;\n    var shaper = SHAPERS[s];\n\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n\nfunction _createForOfIteratorHelperLoose$b(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$b(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$b(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$b(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$b(o, minLen); }\n\nfunction _arrayLikeToArray$b(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar GSUBProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GSUBProcessor, _OTProcessor);\n\n  function GSUBProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GSUBProcessor.prototype;\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    var _this = this;\n\n    switch (lookupType) {\n      case 1:\n        {\n          // Single Substitution\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          var glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Multiple Substitution\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index !== -1) {\n            var _this$glyphs;\n\n            var sequence = table.sequences.get(_index);\n\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            var features = this.glyphIterator.cur.features;\n            var curGlyph = this.glyphIterator.cur;\n            var replacement = sequence.slice(1).map(function (gid, i) {\n              var glyph = new GlyphInfo(_this.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n\n            (_this$glyphs = this.glyphs).splice.apply(_this$glyphs, [this.glyphIterator.index + 1, 0].concat(replacement));\n\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          // Alternate Substitution\n          var _index2 = this.coverageIndex(table.coverage);\n\n          if (_index2 !== -1) {\n            var USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(_index2)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          // Ligature Substitution\n          var _index3 = this.coverageIndex(table.coverage);\n\n          if (_index3 === -1) {\n            return false;\n          }\n\n          for (var _iterator = _createForOfIteratorHelperLoose$b(table.ligatureSets.get(_index3)), _step; !(_step = _iterator()).done;) {\n            var ligature = _step.value;\n            var matched = this.sequenceMatchIndices(1, ligature.components);\n\n            if (!matched) {\n              continue;\n            }\n\n            var _curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            var characters = _curGlyph.codePoints.slice();\n\n            for (var _iterator2 = _createForOfIteratorHelperLoose$b(matched), _step2; !(_step2 = _iterator2()).done;) {\n              var _index4 = _step2.value;\n              characters.push.apply(characters, this.glyphs[_index4].codePoints);\n            } // Create the replacement ligature glyph\n\n\n            var ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, _curGlyph.features);\n            ligatureGlyph.shaperInfo = _curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            var isMarkLigature = _curGlyph.isMark;\n\n            for (var i = 0; i < matched.length && isMarkLigature; i++) {\n              isMarkLigature = this.glyphs[matched[i]].isMark;\n            }\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            var lastLigID = _curGlyph.ligatureID;\n            var lastNumComps = _curGlyph.codePoints.length;\n            var curComps = lastNumComps;\n            var idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose$b(matched), _step3; !(_step3 = _iterator3()).done;) {\n              var matchIndex = _step3.value;\n\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) {\n                idx = matchIndex;\n              } else {\n                while (idx < matchIndex) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                  this.glyphs[idx].ligatureComponent = ligatureComponent;\n                  idx++;\n                }\n              }\n\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) {\n              for (var _i = idx; _i < this.glyphs.length; _i++) {\n                if (this.glyphs[_i].ligatureID === lastLigID) {\n                  var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[_i].ligatureComponent || 1, lastNumComps);\n                  this.glyphs[_i].ligatureComponent = ligatureComponent;\n                } else {\n                  break;\n                }\n              }\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n\n            for (var _i2 = matched.length - 1; _i2 >= 0; _i2--) {\n              this.glyphs.splice(matched[_i2], 1);\n            }\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6:\n        // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7:\n        // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"GSUB lookupType \" + lookupType + \" is not supported\");\n    }\n  };\n\n  return GSUBProcessor;\n}(OTProcessor);\n\nfunction _createForOfIteratorHelperLoose$a(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$a(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$a(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$a(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$a(o, minLen); }\n\nfunction _arrayLikeToArray$a(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar GPOSProcessor = /*#__PURE__*/function (_OTProcessor) {\n  _inheritsLoose(GPOSProcessor, _OTProcessor);\n\n  function GPOSProcessor() {\n    return _OTProcessor.apply(this, arguments) || this;\n  }\n\n  var _proto = GPOSProcessor.prototype;\n\n  _proto.applyPositionValue = function applyPositionValue(sequenceIndex, value) {\n    var position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    } // Adjustments for font variations\n\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    } // TODO: device tables\n\n  };\n\n  _proto.applyLookup = function applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          // Single positioning value\n          var index = this.coverageIndex(table.coverage);\n\n          if (index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          // Pair Adjustment Positioning\n          var nextGlyph = this.glyphIterator.peek();\n\n          if (!nextGlyph) {\n            return false;\n          }\n\n          var _index = this.coverageIndex(table.coverage);\n\n          if (_index === -1) {\n            return false;\n          }\n\n          switch (table.version) {\n            case 1:\n              // Adjustments for glyph pairs\n              var set = table.pairSets.get(_index);\n\n              for (var _iterator = _createForOfIteratorHelperLoose$a(set), _step; !(_step = _iterator()).done;) {\n                var _pair = _step.value;\n\n                if (_pair.secondGlyph === nextGlyph.id) {\n                  this.applyPositionValue(0, _pair.value1);\n                  this.applyPositionValue(1, _pair.value2);\n                  return true;\n                }\n              }\n\n              return false;\n\n            case 2:\n              // Class pair adjustment\n              var class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              var class2 = this.getClassID(nextGlyph.id, table.classDef2);\n\n              if (class1 === -1 || class2 === -1) {\n                return false;\n              }\n\n              var pair = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair.value1);\n              this.applyPositionValue(1, pair.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          // Cursive Attachment Positioning\n          var nextIndex = this.glyphIterator.peekIndex();\n          var _nextGlyph = this.glyphs[nextIndex];\n\n          if (!_nextGlyph) {\n            return false;\n          }\n\n          var curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n\n          if (!curRecord || !curRecord.exitAnchor) {\n            return false;\n          }\n\n          var nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, _nextGlyph.id)];\n\n          if (!nextRecord || !nextRecord.entryAnchor) {\n            return false;\n          }\n\n          var entry = this.getAnchor(nextRecord.entryAnchor);\n          var exit = this.getAnchor(curRecord.exitAnchor);\n          var cur = this.positions[this.glyphIterator.index];\n          var next = this.positions[nextIndex];\n\n          switch (this.direction) {\n            case 'ltr':\n              cur.xAdvance = exit.x + cur.xOffset;\n              var d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case 'rtl':\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            _nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          // Mark to base positioning\n          var markIndex = this.coverageIndex(table.markCoverage);\n\n          if (markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0)) {\n          }\n\n          if (baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n\n          if (baseIndex === -1) {\n            return false;\n          }\n\n          var markRecord = table.markArray[markIndex];\n          var baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          // Mark to ligature positioning\n          var _markIndex = this.coverageIndex(table.markCoverage);\n\n          if (_markIndex === -1) {\n            return false;\n          } // search backward for a base glyph\n\n\n          var _baseGlyphIndex = this.glyphIterator.index;\n\n          while (--_baseGlyphIndex >= 0 && this.glyphs[_baseGlyphIndex].isMark) {\n          }\n\n          if (_baseGlyphIndex < 0) {\n            return false;\n          }\n\n          var ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[_baseGlyphIndex].id);\n\n          if (ligIndex === -1) {\n            return false;\n          }\n\n          var ligAttach = table.ligatureArray[ligIndex];\n          var markGlyph = this.glyphIterator.cur;\n          var ligGlyph = this.glyphs[_baseGlyphIndex];\n          var compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          var _markRecord = table.markArray[_markIndex];\n          var _baseAnchor = ligAttach[compIndex][_markRecord.class];\n          this.applyAnchor(_markRecord, _baseAnchor, _baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          // Mark to mark positioning\n          var mark1Index = this.coverageIndex(table.mark1Coverage);\n\n          if (mark1Index === -1) {\n            return false;\n          } // get the previous mark to attach to\n\n\n          var prevIndex = this.glyphIterator.peekIndex(-1);\n          var prev = this.glyphs[prevIndex];\n\n          if (!prev || !prev.isMark) {\n            return false;\n          }\n\n          var _cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          var good = false;\n\n          if (_cur.ligatureID === prev.ligatureID) {\n            if (!_cur.ligatureID) {\n              // Marks belonging to the same base\n              good = true;\n            } else if (_cur.ligatureComponent === prev.ligatureComponent) {\n              // Marks belonging to the same ligature component\n              good = true;\n            }\n          } else {\n            // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (_cur.ligatureID && !_cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) {\n              good = true;\n            }\n          }\n\n          if (!good) {\n            return false;\n          }\n\n          var mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n\n          if (mark2Index === -1) {\n            return false;\n          }\n\n          var _markRecord2 = table.mark1Array[mark1Index];\n          var _baseAnchor2 = table.mark2Array[mark2Index][_markRecord2.class];\n          this.applyAnchor(_markRecord2, _baseAnchor2, prevIndex);\n          return true;\n        }\n\n      case 7:\n        // Contextual positioning\n        return this.applyContext(table);\n\n      case 8:\n        // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9:\n        // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(\"Unsupported GPOS table: \" + lookupType);\n    }\n  };\n\n  _proto.applyAnchor = function applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    var baseCoords = this.getAnchor(baseAnchor);\n    var markCoords = this.getAnchor(markRecord.markAnchor);\n    this.positions[baseGlyphIndex];\n    var markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  };\n\n  _proto.getAnchor = function getAnchor(anchor) {\n    // TODO: contour point, device tables\n    var x = anchor.xCoordinate;\n    var y = anchor.yCoordinate; // Adjustments for font variations\n\n    var variationProcessor = this.font._variationProcessor;\n    var variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  _proto.applyFeatures = function applyFeatures(userFeatures, glyphs, advances) {\n    _OTProcessor.prototype.applyFeatures.call(this, userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  };\n\n  _proto.fixCursiveAttachment = function fixCursiveAttachment(i) {\n    var glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      var j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  };\n\n  _proto.fixMarkAttachment = function fixMarkAttachment() {\n    for (var i = 0; i < this.glyphs.length; i++) {\n      var glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        var j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (var k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (var _k = j + 1; _k < i + 1; _k++) {\n            this.positions[i].xOffset += this.positions[_k].xAdvance;\n            this.positions[i].yOffset += this.positions[_k].yAdvance;\n          }\n        }\n      }\n    }\n  };\n\n  return GPOSProcessor;\n}(OTProcessor);\n\nvar OTLayoutEngine = /*#__PURE__*/function () {\n  function OTLayoutEngine(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  var _proto = OTLayoutEngine.prototype;\n\n  _proto.setup = function setup(glyphRun) {\n    var _this = this;\n\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphInfo(_this.font, glyph.id, [].concat(glyph.codePoints));\n    }); // Select a script based on what is available in GSUB/GPOS.\n\n    var script = null;\n\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    } // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n\n    this.shaper = choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (var key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    var _this2 = this;\n\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(function (glyphInfo) {\n        return _this2.font.getGlyph(glyphInfo.id, glyphInfo.codePoints);\n      });\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    } // Reverse the glyphs and positions if the script is right-to-left\n\n\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  };\n\n  _proto.zeroMarkAdvances = function zeroMarkAdvances(positions) {\n    for (var i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.cleanup = function cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push.apply(features, Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  };\n\n  return OTLayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$9(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$9(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$9(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$9(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$9(o, minLen); }\n\nfunction _arrayLikeToArray$9(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar LayoutEngine = /*#__PURE__*/function () {\n  function LayoutEngine(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  var _proto = LayoutEngine.prototype;\n\n  _proto.layout = function layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        var codePoints = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose$9(string), _step; !(_step = _iterator()).done;) {\n          var glyph = _step.value;\n          codePoints.push.apply(codePoints, glyph.codePoints);\n        }\n\n        script = forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    var glyphRun = new GlyphRun(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    } // Substitute and position the glyphs\n\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  };\n\n  _proto.substitute = function substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  };\n\n  _proto.position = function position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(function (glyph) {\n      return new GlyphPosition(glyph.advanceWidth);\n    });\n    var positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    } // if there is no GPOS table, use unicode properties to position marks.\n\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  };\n\n  _proto.hideDefaultIgnorables = function hideDefaultIgnorables(glyphs, positions) {\n    var space = this.font.glyphForCodePoint(0x20);\n\n    for (var i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  };\n\n  _proto.isDefaultIgnorable = function isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    var plane = ch >> 16;\n\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n\n        case 0x03:\n          return ch === 0x034F;\n\n        case 0x06:\n          return ch === 0x061C;\n\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n\n        default:\n          return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    var features = [];\n\n    if (this.engine) {\n      features.push.apply(features, this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  };\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    var result = new Set();\n\n    var codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$9(codePoints), _step2; !(_step2 = _iterator2()).done;) {\n      var codePoint = _step2.value;\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (var _iterator3 = _createForOfIteratorHelperLoose$9(this.engine.stringsForGlyph(gid)), _step3; !(_step3 = _iterator3()).done;) {\n        var string = _step3.value;\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  return LayoutEngine;\n}();\n\nfunction _createForOfIteratorHelperLoose$8(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$8(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$8(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$8(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen); }\n\nfunction _arrayLikeToArray$8(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\n\nvar Path = /*#__PURE__*/function () {\n  function Path() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n\n\n  var _proto = Path.prototype;\n\n  _proto.toFunction = function toFunction() {\n    var _this = this;\n\n    return function (ctx) {\n      _this.commands.forEach(function (c) {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  }\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  ;\n\n  _proto.toSVG = function toSVG() {\n    var cmds = this.commands.map(function (c) {\n      var args = c.args.map(function (arg) {\n        return Math.round(arg * 100) / 100;\n      });\n      return \"\" + SVG_COMMANDS[c.command] + args.join(' ');\n    });\n    return cmds.join('');\n  }\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  ;\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  _proto.mapPoints = function mapPoints(fn) {\n    var path = new Path();\n\n    for (var _iterator = _createForOfIteratorHelperLoose$8(this.commands), _step; !(_step = _iterator()).done;) {\n      var c = _step.value;\n      var args = [];\n\n      for (var i = 0; i < c.args.length; i += 2) {\n        var _fn = fn(c.args[i], c.args[i + 1]),\n            x = _fn[0],\n            y = _fn[1];\n\n        args.push(x, y);\n      }\n\n      path[c.command].apply(path, args);\n    }\n\n    return path;\n  }\n  /**\n   * Transforms the path by the given matrix.\n   */\n  ;\n\n  _proto.transform = function transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints(function (x, y) {\n      x = m0 * x + m2 * y + m4;\n      y = m1 * x + m3 * y + m5;\n      return [x, y];\n    });\n  }\n  /**\n   * Translates the path by the given offset.\n   */\n  ;\n\n  _proto.translate = function translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  ;\n\n  _proto.rotate = function rotate(angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n  /**\n   * Scales the path.\n   */\n  ;\n\n  _proto.scale = function scale(scaleX, scaleY) {\n    if (scaleY === void 0) {\n      scaleY = scaleX;\n    }\n\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  };\n\n  _createClass(Path, [{\n    key: \"cbox\",\n    get: function get() {\n      if (!this._cbox) {\n        var cbox = new BBox();\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose$8(this.commands), _step2; !(_step2 = _iterator2()).done;) {\n          var command = _step2.value;\n\n          for (var i = 0; i < command.args.length; i += 2) {\n            cbox.addPoint(command.args[i], command.args[i + 1]);\n          }\n        }\n\n        this._cbox = Object.freeze(cbox);\n      }\n\n      return this._cbox;\n    }\n    /**\n     * Gets the exact bounding box of the path by evaluating curve segments.\n     * Slower to compute than the control box, but more accurate.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      if (this._bbox) {\n        return this._bbox;\n      }\n\n      var bbox = new BBox();\n      var cx = 0,\n          cy = 0;\n\n      var f = function f(t) {\n        return Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n      };\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose$8(this.commands), _step3; !(_step3 = _iterator3()).done;) {\n        var c = _step3.value;\n\n        switch (c.command) {\n          case 'moveTo':\n          case 'lineTo':\n            var _c$args = c.args,\n                x = _c$args[0],\n                y = _c$args[1];\n            bbox.addPoint(x, y);\n            cx = x;\n            cy = y;\n            break;\n\n          case 'quadraticCurveTo':\n          case 'bezierCurveTo':\n            if (c.command === 'quadraticCurveTo') {\n              // http://fontforge.org/bezier.html\n              var _c$args2 = c.args,\n                  qp1x = _c$args2[0],\n                  qp1y = _c$args2[1],\n                  p3x = _c$args2[2],\n                  p3y = _c$args2[3];\n              var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n              var cp1y = cy + 2 / 3 * (qp1y - cy);\n              var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n              var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n            } else {\n              var _c$args3 = c.args,\n                  cp1x = _c$args3[0],\n                  cp1y = _c$args3[1],\n                  cp2x = _c$args3[2],\n                  cp2y = _c$args3[3],\n                  p3x = _c$args3[4],\n                  p3y = _c$args3[5];\n            } // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n            bbox.addPoint(p3x, p3y);\n            var p0 = [cx, cy];\n            var p1 = [cp1x, cp1y];\n            var p2 = [cp2x, cp2y];\n            var p3 = [p3x, p3y];\n\n            for (var i = 0; i <= 1; i++) {\n              var b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n              var a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n              c = 3 * p1[i] - 3 * p0[i];\n\n              if (a === 0) {\n                if (b === 0) {\n                  continue;\n                }\n\n                var t = -c / b;\n\n                if (0 < t && t < 1) {\n                  if (i === 0) {\n                    bbox.addPoint(f(t), bbox.maxY);\n                  } else if (i === 1) {\n                    bbox.addPoint(bbox.maxX, f(t));\n                  }\n                }\n\n                continue;\n              }\n\n              var b2ac = Math.pow(b, 2) - 4 * c * a;\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t1), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t1));\n                }\n              }\n\n              var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t2), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t2));\n                }\n              }\n            }\n\n            cx = p3x;\n            cy = p3y;\n            break;\n        }\n      }\n\n      return this._bbox = Object.freeze(bbox);\n    }\n  }]);\n\n  return Path;\n}();\n\nvar _loop = function _loop() {\n  var command = _arr[_i];\n\n  Path.prototype[command] = function () {\n    this._bbox = this._cbox = null;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this.commands.push({\n      command: command,\n      args: args\n    });\n    return this;\n  };\n};\n\nfor (var _i = 0, _arr = ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']; _i < _arr.length; _i++) {\n  _loop();\n}\n\nvar StandardNames = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\nvar _class$1;\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\n\nvar Glyph = (_class$1 = /*#__PURE__*/function () {\n  function Glyph(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(unicode.isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  var _proto = Glyph.prototype;\n\n  _proto._getPath = function _getPath() {\n    return new Path();\n  };\n\n  _proto._getCBox = function _getCBox() {\n    return this.path.cbox;\n  };\n\n  _proto._getBBox = function _getBBox() {\n    return this.path.bbox;\n  };\n\n  _proto._getTableMetrics = function _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    var metric = table.metrics.get(table.metrics.length - 1);\n    var res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  };\n\n  _proto._getMetrics = function _getMetrics(cbox) {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var _this$_getTableMetric = this._getTableMetrics(this._font.hmtx),\n        advanceWidth = _this$_getTableMetric.advance,\n        leftBearing = _this$_getTableMetric.bearing; // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) {\n      var _this$_getTableMetric2 = this._getTableMetrics(this._font.vmtx),\n          advanceHeight = _this$_getTableMetric2.advance,\n          topBearing = _this$_getTableMetric2.bearing;\n    } else {\n      var os2;\n\n      if (typeof cbox === 'undefined' || cbox === null) {\n        cbox = this.cbox;\n      }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        var hhea = this._font.hhea;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  }\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  ;\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  _proto.getScaledPath = function getScaledPath(size) {\n    var scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  ;\n\n  _proto._getName = function _getName() {\n    var post = this._font.post;\n\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        var id = post.glyphNameIndex[this.id];\n\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  ;\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  _proto.render = function render(ctx, size) {\n    ctx.save();\n    var scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    var fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  };\n\n  _createClass(Glyph, [{\n    key: \"cbox\",\n    get: function get() {\n      return this._getCBox();\n    }\n    /**\n     * The glyph’s bounding box, i.e. the rectangle that encloses the\n     * glyph outline as tightly as possible.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return this._getBBox();\n    }\n    /**\n     * A vector Path object representing the glyph outline.\n     * @type {Path}\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      // Cache the path so we only decode it once\n      // Decoding is actually performed by subclasses\n      return this._getPath();\n    }\n  }, {\n    key: \"advanceWidth\",\n    get: function get() {\n      return this._getMetrics().advanceWidth;\n    }\n    /**\n     * The glyph's advance height.\n     * @type {number}\n     */\n\n  }, {\n    key: \"advanceHeight\",\n    get: function get() {\n      return this._getMetrics().advanceHeight;\n    }\n  }, {\n    key: \"ligatureCaretPositions\",\n    get: function get() {}\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._getName();\n    }\n  }]);\n\n  return Glyph;\n}(), (_applyDecoratedDescriptor(_class$1.prototype, \"cbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"cbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"bbox\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"path\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"path\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceWidth\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceWidth\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"advanceHeight\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"advanceHeight\"), _class$1.prototype), _applyDecoratedDescriptor(_class$1.prototype, \"name\", [cache], Object.getOwnPropertyDescriptor(_class$1.prototype, \"name\"), _class$1.prototype)), _class$1);\n\nfunction _createForOfIteratorHelperLoose$7(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$7(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$7(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen); }\n\nfunction _arrayLikeToArray$7(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar GlyfHeader = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16\n}); // Flags for simple glyphs\n\nvar ON_CURVE$1 = 1 << 0;\nvar X_SHORT_VECTOR$1 = 1 << 1;\nvar Y_SHORT_VECTOR$1 = 1 << 2;\nvar REPEAT$1 = 1 << 3;\nvar SAME_X$1 = 1 << 4;\nvar SAME_Y$1 = 1 << 5; // Flags for composite glyphs\n\nvar ARG_1_AND_2_ARE_WORDS = 1 << 0;\nvar WE_HAVE_A_SCALE = 1 << 3;\nvar MORE_COMPONENTS = 1 << 5;\nvar WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\nvar WE_HAVE_A_TWO_BY_TWO = 1 << 7;\nvar WE_HAVE_INSTRUCTIONS = 1 << 8;\n\nvar Point$1 = /*#__PURE__*/function () {\n  function Point(onCurve, endContour, x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  var _proto = Point.prototype;\n\n  _proto.copy = function copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  };\n\n  return Point;\n}(); // Represents a component in a composite glyph\n\nvar Component = function Component(glyphID, dx, dy) {\n  this.glyphID = glyphID;\n  this.dx = dx;\n  this.dy = dy;\n  this.pos = 0;\n  this.scaleX = this.scaleY = 1;\n  this.scale01 = this.scale10 = 0;\n};\n/**\n * Represents a TrueType glyph.\n */\n\n\nvar TTFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(TTFGlyph, _Glyph);\n\n  function TTFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto2 = TTFGlyph.prototype;\n\n  // Parses just the glyph header and returns the bounding box\n  _proto2._getCBox = function _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += this._font.loca.offsets[this.id];\n    var glyph = GlyfHeader.decode(stream);\n    var cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  } // Parses a single glyph coordinate\n  ;\n\n  _proto2._parseGlyphCoord = function _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  } // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  ;\n\n  _proto2._decode = function _decode() {\n    var glyfPos = this._font.loca.offsets[this.id];\n    var nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) {\n      return null;\n    }\n\n    var stream = this._font._getTableStream('glyf');\n\n    stream.pos += glyfPos;\n    var startPos = stream.pos;\n    var glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  };\n\n  _proto2._decodeSimple = function _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    var endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n    var flags = [];\n    var numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & REPEAT$1) {\n        var count = stream.readUInt8();\n\n        for (var j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      var point = new Point$1(!!(flag & ON_CURVE$1), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    var px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR$1, flag & SAME_X$1);\n    }\n\n    var py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR$1, flag & SAME_Y$1);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = glyph.points.slice();\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  };\n\n  _proto2._decodeComposite = function _decodeComposite(glyph, stream, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    // this is a composite glyph\n    glyph.components = [];\n    var haveInstructions = false;\n    var flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      var gPos = stream.pos - offset;\n      var glyphID = stream.readUInt16BE();\n\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      var points = [];\n\n      for (var j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point$1(true, true, component.dx, component.dy));\n      }\n\n      points.push.apply(points, this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  };\n\n  _proto2._getPhantomPoints = function _getPhantomPoints(glyph) {\n    var cbox = this._getCBox(true);\n\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    var _this$_metrics = this._metrics,\n        advanceWidth = _this$_metrics.advanceWidth,\n        advanceHeight = _this$_metrics.advanceHeight,\n        leftBearing = _this$_metrics.leftBearing,\n        topBearing = _this$_metrics.topBearing;\n    return [new Point$1(false, true, glyph.xMin - leftBearing, 0), new Point$1(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new Point$1(false, true, 0, glyph.yMax + topBearing), new Point$1(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  } // Decodes font data, resolves composite glyphs, and returns an array of contours\n  ;\n\n  _proto2._getContours = function _getContours() {\n    var glyph = this._decode();\n\n    if (!glyph) {\n      return [];\n    }\n\n    var points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (var _iterator = _createForOfIteratorHelperLoose$7(glyph.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n\n        var _contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (var i = 0; i < _contours.length; i++) {\n          var contour = _contours[i];\n\n          for (var j = 0; j < contour.length; j++) {\n            var _point = contour[j];\n            var x = _point.x * component.scaleX + _point.y * component.scale01 + component.dx;\n            var y = _point.y * component.scaleY + _point.x * component.scale10 + component.dy;\n            points.push(new Point$1(_point.onCurve, _point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    } // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    var contours = [];\n    var cur = [];\n\n    for (var k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  };\n\n  _proto2._getMetrics = function _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    var cbox = this._getCBox(true);\n\n    _Glyph.prototype._getMetrics.call(this, cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  } // Converts contours to a Path object that can be rendered\n  ;\n\n  _proto2._getPath = function _getPath() {\n    var contours = this._getContours();\n\n    var path = new Path();\n\n    for (var i = 0; i < contours.length; i++) {\n      var contour = contours[i];\n      var firstPt = contour[0];\n      var lastPt = contour[contour.length - 1];\n      var start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point$1(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (var j = start; j < contour.length; j++) {\n        var pt = contour[j];\n        var prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          var midX = (prevPt.x + pt.x) / 2;\n          var midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      } // Connect the first and last points\n\n\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return TTFGlyph;\n}(Glyph);\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\n\nvar CFFGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(CFFGlyph, _Glyph);\n\n  function CFFGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = CFFGlyph.prototype;\n\n  _proto._getName = function _getName() {\n    if (this._font.CFF2) {\n      return _Glyph.prototype._getName.call(this);\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  };\n\n  _proto.bias = function bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  };\n\n  _proto._getPath = function _getPath() {\n    var cff = this._font.CFF2 || this._font['CFF '];\n    var stream = cff.stream;\n    var str = cff.topDict.CharStrings[this.id];\n    var end = str.offset + str.length;\n    stream.pos = str.offset;\n    var path = new Path();\n    var stack = [];\n    var trans = [];\n    var width = null;\n    var nStems = 0;\n    var x = 0,\n        y = 0;\n    var usedGsubrs;\n    var usedSubrs;\n    var open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    var gsubrs = cff.globalSubrIndex || [];\n    var gsubrsBias = this.bias(gsubrs);\n    var privateDict = cff.privateDictForGlyph(this.id) || {};\n    var subrs = privateDict.Subrs || [];\n    var subrsBias = this.bias(subrs);\n    var vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    var vsindex = privateDict.vsindex;\n    var variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    var parse = function parse() {\n      while (stream.pos < end) {\n        var op = stream.readUInt8();\n\n        if (op < 32) {\n          switch (op) {\n            case 1: // hstem\n\n            case 3: // vstem\n\n            case 18: // hstemhm\n\n            case 23:\n              // vstemhm\n              parseStems();\n              break;\n\n            case 4:\n              // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5:\n              // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              break;\n\n            case 6: // hlineto\n\n            case 7:\n              // vlineto\n              var phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 10:\n              // callsubr\n              var index = stack.pop() + subrsBias;\n              var subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              // return\n              if (cff.version >= 2) {\n                break;\n              }\n\n              return;\n\n            case 14:\n              // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              {\n                // vsindex\n                if (cff.version < 2) {\n                  throw new Error('vsindex operator not supported in CFF v1');\n                }\n\n                vsindex = stack.pop();\n                break;\n              }\n\n            case 16:\n              {\n                // blend\n                if (cff.version < 2) {\n                  throw new Error('blend operator not supported in CFF v1');\n                }\n\n                if (!variationProcessor) {\n                  throw new Error('blend operator in non-variation font');\n                }\n\n                var blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                var numBlends = stack.pop();\n                var numOperands = numBlends * blendVector.length;\n                var delta = stack.length - numOperands;\n                var base = delta - numBlends;\n\n                for (var i = 0; i < numBlends; i++) {\n                  var sum = stack[base + i];\n\n                  for (var j = 0; j < blendVector.length; j++) {\n                    sum += blendVector[j] * stack[delta++];\n                  }\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) {\n                  stack.pop();\n                }\n\n                break;\n              }\n\n            case 19: // hintmask\n\n            case 20:\n              // cntrmask\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22:\n              // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24:\n              // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25:\n              // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26:\n              // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 27:\n              // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              break;\n\n            case 28:\n              // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30: // vhcurveto\n\n            case 31:\n              {\n                // hvcurveto\n                var _phase = op === 31;\n\n                while (stack.length >= 4) {\n                  if (_phase) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                  } else {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                  }\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                  _phase = !_phase;\n                }\n\n                break;\n              }\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  // and\n                  var a = stack.pop();\n                  var b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  // drop\n                  stack.pop();\n                  break;\n\n                case 20:\n                  // put\n                  var val = stack.pop();\n                  var idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  // ifelse\n                  var s1 = stack.pop();\n                  var s2 = stack.pop();\n                  var v1 = stack.pop();\n                  var v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  // index\n                  idx = stack.pop();\n\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  // roll\n                  var n = stack.pop();\n\n                  var _j = stack.pop();\n\n                  if (_j >= 0) {\n                    while (_j > 0) {\n                      var t = stack[n - 1];\n\n                      for (var _i = n - 2; _i >= 0; _i--) {\n                        stack[_i + 1] = stack[_i];\n                      }\n\n                      stack[0] = t;\n                      _j--;\n                    }\n                  } else {\n                    while (_j < 0) {\n                      var t = stack[0];\n\n                      for (var _i2 = 0; _i2 <= n; _i2++) {\n                        stack[_i2] = stack[_i2 + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      _j++;\n                    }\n                  }\n\n                  break;\n\n                case 34:\n                  // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  var c3x = c2x + stack.shift();\n                  var c3y = c2y;\n                  var c4x = c3x + stack.shift();\n                  var c4y = c3y;\n                  var c5x = c4x + stack.shift();\n                  var c5y = c4y;\n                  var c6x = c5x + stack.shift();\n                  var c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  // flex\n                  var pts = [];\n\n                  for (var _i3 = 0; _i3 <= 5; _i3++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  // flex1\n                  var startx = x;\n                  var starty = y;\n                  pts = [];\n\n                  for (var _i4 = 0; _i4 <= 4; _i4++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) {\n                    // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo.apply(path, pts.slice(0, 6));\n                  path.bezierCurveTo.apply(path, pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(\"Unknown op: 12 \" + op);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"Unknown op: \" + op);\n          }\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  };\n\n  return CFFGlyph;\n}(Glyph);\n\nvar SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(function (t) {\n    return t.parent.buflen - t._currentOffset;\n  })\n});\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\n\nvar SBIXGlyph = /*#__PURE__*/function (_TTFGlyph) {\n  _inheritsLoose(SBIXGlyph, _TTFGlyph);\n\n  function SBIXGlyph() {\n    return _TTFGlyph.apply(this, arguments) || this;\n  }\n\n  var _proto = SBIXGlyph.prototype;\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  _proto.getImageForSize = function getImageForSize(size) {\n    for (var i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n\n      if (table.ppem >= size) {\n        break;\n      }\n    }\n\n    var offsets = table.imageOffsets;\n    var start = offsets[this.id];\n    var end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  };\n\n  _proto.render = function render(ctx, size) {\n    var img = this.getImageForSize(size);\n\n    if (img != null) {\n      var scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      _TTFGlyph.prototype.render.call(this, ctx, size);\n    }\n  };\n\n  return SBIXGlyph;\n}(TTFGlyph);\n\nfunction _createForOfIteratorHelperLoose$6(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$6(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$6(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen); }\n\nfunction _arrayLikeToArray$6(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar COLRLayer = function COLRLayer(glyph, color) {\n  this.glyph = glyph;\n  this.color = color;\n};\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\n\n\nvar COLRGlyph = /*#__PURE__*/function (_Glyph) {\n  _inheritsLoose(COLRGlyph, _Glyph);\n\n  function COLRGlyph() {\n    return _Glyph.apply(this, arguments) || this;\n  }\n\n  var _proto = COLRGlyph.prototype;\n\n  _proto._getBBox = function _getBBox() {\n    var bbox = new BBox();\n\n    for (var i = 0; i < this.layers.length; i++) {\n      var layer = this.layers[i];\n      var b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  ;\n\n  _proto.render = function render(ctx, size) {\n    for (var _iterator = _createForOfIteratorHelperLoose$6(this.layers), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          glyph = _step$value.glyph,\n          color = _step$value.color;\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  };\n\n  _createClass(COLRGlyph, [{\n    key: \"layers\",\n    get: function get() {\n      var cpal = this._font.CPAL;\n      var colr = this._font.COLR;\n      var low = 0;\n      var high = colr.baseGlyphRecord.length - 1;\n\n      while (low <= high) {\n        var mid = low + high >> 1;\n        var rec = colr.baseGlyphRecord[mid];\n\n        if (this.id < rec.gid) {\n          high = mid - 1;\n        } else if (this.id > rec.gid) {\n          low = mid + 1;\n        } else {\n          var baseLayer = rec;\n          break;\n        }\n      } // if base glyph not found in COLR table,\n      // default to normal glyph from glyf or CFF\n\n\n      if (baseLayer == null) {\n        var g = this._font._getBaseGlyph(this.id);\n\n        var color = {\n          red: 0,\n          green: 0,\n          blue: 0,\n          alpha: 255\n        };\n        return [new COLRLayer(g, color)];\n      } // otherwise, return an array of all the layers\n\n\n      var layers = [];\n\n      for (var i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n        var rec = colr.layerRecords[i];\n        var color = cpal.colorRecords[rec.paletteIndex];\n\n        var g = this._font._getBaseGlyph(rec.gid);\n\n        layers.push(new COLRLayer(g, color));\n      }\n\n      return layers;\n    }\n  }]);\n\n  return COLRGlyph;\n}(Glyph);\n\nvar TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nvar TUPLE_COUNT_MASK = 0x0fff;\nvar EMBEDDED_TUPLE_COORD = 0x8000;\nvar INTERMEDIATE_TUPLE = 0x4000;\nvar PRIVATE_POINT_NUMBERS = 0x2000;\nvar TUPLE_INDEX_MASK = 0x0fff;\nvar POINTS_ARE_WORDS = 0x80;\nvar POINT_RUN_COUNT_MASK = 0x7f;\nvar DELTAS_ARE_ZERO = 0x80;\nvar DELTAS_ARE_WORDS = 0x40;\nvar DELTA_RUN_COUNT_MASK = 0x3f;\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\n\nvar GlyphVariationProcessor = /*#__PURE__*/function () {\n  function GlyphVariationProcessor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n  var _proto = GlyphVariationProcessor.prototype;\n\n  _proto.normalizeCoords = function normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    var normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      var axis = this.font.fvar.axis[i];\n\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        var segment = this.font.avar.segment[i];\n\n        for (var j = 0; j < segment.correspondence.length; j++) {\n          var pair = segment.correspondence[j];\n\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            var prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  };\n\n  _proto.transformPoints = function transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) {\n      return;\n    }\n\n    var gvar = this.font.gvar;\n\n    if (gid >= gvar.glyphCount) {\n      return;\n    }\n\n    var offset = gvar.offsets[gid];\n\n    if (offset === gvar.offsets[gid + 1]) {\n      return;\n    } // Read the gvar data for this glyph\n\n\n    var stream = this.font.stream;\n    stream.pos = offset;\n\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    var tupleCount = stream.readUInt16BE();\n    var offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    var origPoints = glyphPoints.map(function (pt) {\n      return pt.copy();\n    });\n    tupleCount &= TUPLE_COUNT_MASK;\n\n    for (var i = 0; i < tupleCount; i++) {\n      var tupleDataSize = stream.readUInt16BE();\n      var tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (var a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (var _a = 0; _a < gvar.axisCount; _a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n\n        for (var _a2 = 0; _a2 < gvar.axisCount; _a2++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      } // Get the factor at which to apply this tuple\n\n\n      var factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      } // points.length = 0 means there are deltas for all points\n\n\n      var nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      var xDeltas = this.decodeDeltas(nPoints);\n      var yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) {\n        // all points\n        for (var _i = 0; _i < glyphPoints.length; _i++) {\n          var point = glyphPoints[_i];\n          point.x += Math.round(xDeltas[_i] * factor);\n          point.y += Math.round(yDeltas[_i] * factor);\n        }\n      } else {\n        var outPoints = origPoints.map(function (pt) {\n          return pt.copy();\n        });\n        var hasDelta = glyphPoints.map(function () {\n          return false;\n        });\n\n        for (var _i2 = 0; _i2 < points.length; _i2++) {\n          var idx = points[_i2];\n\n          if (idx < glyphPoints.length) {\n            var _point = outPoints[idx];\n            hasDelta[idx] = true;\n            _point.x += Math.round(xDeltas[_i2] * factor);\n            _point.y += Math.round(yDeltas[_i2] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (var _i3 = 0; _i3 < glyphPoints.length; _i3++) {\n          var deltaX = outPoints[_i3].x - origPoints[_i3].x;\n          var deltaY = outPoints[_i3].y - origPoints[_i3].y;\n          glyphPoints[_i3].x += deltaX;\n          glyphPoints[_i3].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  };\n\n  _proto.decodePoints = function decodePoints() {\n    var stream = this.font.stream;\n    var count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    var points = new Uint16Array(count);\n    var i = 0;\n    var point = 0;\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      var fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (var j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  };\n\n  _proto.decodeDeltas = function decodeDeltas(count) {\n    var stream = this.font.stream;\n    var i = 0;\n    var deltas = new Int16Array(count);\n\n    while (i < count) {\n      var run = stream.readUInt8();\n      var runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n      } else {\n        var fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (var j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  };\n\n  _proto.tupleFactor = function tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    var normalized = this.normalizedCoords;\n    var gvar = this.font.gvar;\n    var factor = 1;\n\n    for (var i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) {\n          return 0;\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  } // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  ;\n\n  _proto.interpolateMissingDeltas = function interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    var point = 0;\n\n    while (point < points.length) {\n      var firstPoint = point; // find the end point of the contour\n\n      var endPoint = point;\n      var pt = points[endPoint];\n\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      } // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      var firstDelta = point;\n      var curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  };\n\n  _proto.deltaInterpolate = function deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    var iterable = ['x', 'y'];\n\n    for (var i = 0; i < iterable.length; i++) {\n      var k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      var in1 = inPoints[ref1][k];\n      var in2 = inPoints[ref2][k];\n      var out1 = outPoints[ref1][k];\n      var out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        var scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (var _p = p1; _p <= p2; _p++) {\n          var out = inPoints[_p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[_p][k] = out;\n        }\n      }\n    }\n  };\n\n  _proto.deltaShift = function deltaShift(p1, p2, ref, inPoints, outPoints) {\n    var deltaX = outPoints[ref].x - inPoints[ref].x;\n    var deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (var p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  };\n\n  _proto.getAdvanceAdjustment = function getAdvanceAdjustment(gid, table) {\n    var outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      var idx = gid;\n\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      table.advanceWidthMapping.entryFormat;\n      var _table$advanceWidthMa = table.advanceWidthMapping.mapData[idx];\n      outerIndex = _table$advanceWidthMa.outerIndex;\n      innerIndex = _table$advanceWidthMa.innerIndex;\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  } // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  ;\n\n  _proto.getDelta = function getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    var deltaSet = varData.deltaSets[innerIndex];\n    var blendVector = this.getBlendVector(itemStore, outerIndex);\n    var netAdjustment = 0;\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  };\n\n  _proto.getBlendVector = function getBlendVector(itemStore, outerIndex) {\n    var varData = itemStore.itemVariationData[outerIndex];\n\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    var normalizedCoords = this.normalizedCoords;\n    var blendVector = []; // outer loop steps through master designs to be blended\n\n    for (var master = 0; master < varData.regionIndexCount; master++) {\n      var scalar = 1;\n      var regionIndex = varData.regionIndexes[master];\n      var axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (var j = 0; j < axes.length; j++) {\n        var axis = axes[j];\n        var axisScalar = void 0; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1; // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1; // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0; // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        } // take product of all the axis scalars\n\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  };\n\n  return GlyphVariationProcessor;\n}();\n\nvar resolved = Promise.resolve();\n\nvar Subset = /*#__PURE__*/function () {\n  function Subset(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n  var _proto = Subset.prototype;\n\n  _proto.includeGlyph = function includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  };\n\n  _proto.encodeStream = function encodeStream() {\n    var _this = this;\n\n    var s = new r.EncodeStream();\n    resolved.then(function () {\n      _this.encode(s);\n\n      return s.end();\n    });\n    return s;\n  };\n\n  return Subset;\n}();\n\nvar ON_CURVE = 1 << 0;\nvar X_SHORT_VECTOR = 1 << 1;\nvar Y_SHORT_VECTOR = 1 << 2;\nvar REPEAT = 1 << 3;\nvar SAME_X = 1 << 4;\nvar SAME_Y = 1 << 5;\n\nvar Point = /*#__PURE__*/function () {\n  function Point() {}\n\n  Point.size = function size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  };\n\n  Point.encode = function encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  };\n\n  return Point;\n}();\n\nvar Glyf = new r.Struct({\n  numberOfContours: r.int16,\n  // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n/**\n * Encodes TrueType glyph outlines\n */\n\nvar TTFGlyphEncoder = /*#__PURE__*/function () {\n  function TTFGlyphEncoder() {}\n\n  var _proto = TTFGlyphEncoder.prototype;\n\n  _proto.encodeSimple = function encodeSimple(path, instructions) {\n    if (instructions === void 0) {\n      instructions = [];\n    }\n\n    var endPtsOfContours = [];\n    var xPoints = [];\n    var yPoints = [];\n    var flags = [];\n    var same = 0;\n    var lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    var pointCount = 0;\n\n    for (var i = 0; i < path.commands.length; i++) {\n      var c = path.commands[i];\n\n      for (var j = 0; j < c.args.length; j += 2) {\n        var x = c.args[j];\n        var y = c.args[j + 1];\n        var flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          var next = path.commands[i + 1];\n\n          if (next && next.command === 'quadraticCurveTo') {\n            var midX = (lastX + next.args[0]) / 2;\n            var midY = (lastY + next.args[1]) / 2;\n\n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n\n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n\n    var bbox = path.bbox;\n    var glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    var size = Glyf.size(glyf);\n    var tail = 4 - size % 4;\n    var stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n\n    return stream.buffer;\n  };\n\n  _proto._encodePoint = function _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    var diff = value - last;\n\n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n\n      points.push(diff);\n    }\n\n    return flag;\n  };\n\n  return TTFGlyphEncoder;\n}();\n\nfunction _createForOfIteratorHelperLoose$5(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$5(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$5(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen); }\n\nfunction _arrayLikeToArray$5(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar TTFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(TTFSubset, _Subset);\n\n  function TTFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.glyphEncoder = new TTFGlyphEncoder();\n    return _this;\n  }\n\n  var _proto = TTFSubset.prototype;\n\n  _proto._addGlyph = function _addGlyph(gid) {\n    var glyph = this.font.getGlyph(gid);\n\n    var glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    var curOffset = this.font.loca.offsets[gid];\n    var nextOffset = this.font.loca.offsets[gid + 1];\n\n    var stream = this.font._getTableStream('glyf');\n\n    stream.pos += curOffset;\n    var buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = Buffer.from(buffer);\n\n      for (var _iterator = _createForOfIteratorHelperLoose$5(glyf.components), _step; !(_step = _iterator()).done;) {\n        var component = _step.value;\n        gid = this.includeGlyph(component.glyphID);\n        buffer.writeUInt16BE(gid, component.pos);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    var i = 0;\n\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    var maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    var head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    var hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    Directory.encode(stream, {\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n\n      }\n    });\n  };\n\n  return TTFSubset;\n}(Subset);\n\nfunction _createForOfIteratorHelperLoose$4(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$4(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$4(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen); }\n\nfunction _arrayLikeToArray$4(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar CFFSubset = /*#__PURE__*/function (_Subset) {\n  _inheritsLoose(CFFSubset, _Subset);\n\n  function CFFSubset(font) {\n    var _this;\n\n    _this = _Subset.call(this, font) || this;\n    _this.cff = _this.font['CFF '];\n\n    if (!_this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n\n    return _this;\n  }\n\n  var _proto = CFFSubset.prototype;\n\n  _proto.subsetCharstrings = function subsetCharstrings() {\n    this.charstrings = [];\n    var gsubrs = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose$4(this.glyphs), _step; !(_step = _iterator()).done;) {\n      var gid = _step.value;\n      this.charstrings.push(this.cff.getCharString(gid));\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  };\n\n  _proto.subsetSubrs = function subsetSubrs(subrs, used) {\n    var res = [];\n\n    for (var i = 0; i < subrs.length; i++) {\n      var subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(Buffer.from([11])); // return\n      }\n    }\n\n    return res;\n  };\n\n  _proto.subsetFontdict = function subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    var used_fds = {};\n    var used_subrs = [];\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose$4(this.glyphs), _step2; !(_step2 = _iterator2()).done;) {\n      var gid = _step2.value;\n      var fd = this.cff.fdForGlyph(gid);\n\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(topDict.FDArray.length - 1);\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[used_subrs.length - 1][subr] = true;\n      }\n    }\n\n    for (var i = 0; i < topDict.FDArray.length; i++) {\n      var dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  };\n\n  _proto.createCIDFontdict = function createCIDFontdict(topDict) {\n    var used_subrs = {};\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose$4(this.glyphs), _step3; !(_step3 = _iterator3()).done;) {\n      var gid = _step3.value;\n      var glyph = this.font.getGlyph(gid);\n      glyph.path; // this causes the glyph to be parsed\n\n      for (var subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    var privateDict = Object.assign({}, this.cff.topDict.Private);\n\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  };\n\n  _proto.addString = function addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  };\n\n  _proto.encode = function encode(stream) {\n    this.subsetCharstrings();\n    var charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    var topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (var _i = 0, _arr = ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    var top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    CFFTop.encode(stream, top);\n  };\n\n  return CFFSubset;\n}(Subset);\n\nvar _class;\n\nfunction _createForOfIteratorHelperLoose$3(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$3(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }\n\nfunction _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\n\nvar TTFFont = (_class = /*#__PURE__*/function () {\n  TTFFont.probe = function probe(buffer) {\n    var format = buffer.toString('ascii', 0, 4);\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  };\n\n  function TTFFont(stream, variationCoords) {\n    if (variationCoords === void 0) {\n      variationCoords = null;\n    }\n\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (var tag in this.directory.tables) {\n      var table = this.directory.tables[tag];\n\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  var _proto = TTFFont.prototype;\n\n  _proto.setDefaultLanguage = function setDefaultLanguage(lang) {\n    if (lang === void 0) {\n      lang = null;\n    }\n\n    this.defaultLanguage = lang;\n  };\n\n  _proto._getTable = function _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(\"Error decoding table \" + table.tag);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  };\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._decodeTable = function _decodeTable(table) {\n    var pos = this.stream.pos;\n\n    var stream = this._getTableStream(table.tag);\n\n    var result = tables[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  }\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  ;\n\n  _proto.getName = function getName(key, lang) {\n    if (lang === void 0) {\n      lang = this.defaultLanguage || fontkit.defaultLanguage;\n    }\n\n    var record = this.name && this.name.records[key];\n\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[fontkit.defaultLanguage] || record['en'] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    }\n\n    return null;\n  }\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  ;\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  ;\n\n  _proto.glyphsForString = function glyphsForString(string) {\n    var glyphs = [];\n    var len = string.length;\n    var idx = 0;\n    var last = -1;\n    var state = -1;\n\n    while (idx <= len) {\n      var code = 0;\n      var nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          var next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  };\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  _proto.layout = function layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  ;\n\n  _proto.stringsForGlyph = function stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  ;\n\n  _proto.getAvailableFeatures = function getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  };\n\n  _proto._getBaseGlyph = function _getBaseGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  ;\n\n  _proto.getGlyph = function getGlyph(glyph, characters) {\n    if (characters === void 0) {\n      characters = [];\n    }\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n      } else if (this.directory.tables.COLR && this.directory.tables.CPAL) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  ;\n\n  _proto.createSubset = function createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  ;\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  _proto.getVariation = function getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    } // normalize the coordinates\n\n\n    var coords = this.fvar.axis.map(function (axis, i) {\n      var axisTag = axis.axisTag.trim();\n\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n    var stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    var font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n    return font;\n  };\n\n  // Standardized format plugin API\n  _proto.getFont = function getFont(name) {\n    return this.getVariation(name);\n  };\n\n  _createClass(TTFFont, [{\n    key: \"postscriptName\",\n    get: function get() {\n      return this.getName('postscriptName');\n    }\n    /**\n     * The font's full name, e.g. \"Helvetica Bold\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return this.getName('fullName');\n    }\n    /**\n     * The font's family name, e.g. \"Helvetica\"\n     * @type {string}\n     */\n\n  }, {\n    key: \"familyName\",\n    get: function get() {\n      return this.getName('fontFamily');\n    }\n    /**\n     * The font's sub-family, e.g. \"Bold\".\n     * @type {string}\n     */\n\n  }, {\n    key: \"subfamilyName\",\n    get: function get() {\n      return this.getName('fontSubfamily');\n    }\n    /**\n     * The font's copyright information\n     * @type {string}\n     */\n\n  }, {\n    key: \"copyright\",\n    get: function get() {\n      return this.getName('copyright');\n    }\n    /**\n     * The font's version number\n     * @type {string}\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return this.getName('version');\n    }\n    /**\n     * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n     * @type {number}\n     */\n\n  }, {\n    key: \"ascent\",\n    get: function get() {\n      return this.hhea.ascent;\n    }\n    /**\n     * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n     * @type {number}\n     */\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      return this.hhea.descent;\n    }\n    /**\n     * The amount of space that should be included between lines\n     * @type {number}\n     */\n\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return this.hhea.lineGap;\n    }\n    /**\n     * The offset from the normal underline position that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlinePosition\",\n    get: function get() {\n      return this.post.underlinePosition;\n    }\n    /**\n     * The weight of the underline that should be used\n     * @type {number}\n     */\n\n  }, {\n    key: \"underlineThickness\",\n    get: function get() {\n      return this.post.underlineThickness;\n    }\n    /**\n     * If this is an italic font, the angle the cursor should be drawn at to match the font design\n     * @type {number}\n     */\n\n  }, {\n    key: \"italicAngle\",\n    get: function get() {\n      return this.post.italicAngle;\n    }\n    /**\n     * The height of capital letters above the baseline.\n     * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n     * The height of lower case letters in the font.\n     * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n     * @type {number}\n     */\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      var os2 = this['OS/2'];\n      return os2 ? os2.xHeight : 0;\n    }\n    /**\n     * The number of glyphs in the font.\n     * @type {number}\n     */\n\n  }, {\n    key: \"numGlyphs\",\n    get: function get() {\n      return this.maxp.numGlyphs;\n    }\n    /**\n     * The size of the font’s internal coordinate grid\n     * @type {number}\n     */\n\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return this.head.unitsPerEm;\n    }\n    /**\n     * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n     * @type {BBox}\n     */\n\n  }, {\n    key: \"bbox\",\n    get: function get() {\n      return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n  }, {\n    key: \"_cmapProcessor\",\n    get: function get() {\n      return new CmapProcessor(this.cmap);\n    }\n    /**\n     * An array of all of the unicode code points supported by the font.\n     * @type {number[]}\n     */\n\n  }, {\n    key: \"characterSet\",\n    get: function get() {\n      return this._cmapProcessor.getCharacterSet();\n    }\n  }, {\n    key: \"_layoutEngine\",\n    get: function get() {\n      return new LayoutEngine(this);\n    }\n  }, {\n    key: \"availableFeatures\",\n    get: function get() {\n      return this._layoutEngine.getAvailableFeatures();\n    }\n  }, {\n    key: \"variationAxes\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator = _createForOfIteratorHelperLoose$3(this.fvar.axis), _step; !(_step = _iterator()).done;) {\n        var axis = _step.value;\n        res[axis.axisTag.trim()] = {\n          name: axis.name.en,\n          min: axis.minValue,\n          default: axis.defaultValue,\n          max: axis.maxValue\n        };\n      }\n\n      return res;\n    }\n    /**\n     * Returns an object describing the named variation instances\n     * that the font designer has specified. Keys are variation names\n     * and values are the variation settings for this instance.\n     *\n     * @type {object}\n     */\n\n  }, {\n    key: \"namedVariations\",\n    get: function get() {\n      var res = {};\n\n      if (!this.fvar) {\n        return res;\n      }\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$3(this.fvar.instance), _step2; !(_step2 = _iterator2()).done;) {\n        var instance = _step2.value;\n        var settings = {};\n\n        for (var i = 0; i < this.fvar.axis.length; i++) {\n          var axis = this.fvar.axis[i];\n          settings[axis.axisTag.trim()] = instance.coord[i];\n        }\n\n        res[instance.name.en] = settings;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"_variationProcessor\",\n    get: function get() {\n      if (!this.fvar) {\n        return null;\n      }\n\n      var variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n      if (!variationCoords && !this.CFF2) {\n        return null;\n      }\n\n      if (!variationCoords) {\n        variationCoords = this.fvar.axis.map(function (axis) {\n          return axis.defaultValue;\n        });\n      }\n\n      return new GlyphVariationProcessor(this, variationCoords);\n    }\n  }]);\n\n  return TTFFont;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"bbox\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"bbox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_cmapProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_cmapProcessor\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"characterSet\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"characterSet\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_layoutEngine\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_layoutEngine\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"variationAxes\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"variationAxes\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"namedVariations\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"namedVariations\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_variationProcessor\", [cache], Object.getOwnPropertyDescriptor(_class.prototype, \"_variationProcessor\"), _class.prototype)), _class);\n\nfunction _createForOfIteratorHelperLoose$2(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }\n\nfunction _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar WOFFDirectoryEntry = new r.Struct({\n  tag: new r.String(4),\n  offset: new r.Pointer(r.uint32, 'void', {\n    type: 'global'\n  }),\n  compLength: r.uint32,\n  length: r.uint32,\n  origChecksum: r.uint32\n});\nvar WOFFDirectory = new r.Struct({\n  tag: new r.String(4),\n  // should be 'wOFF'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function () {\n  var tables = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose$2(this.tables), _step; !(_step = _iterator()).done;) {\n    var table = _step.value;\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nvar WOFFFont = /*#__PURE__*/function (_TTFFont) {\n  _inheritsLoose(WOFFFont, _TTFFont);\n\n  function WOFFFont() {\n    return _TTFFont.apply(this, arguments) || this;\n  }\n\n  WOFFFont.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'wOFF';\n  };\n\n  var _proto = WOFFFont.prototype;\n\n  _proto._decodeDirectory = function _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, {\n      _startOffset: 0\n    });\n  };\n\n  _proto._getTableStream = function _getTableStream(tag) {\n    var table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        var outBuffer = Buffer.alloc(table.length);\n        var buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  };\n\n  return WOFFFont;\n}(TTFFont);\n\nfunction _createForOfIteratorHelperLoose$1(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }\n\nfunction _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts: r.uint32,\n    offsets: new r.Array(r.uint32, 'numFonts'),\n    dsigTag: r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nvar TrueTypeCollection = /*#__PURE__*/function () {\n  TrueTypeCollection.probe = function probe(buffer) {\n    return buffer.toString('ascii', 0, 4) === 'ttcf';\n  };\n\n  function TrueTypeCollection(stream) {\n    this.stream = stream;\n\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  var _proto = TrueTypeCollection.prototype;\n\n  _proto.getFont = function getFont(name) {\n    for (var _iterator = _createForOfIteratorHelperLoose$1(this.header.offsets), _step; !(_step = _iterator()).done;) {\n      var offset = _step.value;\n      var stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(TrueTypeCollection, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose$1(this.header.offsets), _step2; !(_step2 = _iterator2()).done;) {\n        var offset = _step2.value;\n        var stream = new r.DecodeStream(this.stream.buffer);\n        stream.pos = offset;\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return TrueTypeCollection;\n}();\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar DFontName = new r.String(r.uint8);\nnew r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\nvar Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\nvar Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, function (t) {\n    return t.maxTypeIndex + 1;\n  }), {\n    type: 'parent'\n  })\n});\nvar TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, function (t) {\n    return t.length + 1;\n  })\n});\nvar DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\nvar DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nvar DFont = /*#__PURE__*/function () {\n  DFont.probe = function probe(buffer) {\n    var stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(header.map.typeList.types), _step; !(_step = _iterator()).done;) {\n      var type = _step.value;\n\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function DFont(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this.header.map.typeList.types), _step2; !(_step2 = _iterator2()).done;) {\n      var type = _step2.value;\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(type.refList), _step3; !(_step3 = _iterator3()).done;) {\n        var ref = _step3.value;\n\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  var _proto = DFont.prototype;\n\n  _proto.getFont = function getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step4; !(_step4 = _iterator4()).done;) {\n      var ref = _step4.value;\n      var pos = this.header.dataOffset + ref.dataOffset + 4;\n      var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      var font = new TTFFont(stream);\n\n      if (font.postscriptName === name) {\n        return font;\n      }\n    }\n\n    return null;\n  };\n\n  _createClass(DFont, [{\n    key: \"fonts\",\n    get: function get() {\n      var fonts = [];\n\n      for (var _iterator5 = _createForOfIteratorHelperLoose(this.sfnt.refList), _step5; !(_step5 = _iterator5()).done;) {\n        var ref = _step5.value;\n        var pos = this.header.dataOffset + ref.dataOffset + 4;\n        var stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n        fonts.push(new TTFFont(stream));\n      }\n\n      return fonts;\n    }\n  }]);\n\n  return DFont;\n}();\n\nfontkit.registerFormat(TTFFont);\nfontkit.registerFormat(WOFFFont);\nfontkit.registerFormat(TrueTypeCollection);\nfontkit.registerFormat(DFont);\n\nexport default fontkit;\n"]},"metadata":{},"sourceType":"module"}