{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _scale = _interopRequireDefault(require(\"../run/scale\"));\n\nvar _resolve = _interopRequireDefault(require(\"../indices/resolve\"));\n\nvar getCharacterSpacing = R.pathOr(0, ['attributes', 'characterSpacing']);\n/**\n * Scale run positions\n *\n * @param  {Object}  run\n * @param  {Array}  positions\n * @return {Array} scaled positions\n */\n\nvar scalePositions = function scalePositions(run, positions) {\n  var multScale = R.multiply((0, _scale.default)(run));\n  var characterSpacing = getCharacterSpacing(run);\n  var scalePosition = R.evolve({\n    xAdvance: R.o(R.add(characterSpacing), multScale),\n    yAdvance: multScale,\n    xOffset: multScale,\n    yOffset: multScale\n  });\n  var subCharacterSpacing = R.evolve({\n    xAdvance: R.subtract(R.__, characterSpacing)\n  });\n  return R.compose(R.adjust(-1, subCharacterSpacing), R.map(scalePosition))(positions);\n};\n/**\n * Create glyph run\n *\n * @param  {String}  string\n * @param  {Object}  run\n * @return {Object}  glyph run\n */\n\n\nvar layoutRun = function layoutRun(string) {\n  return function (run) {\n    var start = run.start,\n        end = run.end,\n        _run$attributes = run.attributes,\n        attributes = _run$attributes === void 0 ? {} : _run$attributes;\n    var font = attributes.font;\n    if (!font) return (0, _extends2.default)({}, run, {\n      glyphs: [],\n      glyphIndices: [],\n      positions: []\n    });\n    var runString = string.slice(start, end);\n    var glyphRun = font.layout(runString);\n    var positions = scalePositions(run, glyphRun.positions);\n    var glyphIndices = (0, _resolve.default)(glyphRun.glyphs);\n    return (0, _extends2.default)({}, run, {\n      positions: positions,\n      glyphIndices: glyphIndices,\n      glyphs: glyphRun.glyphs\n    });\n  };\n};\n/**\n * Generate glyphs for single attributed string\n *\n * @param  {Object}  layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings\n * @return {Array} attributed string with glyphs\n */\n\n\nvar generateGlyphs = function generateGlyphs() {\n  return function (attributedString) {\n    return R.evolve({\n      runs: R.map(layoutRun(attributedString.string))\n    })(attributedString);\n  };\n};\n\nvar _default = generateGlyphs;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/textkit/lib/layout/generateGlyphs.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","default","_extends2","R","_scale","_resolve","getCharacterSpacing","pathOr","scalePositions","run","positions","multScale","multiply","characterSpacing","scalePosition","evolve","xAdvance","o","add","yAdvance","xOffset","yOffset","subCharacterSpacing","subtract","__","compose","adjust","map","layoutRun","string","start","end","_run$attributes","attributes","font","glyphs","glyphIndices","runString","slice","glyphRun","layout","generateGlyphs","attributedString","runs","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8CAAD,CAApC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,SAAS,GAAGJ,sBAAsB,CAACD,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIM,CAAC,GAAGP,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIO,MAAM,GAAGN,sBAAsB,CAACD,OAAO,CAAC,cAAD,CAAR,CAAnC;;AAEA,IAAIQ,QAAQ,GAAGP,sBAAsB,CAACD,OAAO,CAAC,oBAAD,CAAR,CAArC;;AAEA,IAAIS,mBAAmB,GAAGH,CAAC,CAACI,MAAF,CAAS,CAAT,EAAY,CAAC,YAAD,EAAe,kBAAf,CAAZ,CAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,SAA7B,EAAwC;AAC3D,MAAIC,SAAS,GAAGR,CAAC,CAACS,QAAF,CAAW,CAAC,GAAGR,MAAM,CAACH,OAAX,EAAoBQ,GAApB,CAAX,CAAhB;AACA,MAAII,gBAAgB,GAAGP,mBAAmB,CAACG,GAAD,CAA1C;AACA,MAAIK,aAAa,GAAGX,CAAC,CAACY,MAAF,CAAS;AAC3BC,IAAAA,QAAQ,EAAEb,CAAC,CAACc,CAAF,CAAId,CAAC,CAACe,GAAF,CAAML,gBAAN,CAAJ,EAA6BF,SAA7B,CADiB;AAE3BQ,IAAAA,QAAQ,EAAER,SAFiB;AAG3BS,IAAAA,OAAO,EAAET,SAHkB;AAI3BU,IAAAA,OAAO,EAAEV;AAJkB,GAAT,CAApB;AAMA,MAAIW,mBAAmB,GAAGnB,CAAC,CAACY,MAAF,CAAS;AACjCC,IAAAA,QAAQ,EAAEb,CAAC,CAACoB,QAAF,CAAWpB,CAAC,CAACqB,EAAb,EAAiBX,gBAAjB;AADuB,GAAT,CAA1B;AAGA,SAAOV,CAAC,CAACsB,OAAF,CAAUtB,CAAC,CAACuB,MAAF,CAAS,CAAC,CAAV,EAAaJ,mBAAb,CAAV,EAA6CnB,CAAC,CAACwB,GAAF,CAAMb,aAAN,CAA7C,EAAmEJ,SAAnE,CAAP;AACD,CAbD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIkB,SAAS,GAAG,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACzC,SAAO,UAAUpB,GAAV,EAAe;AACpB,QAAIqB,KAAK,GAAGrB,GAAG,CAACqB,KAAhB;AAAA,QACIC,GAAG,GAAGtB,GAAG,CAACsB,GADd;AAAA,QAEIC,eAAe,GAAGvB,GAAG,CAACwB,UAF1B;AAAA,QAGIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,EAA7B,GAAkCA,eAHnD;AAIA,QAAIE,IAAI,GAAGD,UAAU,CAACC,IAAtB;AACA,QAAI,CAACA,IAAL,EAAW,OAAO,CAAC,GAAGhC,SAAS,CAACD,OAAd,EAAuB,EAAvB,EAA2BQ,GAA3B,EAAgC;AAChD0B,MAAAA,MAAM,EAAE,EADwC;AAEhDC,MAAAA,YAAY,EAAE,EAFkC;AAGhD1B,MAAAA,SAAS,EAAE;AAHqC,KAAhC,CAAP;AAKX,QAAI2B,SAAS,GAAGR,MAAM,CAACS,KAAP,CAAaR,KAAb,EAAoBC,GAApB,CAAhB;AACA,QAAIQ,QAAQ,GAAGL,IAAI,CAACM,MAAL,CAAYH,SAAZ,CAAf;AACA,QAAI3B,SAAS,GAAGF,cAAc,CAACC,GAAD,EAAM8B,QAAQ,CAAC7B,SAAf,CAA9B;AACA,QAAI0B,YAAY,GAAG,CAAC,GAAG/B,QAAQ,CAACJ,OAAb,EAAsBsC,QAAQ,CAACJ,MAA/B,CAAnB;AACA,WAAO,CAAC,GAAGjC,SAAS,CAACD,OAAd,EAAuB,EAAvB,EAA2BQ,GAA3B,EAAgC;AACrCC,MAAAA,SAAS,EAAEA,SAD0B;AAErC0B,MAAAA,YAAY,EAAEA,YAFuB;AAGrCD,MAAAA,MAAM,EAAEI,QAAQ,CAACJ;AAHoB,KAAhC,CAAP;AAKD,GApBD;AAqBD,CAtBD;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIM,cAAc,GAAG,SAASA,cAAT,GAA0B;AAC7C,SAAO,UAAUC,gBAAV,EAA4B;AACjC,WAAOvC,CAAC,CAACY,MAAF,CAAS;AACd4B,MAAAA,IAAI,EAAExC,CAAC,CAACwB,GAAF,CAAMC,SAAS,CAACc,gBAAgB,CAACb,MAAlB,CAAf;AADQ,KAAT,EAEJa,gBAFI,CAAP;AAGD,GAJD;AAKD,CAND;;AAQA,IAAIE,QAAQ,GAAGH,cAAf;AACA1C,OAAO,CAACE,OAAR,GAAkB2C,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _scale = _interopRequireDefault(require(\"../run/scale\"));\n\nvar _resolve = _interopRequireDefault(require(\"../indices/resolve\"));\n\nvar getCharacterSpacing = R.pathOr(0, ['attributes', 'characterSpacing']);\n/**\n * Scale run positions\n *\n * @param  {Object}  run\n * @param  {Array}  positions\n * @return {Array} scaled positions\n */\n\nvar scalePositions = function scalePositions(run, positions) {\n  var multScale = R.multiply((0, _scale.default)(run));\n  var characterSpacing = getCharacterSpacing(run);\n  var scalePosition = R.evolve({\n    xAdvance: R.o(R.add(characterSpacing), multScale),\n    yAdvance: multScale,\n    xOffset: multScale,\n    yOffset: multScale\n  });\n  var subCharacterSpacing = R.evolve({\n    xAdvance: R.subtract(R.__, characterSpacing)\n  });\n  return R.compose(R.adjust(-1, subCharacterSpacing), R.map(scalePosition))(positions);\n};\n/**\n * Create glyph run\n *\n * @param  {String}  string\n * @param  {Object}  run\n * @return {Object}  glyph run\n */\n\n\nvar layoutRun = function layoutRun(string) {\n  return function (run) {\n    var start = run.start,\n        end = run.end,\n        _run$attributes = run.attributes,\n        attributes = _run$attributes === void 0 ? {} : _run$attributes;\n    var font = attributes.font;\n    if (!font) return (0, _extends2.default)({}, run, {\n      glyphs: [],\n      glyphIndices: [],\n      positions: []\n    });\n    var runString = string.slice(start, end);\n    var glyphRun = font.layout(runString);\n    var positions = scalePositions(run, glyphRun.positions);\n    var glyphIndices = (0, _resolve.default)(glyphRun.glyphs);\n    return (0, _extends2.default)({}, run, {\n      positions: positions,\n      glyphIndices: glyphIndices,\n      glyphs: glyphRun.glyphs\n    });\n  };\n};\n/**\n * Generate glyphs for single attributed string\n *\n * @param  {Object}  layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings\n * @return {Array} attributed string with glyphs\n */\n\n\nvar generateGlyphs = function generateGlyphs() {\n  return function (attributedString) {\n    return R.evolve({\n      runs: R.map(layoutRun(attributedString.string))\n    })(attributedString);\n  };\n};\n\nvar _default = generateGlyphs;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}