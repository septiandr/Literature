{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _pdfkit = require(\"@react-pdf/pdfkit\");\n/* eslint-disable class-methods-use-this */\n\n\nvar StandardFont = /*#__PURE__*/function () {\n  function StandardFont(src) {\n    this.name = src;\n    this.src = _pdfkit.PDFFont.open(null, src);\n  }\n\n  var _proto = StandardFont.prototype;\n\n  _proto.encode = function encode(str) {\n    return this.src.encode(str);\n  };\n\n  _proto.layout = function layout(str) {\n    var _this = this;\n\n    var _this$encode = this.encode(str),\n        encoded = _this$encode[0],\n        positions = _this$encode[1];\n\n    return {\n      positions: positions,\n      stringIndices: positions.map(function (_, i) {\n        return i;\n      }),\n      glyphs: encoded.map(function (g, i) {\n        var glyph = _this.getGlyph(parseInt(g, 16));\n\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  };\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    var glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  };\n\n  _proto.getGlyph = function getGlyph(id) {\n    return {\n      id: id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  };\n\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  } // Based on empirical observation\n  ;\n\n  (0, _createClass2.default)(StandardFont, [{\n    key: \"ascent\",\n    get: function get() {\n      return 900;\n    } // Based on empirical observation\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return 650;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return 550;\n\n        default:\n          return 690;\n      }\n    } // Based on empirical observation\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return 440;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return 390;\n\n        default:\n          return 490;\n      }\n    } // Based on empirical observation\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return -220;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return -230;\n\n        default:\n          return -200;\n      }\n    }\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return 1000;\n    }\n  }]);\n  return StandardFont;\n}();\n\nvar _default = StandardFont;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/text/standardFont.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_createClass2","_pdfkit","StandardFont","src","name","PDFFont","open","_proto","prototype","encode","str","layout","_this","_this$encode","encoded","positions","stringIndices","map","_","i","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","font","characterToGlyph","hasGlyphForCodePoint","key","get","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _pdfkit = require(\"@react-pdf/pdfkit\");\n\n/* eslint-disable class-methods-use-this */\nvar StandardFont = /*#__PURE__*/function () {\n  function StandardFont(src) {\n    this.name = src;\n    this.src = _pdfkit.PDFFont.open(null, src);\n  }\n\n  var _proto = StandardFont.prototype;\n\n  _proto.encode = function encode(str) {\n    return this.src.encode(str);\n  };\n\n  _proto.layout = function layout(str) {\n    var _this = this;\n\n    var _this$encode = this.encode(str),\n        encoded = _this$encode[0],\n        positions = _this$encode[1];\n\n    return {\n      positions: positions,\n      stringIndices: positions.map(function (_, i) {\n        return i;\n      }),\n      glyphs: encoded.map(function (g, i) {\n        var glyph = _this.getGlyph(parseInt(g, 16));\n\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  };\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    var glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  };\n\n  _proto.getGlyph = function getGlyph(id) {\n    return {\n      id: id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  };\n\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  } // Based on empirical observation\n  ;\n\n  (0, _createClass2.default)(StandardFont, [{\n    key: \"ascent\",\n    get: function get() {\n      return 900;\n    } // Based on empirical observation\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return 650;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return 550;\n\n        default:\n          return 690;\n      }\n    } // Based on empirical observation\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return 440;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return 390;\n\n        default:\n          return 490;\n      }\n    } // Based on empirical observation\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n          return -220;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n          return -230;\n\n        default:\n          return -200;\n      }\n    }\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return 1000;\n    }\n  }]);\n  return StandardFont;\n}();\n\nvar _default = StandardFont;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}