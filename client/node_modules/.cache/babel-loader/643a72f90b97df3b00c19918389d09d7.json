{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _wrapWords = _interopRequireDefault(require(\"./wrapWords\"));\n\nvar _typesetter = _interopRequireDefault(require(\"./typesetter\"));\n\nvar _generateGlyphs = _interopRequireDefault(require(\"./generateGlyphs\"));\n\nvar _resolveYOffset = _interopRequireDefault(require(\"./resolveYOffset\"));\n\nvar _preprocessRuns = _interopRequireDefault(require(\"./preprocessRuns\"));\n\nvar _splitParagraphs = _interopRequireDefault(require(\"./splitParagraphs\"));\n\nvar _finalizeFragments = _interopRequireDefault(require(\"./finalizeFragments\"));\n\nvar _resolveAttachments = _interopRequireDefault(require(\"./resolveAttachments\"));\n\nvar _applyDefaultStyles = _interopRequireDefault(require(\"./applyDefaultStyles\"));\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a Container object\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n *\n * @param  {Object}  engines\n * @param  {Object}  attributed string\n * @param  {Object}  container rect\n * @param  {Object}  layout options\n * @return {Array} paragraph blocks\n */\n\n\nvar layoutEngine = function layoutEngine(engines, attributedString, container, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var processParagraphs = R.compose((0, _resolveYOffset.default)(engines, options), (0, _resolveAttachments.default)(engines, options), (0, _generateGlyphs.default)(engines, options), (0, _wrapWords.default)(engines, options));\n  return R.compose((0, _finalizeFragments.default)(engines, options), (0, _typesetter.default)(engines, options, container), R.map(processParagraphs), (0, _splitParagraphs.default)(engines, options), (0, _preprocessRuns.default)(engines, options), (0, _applyDefaultStyles.default)(engines, options))(attributedString);\n};\n\nvar _default = R.curryN(3, layoutEngine);\n\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/textkit/lib/layout/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_wrapWords","_typesetter","_generateGlyphs","_resolveYOffset","_preprocessRuns","_splitParagraphs","_finalizeFragments","_resolveAttachments","_applyDefaultStyles","layoutEngine","engines","attributedString","container","options","processParagraphs","compose","map","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,UAAU,GAAGP,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIO,WAAW,GAAGR,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIQ,eAAe,GAAGT,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIS,eAAe,GAAGV,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIU,eAAe,GAAGX,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIW,gBAAgB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AAEA,IAAIY,kBAAkB,GAAGb,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA/C;;AAEA,IAAIa,mBAAmB,GAAGd,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAhD;;AAEA,IAAIc,mBAAmB,GAAGf,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIe,YAAY,GAAG,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,gBAA/B,EAAiDC,SAAjD,EAA4DC,OAA5D,EAAqE;AACtF,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,iBAAiB,GAAGf,CAAC,CAACgB,OAAF,CAAU,CAAC,GAAGZ,eAAe,CAACL,OAApB,EAA6BY,OAA7B,EAAsCG,OAAtC,CAAV,EAA0D,CAAC,GAAGN,mBAAmB,CAACT,OAAxB,EAAiCY,OAAjC,EAA0CG,OAA1C,CAA1D,EAA8G,CAAC,GAAGX,eAAe,CAACJ,OAApB,EAA6BY,OAA7B,EAAsCG,OAAtC,CAA9G,EAA8J,CAAC,GAAGb,UAAU,CAACF,OAAf,EAAwBY,OAAxB,EAAiCG,OAAjC,CAA9J,CAAxB;AACA,SAAOd,CAAC,CAACgB,OAAF,CAAU,CAAC,GAAGT,kBAAkB,CAACR,OAAvB,EAAgCY,OAAhC,EAAyCG,OAAzC,CAAV,EAA6D,CAAC,GAAGZ,WAAW,CAACH,OAAhB,EAAyBY,OAAzB,EAAkCG,OAAlC,EAA2CD,SAA3C,CAA7D,EAAoHb,CAAC,CAACiB,GAAF,CAAMF,iBAAN,CAApH,EAA8I,CAAC,GAAGT,gBAAgB,CAACP,OAArB,EAA8BY,OAA9B,EAAuCG,OAAvC,CAA9I,EAA+L,CAAC,GAAGT,eAAe,CAACN,OAApB,EAA6BY,OAA7B,EAAsCG,OAAtC,CAA/L,EAA+O,CAAC,GAAGL,mBAAmB,CAACV,OAAxB,EAAiCY,OAAjC,EAA0CG,OAA1C,CAA/O,EAAmSF,gBAAnS,CAAP;AACD,CAPD;;AASA,IAAIM,QAAQ,GAAGlB,CAAC,CAACmB,MAAF,CAAS,CAAT,EAAYT,YAAZ,CAAf;;AAEAb,OAAO,CAACE,OAAR,GAAkBmB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _wrapWords = _interopRequireDefault(require(\"./wrapWords\"));\n\nvar _typesetter = _interopRequireDefault(require(\"./typesetter\"));\n\nvar _generateGlyphs = _interopRequireDefault(require(\"./generateGlyphs\"));\n\nvar _resolveYOffset = _interopRequireDefault(require(\"./resolveYOffset\"));\n\nvar _preprocessRuns = _interopRequireDefault(require(\"./preprocessRuns\"));\n\nvar _splitParagraphs = _interopRequireDefault(require(\"./splitParagraphs\"));\n\nvar _finalizeFragments = _interopRequireDefault(require(\"./finalizeFragments\"));\n\nvar _resolveAttachments = _interopRequireDefault(require(\"./resolveAttachments\"));\n\nvar _applyDefaultStyles = _interopRequireDefault(require(\"./applyDefaultStyles\"));\n\n/**\n * A LayoutEngine is the main object that performs text layout.\n * It accepts an AttributedString and a Container object\n * to layout text into, and uses several helper objects to perform\n * various layout tasks. These objects can be overridden to customize\n * layout behavior.\n *\n * @param  {Object}  engines\n * @param  {Object}  attributed string\n * @param  {Object}  container rect\n * @param  {Object}  layout options\n * @return {Array} paragraph blocks\n */\nvar layoutEngine = function layoutEngine(engines, attributedString, container, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var processParagraphs = R.compose((0, _resolveYOffset.default)(engines, options), (0, _resolveAttachments.default)(engines, options), (0, _generateGlyphs.default)(engines, options), (0, _wrapWords.default)(engines, options));\n  return R.compose((0, _finalizeFragments.default)(engines, options), (0, _typesetter.default)(engines, options, container), R.map(processParagraphs), (0, _splitParagraphs.default)(engines, options), (0, _preprocessRuns.default)(engines, options), (0, _applyDefaultStyles.default)(engines, options))(attributedString);\n};\n\nvar _default = R.curryN(3, layoutEngine);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}