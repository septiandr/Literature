{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\n\nvar _default = renderGlyphs;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/render/lib/primitives/renderGlyphs.js"],"names":["exports","__esModule","default","renderGlyphs","ctx","glyphs","positions","x","y","options","scale","_fontSize","unitsPerEm","_font","font","advanceWidthScale","encodedGlyphs","encodeGlyphs","encodedPositions","map","pos","i","xAdvance","yAdvance","xOffset","yOffset","advanceWidth","_glyphs","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA8CC,CAA9C,EAAiDC,CAAjD,EAAoDC,OAApD,EAA6D;AAC9E,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,KAAK,GAAG,OAAON,GAAG,CAACO,SAAvB;AACA,MAAIC,UAAU,GAAGR,GAAG,CAACS,KAAJ,CAAUC,IAAV,CAAeF,UAAf,IAA6B,IAA9C;AACA,MAAIG,iBAAiB,GAAG,OAAOH,UAA/B,CAP8E,CAOnC;;AAE3C,MAAII,aAAa,GAAGZ,GAAG,CAACS,KAAJ,CAAUI,YAAV,CAAuBZ,MAAvB,CAApB;;AAEA,MAAIa,gBAAgB,GAAGZ,SAAS,CAACa,GAAV,CAAc,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AACrD,WAAO;AACLC,MAAAA,QAAQ,EAAEF,GAAG,CAACE,QAAJ,GAAeZ,KADpB;AAELa,MAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,GAAeb,KAFpB;AAGLc,MAAAA,OAAO,EAAEJ,GAAG,CAACI,OAHR;AAILC,MAAAA,OAAO,EAAEL,GAAG,CAACK,OAJR;AAKLC,MAAAA,YAAY,EAAErB,MAAM,CAACgB,CAAD,CAAN,CAAUK,YAAV,GAAyBX;AALlC,KAAP;AAOD,GARsB,CAAvB;AASA,SAAOX,GAAG,CAACuB,OAAJ,CAAYX,aAAZ,EAA2BE,gBAA3B,EAA6CX,CAA7C,EAAgDC,CAAhD,EAAmDC,OAAnD,CAAP;AACD,CArBD;;AAuBA,IAAImB,QAAQ,GAAGzB,YAAf;AACAH,OAAO,CAACE,OAAR,GAAkB0B,QAAlB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm; // Glyph encoding and positioning\n\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\n\nvar _default = renderGlyphs;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}