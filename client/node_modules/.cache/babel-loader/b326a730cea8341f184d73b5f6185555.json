{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"@react-pdf/textkit/lib/run/advanceWidth\"));\n\nvar _advanceWidth2 = _interopRequireDefault(require(\"@react-pdf/textkit/lib/attributedString/advanceWidth\"));\n\nvar _renderGlyphs = _interopRequireDefault(require(\"./renderGlyphs\"));\n\nvar renderRun = function renderRun(ctx, run) {\n  var runAdvanceWidth = (0, _advanceWidth.default)(run);\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      color = _run$attributes.color,\n      opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      (0, _renderGlyphs.default)(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  ctx.save();\n  var x = R.pathOr(0, ['box', 'x'], line);\n  var y = R.pathOr(0, ['box', 'y'], line);\n  var font = R.pathOr(1, ['runs', 0, 'attributes', 'font'], line);\n  var scale = R.pathOr(1, ['runs', 0, 'attributes', 'scale'], line);\n  var width = (0, _advanceWidth2.default)(line);\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun(ctx, run);\n  });\n  ctx.restore();\n};\n\nvar renderSvgText = function renderSvgText(ctx) {\n  return function (node) {\n    node.children.forEach(function (span) {\n      return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n    });\n    return node;\n  };\n};\n\nvar _default = renderSvgText;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/render/lib/primitives/renderSvgText.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_advanceWidth","_advanceWidth2","_renderGlyphs","renderRun","ctx","run","runAdvanceWidth","_run$attributes","attributes","font","fontSize","color","opacity","fillColor","fillOpacity","sbix","COLR","CPAL","save","translate","ascent","i","glyphs","length","position","positions","glyph","xOffset","yOffset","render","restore","xAdvance","yAdvance","name","error","console","log","renderSpan","line","textAnchor","dominantBaseline","x","pathOr","y","scale","width","xHeight","descent","capHeight","xTranslate","yTranslate","runs","forEach","renderSvgText","node","children","span","lines","props","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _advanceWidth = _interopRequireDefault(require(\"@react-pdf/textkit/lib/run/advanceWidth\"));\n\nvar _advanceWidth2 = _interopRequireDefault(require(\"@react-pdf/textkit/lib/attributedString/advanceWidth\"));\n\nvar _renderGlyphs = _interopRequireDefault(require(\"./renderGlyphs\"));\n\nvar renderRun = function renderRun(ctx, run) {\n  var runAdvanceWidth = (0, _advanceWidth.default)(run);\n  var _run$attributes = run.attributes,\n      font = _run$attributes.font,\n      fontSize = _run$attributes.fontSize,\n      color = _run$attributes.color,\n      opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      (0, _renderGlyphs.default)(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  ctx.save();\n  var x = R.pathOr(0, ['box', 'x'], line);\n  var y = R.pathOr(0, ['box', 'y'], line);\n  var font = R.pathOr(1, ['runs', 0, 'attributes', 'font'], line);\n  var scale = R.pathOr(1, ['runs', 0, 'attributes', 'scale'], line);\n  var width = (0, _advanceWidth2.default)(line);\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n\n    case 'end':\n      xTranslate = x - width;\n      break;\n\n    default:\n      xTranslate = x;\n      break;\n  }\n\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n\n    default:\n      yTranslate = y;\n      break;\n  }\n\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun(ctx, run);\n  });\n  ctx.restore();\n};\n\nvar renderSvgText = function renderSvgText(ctx) {\n  return function (node) {\n    node.children.forEach(function (span) {\n      return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n    });\n    return node;\n  };\n};\n\nvar _default = renderSvgText;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}