{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar getAspectRatio = function getAspectRatio(viewbox) {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node, width, widthMode, height, heightMode) {\n  var aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY || widthMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    return {\n      width: width,\n      height: width / aspectRatio\n    };\n  }\n\n  if (heightMode === _yoga.default.MEASURE_MODE_EXACTLY) {\n    return {\n      width: height * aspectRatio\n    };\n  }\n\n  return {};\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/svg/measureSvg.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_yoga","getAspectRatio","viewbox","maxX","minX","maxY","minY","measureCanvas","page","node","width","widthMode","height","heightMode","aspectRatio","props","viewBox","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAAD,CAArC;;AAEAE,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGJ,uBAAuB,CAACD,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIM,KAAK,GAAGP,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAlC;;AAEA,IAAIO,cAAc,GAAG,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AACpD,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AACd,SAAO,CAACA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,IAAxB,KAAiCF,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACI,IAAxD,CAAP;AACD,CAHD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,SAA1C,EAAqDC,MAArD,EAA6DC,UAA7D,EAAyE;AAC3F,MAAIC,WAAW,GAAGb,cAAc,CAACQ,IAAI,CAACM,KAAL,CAAWC,OAAZ,CAAd,IAAsC,CAAxD;;AAEA,MAAIL,SAAS,KAAKX,KAAK,CAACF,OAAN,CAAcmB,oBAA5B,IAAoDN,SAAS,KAAKX,KAAK,CAACF,OAAN,CAAcoB,oBAApF,EAA0G;AACxG,WAAO;AACLR,MAAAA,KAAK,EAAEA,KADF;AAELE,MAAAA,MAAM,EAAEF,KAAK,GAAGI;AAFX,KAAP;AAID;;AAED,MAAID,UAAU,KAAKb,KAAK,CAACF,OAAN,CAAcmB,oBAAjC,EAAuD;AACrD,WAAO;AACLP,MAAAA,KAAK,EAAEE,MAAM,GAAGE;AADX,KAAP;AAGD;;AAED,SAAO,EAAP;AACD,CAjBD;;AAmBA,IAAIK,QAAQ,GAAGpB,CAAC,CAACqB,MAAF,CAAS,CAAT,EAAYb,aAAZ,CAAf;;AAEAX,OAAO,CAACE,OAAR,GAAkBqB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar getAspectRatio = function getAspectRatio(viewbox) {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node, width, widthMode, height, heightMode) {\n  var aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY || widthMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    return {\n      width: width,\n      height: width / aspectRatio\n    };\n  }\n\n  if (heightMode === _yoga.default.MEASURE_MODE_EXACTLY) {\n    return {\n      width: height * aspectRatio\n    };\n  }\n\n  return {};\n};\n\nvar _default = R.curryN(6, measureCanvas);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}