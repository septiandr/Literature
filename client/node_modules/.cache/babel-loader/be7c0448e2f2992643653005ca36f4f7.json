{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\n * Append glyph indices with given length\n *\n * Ex. appendIndices(3, [0, 1, 2, 2]) => [0, 1, 2, 2, 3, 3, 3]\n *\n * @param  {number}  length\n * @param  {Array}  glyph indices\n * @return {Array}  extended glyph indices\n */\n\n\nvar appendIndices = function appendIndices(length, indices) {\n  return R.converge(R.concat, [R.identity, R.converge(R.repeat, [R.either(R.o(R.inc, R.last), // Value should be last plus 1\n  R.always(0) // Or zero if inserting at beggining\n  ), R.always(length)])])(indices);\n};\n\nvar _default = R.curryN(2, appendIndices);\n\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/textkit/lib/indices/append.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","appendIndices","length","indices","converge","concat","identity","repeat","either","o","inc","last","always","_default","curryN"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AAC1D,SAAOH,CAAC,CAACI,QAAF,CAAWJ,CAAC,CAACK,MAAb,EAAqB,CAACL,CAAC,CAACM,QAAH,EAAaN,CAAC,CAACI,QAAF,CAAWJ,CAAC,CAACO,MAAb,EAAqB,CAACP,CAAC,CAACQ,MAAF,CAASR,CAAC,CAACS,CAAF,CAAIT,CAAC,CAACU,GAAN,EAAWV,CAAC,CAACW,IAAb,CAAT,EAA6B;AAC5FX,EAAAA,CAAC,CAACY,MAAF,CAAS,CAAT,CAD+D,CACnD;AADmD,GAAD,EAE3DZ,CAAC,CAACY,MAAF,CAASV,MAAT,CAF2D,CAArB,CAAb,CAArB,EAEiBC,OAFjB,CAAP;AAGD,CAJD;;AAMA,IAAIU,QAAQ,GAAGb,CAAC,CAACc,MAAF,CAAS,CAAT,EAAYb,aAAZ,CAAf;;AAEAJ,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Append glyph indices with given length\n *\n * Ex. appendIndices(3, [0, 1, 2, 2]) => [0, 1, 2, 2, 3, 3, 3]\n *\n * @param  {number}  length\n * @param  {Array}  glyph indices\n * @return {Array}  extended glyph indices\n */\nvar appendIndices = function appendIndices(length, indices) {\n  return R.converge(R.concat, [R.identity, R.converge(R.repeat, [R.either(R.o(R.inc, R.last), // Value should be last plus 1\n  R.always(0) // Or zero if inserting at beggining\n  ), R.always(length)])])(indices);\n};\n\nvar _default = R.curryN(2, appendIndices);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}