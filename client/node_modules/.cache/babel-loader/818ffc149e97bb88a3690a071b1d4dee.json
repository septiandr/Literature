{"ast":null,"code":"var _jsxFileName = \"D:\\\\pelatihan\\\\batch 27\\\\Literature\\\\client\\\\src\\\\components\\\\card.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport './card.css';\nimport dateFormat from \"dateformat\";\nimport { Document, Page } from 'react-pdf';\nimport { useState } from 'react';\nimport { Viewer } from '@react-pdf-viewer/core'; // install this library\n// Plugins\n\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'; // install this library\n// Import the styles\n\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css'; // Worker\n\nimport { Worker } from '@react-pdf-viewer/core'; // install this library\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n\n  let {\n    item\n  } = _ref;\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\n  const [viewPdf, setViewPdf] = useState(null);\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => history.push(`/detail-literature/${item.id}`),\n    id: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-container\",\n      children: [viewPdf && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          workerUrl: require(`../../../server/uploads/${item.image}`).default,\n          children: /*#__PURE__*/_jsxDEV(Viewer, {\n            fileUrl: viewPdf,\n            plugins: [defaultLayoutPluginInstance]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), !viewPdf && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No pdf file selected\"\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"detail\",\n      name: \"detail\",\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: dateFormat(item.publication_date, \"yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, item.idUser, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"0dkjzAb95XQscQgl/zYyQhmPYi0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/src/components/card.js"],"names":["useHistory","dateFormat","Document","Page","useState","Viewer","defaultLayoutPlugin","Worker","Card","item","defaultLayoutPluginInstance","viewPdf","setViewPdf","history","push","id","require","image","default","title","author","publication_date","idUser"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,WAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,wBAAvB,C,CAAiD;AACjD;;AACA,SAASC,mBAAT,QAAoC,kCAApC,C,CAAwE;AACxE;;AACA,OAAO,6CAAP;AACA,OAAO,uDAAP,C,CACA;;AACA,SAASC,MAAT,QAAuB,wBAAvB,C,CAAiD;;;;AAEjD,eAAe,SAASC,IAAT,OAAqB;AAAA;;AAAA,MAAP;AAACC,IAAAA;AAAD,GAAO;AAChC,QAAMC,2BAA2B,GAAGJ,mBAAmB,EAAvD;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAGA,MAAIS,OAAO,GAAEb,UAAU,EAAvB;AACA,sBACI;AAAK,IAAA,OAAO,EAAG,MAAIa,OAAO,CAACC,IAAR,CAAc,sBAAqBL,IAAI,CAACM,EAAG,EAA3C,CAAnB;AAAoF,IAAA,EAAE,EAAC,MAAvF;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBAEHJ,OAAO,iBAAE;AAAA,+BAAE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAGK,OAAO,CAAE,2BAA0BP,IAAI,CAACQ,KAAM,EAAvC,CAAP,CAAiDC,OAArE;AAAA,iCACV,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEP,OAAjB;AACE,YAAA,OAAO,EAAE,CAACD,2BAAD;AADX;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA;AAAF,uBAFN,EAQL,CAACC,OAAD,iBAAU;AAAA;AAAA,uBARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAO,MAAA,EAAE,EAAC,QAAV;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAA,gBAAkCF,IAAI,CAACU;AAAvC;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,8BACI;AAAA,kBAAIV,IAAI,CAACW;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAInB,UAAU,CAACQ,IAAI,CAACY,gBAAN,EAAwB,MAAxB;AAAd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,KAAuEZ,IAAI,CAACa,MAA5E;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA1BuBd,I;UAMPR,U;;;KANOQ,I","sourcesContent":["import { useHistory } from 'react-router-dom'\r\nimport './card.css'\r\nimport dateFormat from \"dateformat\";\r\nimport { Document, Page } from 'react-pdf';\r\nimport { useState } from 'react';\r\nimport { Viewer } from '@react-pdf-viewer/core'; // install this library\r\n// Plugins\r\nimport { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout'; // install this library\r\n// Import the styles\r\nimport '@react-pdf-viewer/core/lib/styles/index.css';\r\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\r\n// Worker\r\nimport { Worker } from '@react-pdf-viewer/core'; // install this library\r\n\r\nexport default function Card({item}){\r\n    const defaultLayoutPluginInstance = defaultLayoutPlugin();\r\n   \r\n    const [viewPdf, setViewPdf]=useState(null);\r\n\r\n    \r\n    let history =useHistory()\r\n    return(\r\n        <div onClick ={()=>history.push(`/detail-literature/${item.id}`)} key={item.idUser} id=\"card\">\r\n            <div className='pdf-container'>\r\n        {/* show pdf conditionally (if we have one)  */}\r\n        {viewPdf&&<><Worker workerUrl= {require(`../../../server/uploads/${item.image}`).default}>\r\n          <Viewer fileUrl={viewPdf}\r\n            plugins={[defaultLayoutPluginInstance]} />\r\n      </Worker></>}\r\n\r\n      {/* if we dont have pdf or viewPdf state is null */}\r\n      {!viewPdf&&<>No pdf file selected</>}\r\n      </div>\r\n            <label id=\"detail\" name=\"detail\">{item.title}</label>\r\n            <div>\r\n                <p>{item.author}</p>\r\n                <p>{dateFormat(item.publication_date, \"yyyy\")}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}