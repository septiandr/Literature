{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar zero = R.always(0);\nvar getTop = R.pathOr(0, ['box', 'top']);\nvar hasFixedHeight = R.hasPath(['style', 'height']);\n\nvar subtractHeight = function subtractHeight(value) {\n  return R.o(R.subtract(R.__, value), R.path(['box', 'height']));\n};\n\nvar splitNode = function splitNode(node, height) {\n  if (!node) return [null, null];\n  var nodeTop = getTop(node); // TODO: We should keep style untouched\n\n  var current = R.evolve({\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero\n    }),\n    box: {\n      height: R.always(height - nodeTop),\n      borderBottomWidth: zero\n    }\n  })(node);\n  var nextHeight = R.ifElse(hasFixedHeight, subtractHeight(height - nodeTop), R.always(null))(node); // TODO: We should keep style untouched\n\n  var next = R.evolve({\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero\n    }\n  })(node);\n  return [current, next];\n};\n\nvar _default = splitNode;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/node/splitNode.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","zero","always","getTop","pathOr","hasFixedHeight","hasPath","subtractHeight","value","o","subtract","__","path","splitNode","node","height","nodeTop","current","evolve","style","marginBottom","paddingBottom","borderBottomWidth","borderBottomLeftRadius","borderBottomRightRadius","box","nextHeight","ifElse","next","marginTop","paddingTop","borderTopWidth","borderTopLeftRadius","borderTopRightRadius","top","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,CAAC,GAAGL,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAA/B;;AAEA,IAAIK,IAAI,GAAGD,CAAC,CAACE,MAAF,CAAS,CAAT,CAAX;AACA,IAAIC,MAAM,GAAGH,CAAC,CAACI,MAAF,CAAS,CAAT,EAAY,CAAC,KAAD,EAAQ,KAAR,CAAZ,CAAb;AACA,IAAIC,cAAc,GAAGL,CAAC,CAACM,OAAF,CAAU,CAAC,OAAD,EAAU,QAAV,CAAV,CAArB;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,SAAOR,CAAC,CAACS,CAAF,CAAIT,CAAC,CAACU,QAAF,CAAWV,CAAC,CAACW,EAAb,EAAiBH,KAAjB,CAAJ,EAA6BR,CAAC,CAACY,IAAF,CAAO,CAAC,KAAD,EAAQ,QAAR,CAAP,CAA7B,CAAP;AACD,CAFD;;AAIA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/C,MAAI,CAACD,IAAL,EAAW,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACX,MAAIE,OAAO,GAAGb,MAAM,CAACW,IAAD,CAApB,CAF+C,CAEnB;;AAE5B,MAAIG,OAAO,GAAGjB,CAAC,CAACkB,MAAF,CAAS;AACrBC,IAAAA,KAAK,EAAEnB,CAAC,CAACkB,MAAF,CAAS;AACdE,MAAAA,YAAY,EAAEnB,IADA;AAEdoB,MAAAA,aAAa,EAAEpB,IAFD;AAGdqB,MAAAA,iBAAiB,EAAErB,IAHL;AAIdsB,MAAAA,sBAAsB,EAAEtB,IAJV;AAKduB,MAAAA,uBAAuB,EAAEvB;AALX,KAAT,CADc;AAQrBwB,IAAAA,GAAG,EAAE;AACHV,MAAAA,MAAM,EAAEf,CAAC,CAACE,MAAF,CAASa,MAAM,GAAGC,OAAlB,CADL;AAEHM,MAAAA,iBAAiB,EAAErB;AAFhB;AARgB,GAAT,EAYXa,IAZW,CAAd;AAaA,MAAIY,UAAU,GAAG1B,CAAC,CAAC2B,MAAF,CAAStB,cAAT,EAAyBE,cAAc,CAACQ,MAAM,GAAGC,OAAV,CAAvC,EAA2DhB,CAAC,CAACE,MAAF,CAAS,IAAT,CAA3D,EAA2EY,IAA3E,CAAjB,CAjB+C,CAiBoD;;AAEnG,MAAIc,IAAI,GAAG5B,CAAC,CAACkB,MAAF,CAAS;AAClBC,IAAAA,KAAK,EAAEnB,CAAC,CAACkB,MAAF,CAAS;AACdW,MAAAA,SAAS,EAAE5B,IADG;AAEd6B,MAAAA,UAAU,EAAE7B,IAFE;AAGd8B,MAAAA,cAAc,EAAE9B,IAHF;AAId+B,MAAAA,mBAAmB,EAAE/B,IAJP;AAKdgC,MAAAA,oBAAoB,EAAEhC;AALR,KAAT,CADW;AAQlBwB,IAAAA,GAAG,EAAE;AACHS,MAAAA,GAAG,EAAEjC,IADF;AAEHc,MAAAA,MAAM,EAAEf,CAAC,CAACE,MAAF,CAASwB,UAAT,CAFL;AAGHK,MAAAA,cAAc,EAAE9B;AAHb;AARa,GAAT,EAaRa,IAbQ,CAAX;AAcA,SAAO,CAACG,OAAD,EAAUW,IAAV,CAAP;AACD,CAlCD;;AAoCA,IAAIO,QAAQ,GAAGtB,SAAf;AACAhB,OAAO,CAACE,OAAR,GAAkBoC,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar zero = R.always(0);\nvar getTop = R.pathOr(0, ['box', 'top']);\nvar hasFixedHeight = R.hasPath(['style', 'height']);\n\nvar subtractHeight = function subtractHeight(value) {\n  return R.o(R.subtract(R.__, value), R.path(['box', 'height']));\n};\n\nvar splitNode = function splitNode(node, height) {\n  if (!node) return [null, null];\n  var nodeTop = getTop(node); // TODO: We should keep style untouched\n\n  var current = R.evolve({\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero\n    }),\n    box: {\n      height: R.always(height - nodeTop),\n      borderBottomWidth: zero\n    }\n  })(node);\n  var nextHeight = R.ifElse(hasFixedHeight, subtractHeight(height - nodeTop), R.always(null))(node); // TODO: We should keep style untouched\n\n  var next = R.evolve({\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero\n    }\n  })(node);\n  return [current, next];\n};\n\nvar _default = splitNode;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}