{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Slice block at given height\n *\n * @param  {number}  height\n * @param  {Object}  paragraph block\n * @return {number} sliced paragraph block\n */\n\nvar sliceAtHeight = function sliceAtHeight(height) {\n  return function (block) {\n    var newBlock = [];\n    var counter = 0;\n\n    for (var i = 0; i < block.length; i += 1) {\n      var line = block[i];\n      counter += line.box.height;\n\n      if (counter < height) {\n        newBlock.push(line);\n      } else {\n        break;\n      }\n    }\n\n    return newBlock;\n  };\n};\n\nvar _default = sliceAtHeight;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/textkit/lib/block/sliceAtHeight.js"],"names":["exports","__esModule","default","sliceAtHeight","height","block","newBlock","counter","i","length","line","box","push","_default"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACjD,SAAO,UAAUC,KAAV,EAAiB;AACtB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,CAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAIE,IAAI,GAAGL,KAAK,CAACG,CAAD,CAAhB;AACAD,MAAAA,OAAO,IAAIG,IAAI,CAACC,GAAL,CAASP,MAApB;;AAEA,UAAIG,OAAO,GAAGH,MAAd,EAAsB;AACpBE,QAAAA,QAAQ,CAACM,IAAT,CAAcF,IAAd;AACD,OAFD,MAEO;AACL;AACD;AACF;;AAED,WAAOJ,QAAP;AACD,GAhBD;AAiBD,CAlBD;;AAoBA,IAAIO,QAAQ,GAAGV,aAAf;AACAH,OAAO,CAACE,OAAR,GAAkBW,QAAlB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Slice block at given height\n *\n * @param  {number}  height\n * @param  {Object}  paragraph block\n * @return {number} sliced paragraph block\n */\nvar sliceAtHeight = function sliceAtHeight(height) {\n  return function (block) {\n    var newBlock = [];\n    var counter = 0;\n\n    for (var i = 0; i < block.length; i += 1) {\n      var line = block[i];\n      counter += line.box.height;\n\n      if (counter < height) {\n        newBlock.push(line);\n      } else {\n        break;\n      }\n    }\n\n    return newBlock;\n  };\n};\n\nvar _default = sliceAtHeight;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}