{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar getProp = function getProp(d, p, v) {\n  return R.pathOr(d, ['props', p], v);\n};\n\nvar renderRect = function renderRect(ctx) {\n  return function (node) {\n    var x = getProp(0, 'x', node);\n    var y = getProp(0, 'y', node);\n    var rx = getProp(0, 'rx', node);\n    var ry = getProp(0, 'ry', node);\n    var width = getProp(0, 'width', node);\n    var height = getProp(0, 'height', node);\n    if (!width || !height) return node;\n\n    if (rx && ry) {\n      var krx = rx * KAPPA;\n      var kry = ry * KAPPA;\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x - rx + width, y);\n      ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n      ctx.lineTo(x + width, y + height - ry);\n      ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n      ctx.lineTo(x + rx, y + height);\n      ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n      ctx.lineTo(x, y + ry);\n      ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n    } else {\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + width, y);\n      ctx.lineTo(x + width, y + height);\n      ctx.lineTo(x, y + height);\n    }\n\n    ctx.closePath();\n    return node;\n  };\n};\n\nvar _default = renderRect;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/render/lib/primitives/renderRect.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","KAPPA","Math","sqrt","getProp","d","p","v","pathOr","renderRect","ctx","node","x","y","rx","ry","width","height","krx","kry","moveTo","lineTo","bezierCurveTo","closePath","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nvar getProp = function getProp(d, p, v) {\n  return R.pathOr(d, ['props', p], v);\n};\n\nvar renderRect = function renderRect(ctx) {\n  return function (node) {\n    var x = getProp(0, 'x', node);\n    var y = getProp(0, 'y', node);\n    var rx = getProp(0, 'rx', node);\n    var ry = getProp(0, 'ry', node);\n    var width = getProp(0, 'width', node);\n    var height = getProp(0, 'height', node);\n    if (!width || !height) return node;\n\n    if (rx && ry) {\n      var krx = rx * KAPPA;\n      var kry = ry * KAPPA;\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x - rx + width, y);\n      ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n      ctx.lineTo(x + width, y + height - ry);\n      ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n      ctx.lineTo(x + rx, y + height);\n      ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n      ctx.lineTo(x, y + ry);\n      ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n    } else {\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + width, y);\n      ctx.lineTo(x + width, y + height);\n      ctx.lineTo(x, y + height);\n    }\n\n    ctx.closePath();\n    return node;\n  };\n};\n\nvar _default = renderRect;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}