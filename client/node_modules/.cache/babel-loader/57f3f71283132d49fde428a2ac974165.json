{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _emoji = _interopRequireDefault(require(\"../text/emoji\"));\n\nvar _fetchImage = _interopRequireDefault(require(\"../image/fetchImage\"));\n\nvar isImage = R.propEq('type', P.Image);\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\n\nvar fetchAssets = function fetchAssets(fontStore, node) {\n  var _node$children;\n\n  var promises = [];\n  var listToExplore = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.slice(0)) || [];\n  var emojiSource = fontStore ? fontStore.getEmojiSource() : null;\n\n  while (listToExplore.length > 0) {\n    var _n$style;\n\n    var n = listToExplore.shift();\n\n    if (isImage(n)) {\n      promises.push((0, _fetchImage.default)(n));\n    }\n\n    if (fontStore && (_n$style = n.style) !== null && _n$style !== void 0 && _n$style.fontFamily) {\n      promises.push(fontStore.load(n.style));\n    }\n\n    if (typeof n === 'string') {\n      promises.push.apply(promises, (0, _emoji.default)(n, emojiSource));\n    }\n\n    if (typeof n.value === 'string') {\n      promises.push.apply(promises, (0, _emoji.default)(n.value, emojiSource));\n    }\n\n    if (n.children) {\n      n.children.forEach(function (childNode) {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\n\n\nvar resolveAssets = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(node, fontStore) {\n    var promises;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            promises = fetchAssets(fontStore, node);\n            _context.next = 3;\n            return Promise.all(promises);\n\n          case 3:\n            return _context.abrupt(\"return\", node);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function resolveAssets(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = resolveAssets;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/steps/resolveAssets.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","default","_regenerator","_asyncToGenerator2","R","P","_emoji","_fetchImage","isImage","propEq","Image","fetchAssets","fontStore","node","_node$children","promises","listToExplore","children","slice","emojiSource","getEmojiSource","length","_n$style","n","shift","push","style","fontFamily","load","apply","value","forEach","childNode","resolveAssets","_ref","mark","_callee","wrap","_callee$","_context","prev","next","Promise","all","abrupt","stop","_x","_x2","arguments","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _emoji = _interopRequireDefault(require(\"../text/emoji\"));\n\nvar _fetchImage = _interopRequireDefault(require(\"../image/fetchImage\"));\n\nvar isImage = R.propEq('type', P.Image);\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\n\nvar fetchAssets = function fetchAssets(fontStore, node) {\n  var _node$children;\n\n  var promises = [];\n  var listToExplore = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.slice(0)) || [];\n  var emojiSource = fontStore ? fontStore.getEmojiSource() : null;\n\n  while (listToExplore.length > 0) {\n    var _n$style;\n\n    var n = listToExplore.shift();\n\n    if (isImage(n)) {\n      promises.push((0, _fetchImage.default)(n));\n    }\n\n    if (fontStore && (_n$style = n.style) !== null && _n$style !== void 0 && _n$style.fontFamily) {\n      promises.push(fontStore.load(n.style));\n    }\n\n    if (typeof n === 'string') {\n      promises.push.apply(promises, (0, _emoji.default)(n, emojiSource));\n    }\n\n    if (typeof n.value === 'string') {\n      promises.push.apply(promises, (0, _emoji.default)(n.value, emojiSource));\n    }\n\n    if (n.children) {\n      n.children.forEach(function (childNode) {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\n\n\nvar resolveAssets = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(node, fontStore) {\n    var promises;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            promises = fetchAssets(fontStore, node);\n            _context.next = 3;\n            return Promise.all(promises);\n\n          case 3:\n            return _context.abrupt(\"return\", node);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function resolveAssets(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = resolveAssets;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}