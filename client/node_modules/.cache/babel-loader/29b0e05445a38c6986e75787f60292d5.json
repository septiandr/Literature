{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _getRatio = _interopRequireDefault(require(\"./getRatio\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\nvar SAFETY_HEIGHT = 10;\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\n\nvar measureImage = function measureImage(page, node, width, widthMode, height, heightMode) {\n  var imageRatio = (0, _getRatio.default)(node);\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT; // Skip measure if image data not present yet\n\n  if (!node.image) return {\n    width: 0,\n    height: 0\n  };\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY && heightMode === _yoga.default.MEASURE_MODE_UNDEFINED) {\n    var scaledHeight = width / imageRatio;\n    return {\n      height: Math.min(pageArea, scaledHeight)\n    };\n  }\n\n  if (heightMode === _yoga.default.MEASURE_MODE_EXACTLY && (widthMode === _yoga.default.MEASURE_MODE_AT_MOST || widthMode === _yoga.default.MEASURE_MODE_UNDEFINED)) {\n    return {\n      width: Math.min(height * imageRatio, width)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY && heightMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    var _scaledHeight = width / imageRatio;\n\n    return {\n      height: Math.min(height, pageArea, _scaledHeight)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_AT_MOST && heightMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height)\n      };\n    }\n\n    return {\n      height: height,\n      width: Math.min(height * imageRatio, width)\n    };\n  }\n\n  return {\n    height: height,\n    width: width\n  };\n};\n\nvar _default = R.curryN(6, measureImage);\n\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/layout/lib/image/measureImage.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","default","R","_yoga","_getRatio","_getMargin","_getPadding","_isHeightAuto","SAFETY_HEIGHT","measureImage","page","node","width","widthMode","height","heightMode","imageRatio","imageMargin","pagePadding","pageArea","Infinity","box","paddingTop","paddingBottom","marginTop","marginBottom","image","MEASURE_MODE_EXACTLY","MEASURE_MODE_UNDEFINED","scaledHeight","Math","min","MEASURE_MODE_AT_MOST","_scaledHeight","_default","curryN"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _yoga = _interopRequireDefault(require(\"@react-pdf/yoga\"));\n\nvar _getRatio = _interopRequireDefault(require(\"./getRatio\"));\n\nvar _getMargin = _interopRequireDefault(require(\"../node/getMargin\"));\n\nvar _getPadding = _interopRequireDefault(require(\"../node/getPadding\"));\n\nvar _isHeightAuto = _interopRequireDefault(require(\"../page/isHeightAuto\"));\n\nvar SAFETY_HEIGHT = 10;\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\n\nvar measureImage = function measureImage(page, node, width, widthMode, height, heightMode) {\n  var imageRatio = (0, _getRatio.default)(node);\n  var imageMargin = (0, _getMargin.default)(node);\n  var pagePadding = (0, _getPadding.default)(page);\n  var pageArea = (0, _isHeightAuto.default)(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT; // Skip measure if image data not present yet\n\n  if (!node.image) return {\n    width: 0,\n    height: 0\n  };\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY && heightMode === _yoga.default.MEASURE_MODE_UNDEFINED) {\n    var scaledHeight = width / imageRatio;\n    return {\n      height: Math.min(pageArea, scaledHeight)\n    };\n  }\n\n  if (heightMode === _yoga.default.MEASURE_MODE_EXACTLY && (widthMode === _yoga.default.MEASURE_MODE_AT_MOST || widthMode === _yoga.default.MEASURE_MODE_UNDEFINED)) {\n    return {\n      width: Math.min(height * imageRatio, width)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_EXACTLY && heightMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    var _scaledHeight = width / imageRatio;\n\n    return {\n      height: Math.min(height, pageArea, _scaledHeight)\n    };\n  }\n\n  if (widthMode === _yoga.default.MEASURE_MODE_AT_MOST && heightMode === _yoga.default.MEASURE_MODE_AT_MOST) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height)\n      };\n    }\n\n    return {\n      height: height,\n      width: Math.min(height * imageRatio, width)\n    };\n  }\n\n  return {\n    height: height,\n    width: width\n  };\n};\n\nvar _default = R.curryN(6, measureImage);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}