{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar _default = expandBorders;\nexports.default = _default;","map":{"version":3,"sources":["D:/pelatihan/batch 27/Literature/client/node_modules/@react-pdf/stylesheet/lib/expand/borders.js"],"names":["_interopRequireWildcard","require","exports","__esModule","default","R","BORDER_SHORTHAND_REGEX","matchBorderShorthand","match","expandBorders","key","value","color","style","width","_ref","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar _default = expandBorders;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}